# Generated by Django 3.2.25 on 2025-04-07 15:21

from django.db import migrations, models
import django.db.models.deletion

def convert_case_codes_to_categories(apps, schema_editor):
    """Convert case_number_code strings to CaseCategory foreign keys"""
    DcrtData = apps.get_model('statistics', 'DcrtData')
    CaseCategory = apps.get_model('statistics', 'CaseCategory')
    db_alias = schema_editor.connection.alias

    # Create a lookup of codes to CaseCategory instances
    category_map = {
        cat.code: cat.id 
        for cat in CaseCategory.objects.using(db_alias).all()
    }

    updated_count = 0
    null_count = 0
    
    print("\nConverting case number codes to categories...")
    for record in DcrtData.objects.using(db_alias).iterator():
        old_code = record.case_number_code
        if old_code:
            # Try to find a matching category
            category_id = category_map.get(old_code)
            if category_id:
                DcrtData.objects.using(db_alias).filter(pk=record.pk).update(
                    case_number_code_new_id=category_id  # Note: _id suffix for FK
                )
                updated_count += 1
            else:
                print(f"Warning: No matching category found for code '{old_code}'. Setting to NULL.")
                null_count += 1
        else:
            null_count += 1

    print(f"Conversion complete. Updated: {updated_count}, Set to NULL: {null_count}")

class Migration(migrations.Migration):

    dependencies = [
        ('statistics', '0004_auto_20250407_1510'),
    ]

    operations = [
        # Step 1: Add new field with a temporary name
        migrations.AddField(
            model_name='dcrtdata',
            name='case_number_code_new',
            field=models.ForeignKey(
                blank=True, 
                null=True, 
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='dcrt_entries',
                to='statistics.casecategory'
            ),
        ),
        
        # Step 2: Copy data from old field to new field
        migrations.RunPython(
            convert_case_codes_to_categories,
            reverse_code=migrations.RunPython.noop
        ),
        
        # Step 3: Remove the old CharField
        migrations.RemoveField(
            model_name='dcrtdata',
            name='case_number_code',
        ),
        
        # Step 4: Rename the new field to the original name
        migrations.RenameField(
            model_name='dcrtdata',
            old_name='case_number_code_new',
            new_name='case_number_code',
        ),
    ]