Folder structure and content for: /home/ngobiro/projects/moringa_capstone

. Dockerfile
  Content:
  # Use Python 3.9 base image
  FROM python:3.9
  
  # Set environment variables
  ENV PYTHONDONTWRITEBYTECODE 1
  ENV PYTHONUNBUFFERED 1
  
  # Set work directory
  WORKDIR /code
  
  # Install system dependencies
  RUN apt-get update && \
      apt-get install -y --no-install-recommends \
      apt-utils \
      ffmpeg \
      postgresql-client \
      netcat-openbsd \
      && rm -rf /var/lib/apt/lists/*
  
  # Copy requirements and install dependencies
  COPY requirements.txt /code/
  RUN pip install --upgrade pip && \
      pip install --no-cache-dir -r requirements.txt
  
  # Copy project files
  COPY . /code/
  
  # Create data directory
  RUN mkdir -p /code/data/db
  
  # Set permissions as root
  RUN chmod +x /code/entrypoint.sh && \
      chmod -R 755 /code && \
      chmod -R 777 /code/data
  
  # Command to run
  CMD ["/bin/bash", "/code/entrypoint.sh"]

. apps/
  . __init__.py
    Content:


  . budget/
    . __init__.py
      Content:


    . admin.py
      Content:
      from django.contrib import admin
      
      # Register your models here.

    . apps.py
      Content:
      from django.apps import AppConfig
      
      
      class BudgetConfig(AppConfig):
          default_auto_field = 'django.db.models.BigAutoField'
          name = 'apps.budget'
          label = 'budget'

    . management/
      . commands/
        . seed_workplan.py
          Content:
          # apps/budget/management/commands/seed_workplan.py
          from django.core.management.base import BaseCommand
          from django.utils import timezone
          from apps.budget.models import (
              BudgetCategory, FinancialYear, WorkplanItem, 
              QuarterlyAllocation, PerformanceIndicator, TransformativeInitiative
          )
          
          class Command(BaseCommand):
              help = 'Seeds workplan data from financial workplan'
          
              def handle(self, *args, **kwargs):
                  self.stdout.write('Seeding workplan data...')
          
                  # Create Financial Year
                  fy, _ = FinancialYear.objects.get_or_create(
                      name="2021/22",
                      start_date="2021-07-01",
                      end_date="2022-06-30"
                  )
          
                  # Create Budget Categories
                  categories = {
                      'leadership': BudgetCategory.objects.create(
                          name="Transformative Leadership",
                          code="TL"
                      ),
                      'governance': BudgetCategory.objects.create(
                          name="Governance",
                          code="GOV"
                      ),
                  }
          
                  # Workplan Items
                  workplan_data = [
                      {
                          'name': 'Regular Committee Conferences and Business',
                          'budget_code': '2211002',
                          'total_amount': 1900000,
                          'item_type': 'regular',
                          'category': categories['leadership'],
                          'quarterly_allocation': {
                              1: 375000,
                              2: 375000,
                              3: 575000,
                              4: 575000
                          },
                          'performance_indicators': [
                              {
                                  'name': '% of Statutory Documents',
                                  'target': '100%',
                                  'measurement_frequency': 'Quarterly'
                              }
                          ]
                      },
                      {
                          'name': 'Daily Subsistence Allowance',
                          'budget_code': '2211003',
                          'total_amount': 1600000,
                          'item_type': 'regular',
                          'category': categories['governance'],
                          'quarterly_allocation': {
                              1: 400000,
                              2: 400000,
                              3: 400000,
                              4: 400000
                          }
                      },
                      # Add more items from workplan...
                  ]
          
                  for item_data in workplan_data:
                      # Create Workplan Item
                      workplan_item = WorkplanItem.objects.create(
                          name=item_data['name'],
                          budget_code=item_data['budget_code'],
                          total_amount=item_data['total_amount'],
                          item_type=item_data['item_type'],
                          category=item_data['category'],
                          financial_year=fy
                      )
          
                      # Create Quarterly Allocations
                      for quarter, amount in item_data['quarterly_allocation'].items():
                          QuarterlyAllocation.objects.create(
                              workplan_item=workplan_item,
                              quarter=quarter,
                              amount=amount
                          )
          
                      # Create Performance Indicators if any
                      if 'performance_indicators' in item_data:
                          for indicator in item_data['performance_indicators']:
                              PerformanceIndicator.objects.create(
                                  workplan_item=workplan_item,
                                  name=indicator['name'],
                                  target=indicator['target'],
                                  measurement_frequency=indicator['measurement_frequency']
                              )
          
                      # Create Transformative Initiative if applicable
                      if item_data['item_type'] == 'transformative':
                          TransformativeInitiative.objects.create(
                              workplan_item=workplan_item,
                              implementation_status='Not Started',
                              start_date=timezone.now(),
                              end_date=timezone.now() + timezone.timedelta(days=365)
                          )
          
                  self.stdout.write(self.style.SUCCESS('Successfully seeded workplan data'))

    . models.py
      Content:
      # apps/budget/models.py
      from django.db import models
      
      class BudgetCategory(models.Model):
          """Budget category/heading"""
          name = models.CharField(max_length=255)
          code = models.CharField(max_length=20)
          
          def __str__(self):
              return self.name
          
          class Meta:
              verbose_name_plural = "Budget Categories"
      
      class FinancialYear(models.Model):
          """Financial Year"""
          name = models.CharField(max_length=20)  # e.g. 2021/22
          start_date = models.DateField()
          end_date = models.DateField()
          
          def __str__(self):
              return self.name
      
      class WorkplanItem(models.Model):
          """Main workplan item"""
          ITEM_TYPES = [
              ('regular', 'Regular Activity'),
              ('transformative', 'Transformative Initiative')
          ]
          
          name = models.CharField(max_length=255)
          budget_code = models.CharField(max_length=20)  # e.g. 2211002
          description = models.TextField(blank=True)
          item_type = models.CharField(max_length=20, choices=ITEM_TYPES)
          category = models.ForeignKey(BudgetCategory, on_delete=models.CASCADE)
          financial_year = models.ForeignKey(FinancialYear, on_delete=models.CASCADE)
          total_amount = models.DecimalField(max_digits=12, decimal_places=2)
          
          def __str__(self):
              return f"{self.name} ({self.budget_code})"
      
      class QuarterlyAllocation(models.Model):
          """Quarterly budget allocations"""
          workplan_item = models.ForeignKey(WorkplanItem, on_delete=models.CASCADE)
          quarter = models.IntegerField(choices=[(1,'Q1'),(2,'Q2'),(3,'Q3'),(4,'Q4')])
          amount = models.DecimalField(max_digits=12, decimal_places=2)
          
          class Meta:
              unique_together = ['workplan_item', 'quarter']
      
      class PerformanceIndicator(models.Model):
          """KPIs and performance measures"""
          workplan_item = models.ForeignKey(WorkplanItem, on_delete=models.CASCADE)
          name = models.CharField(max_length=255)
          description = models.TextField(blank=True)
          baseline = models.CharField(max_length=100, blank=True)
          target = models.CharField(max_length=100)
          measurement_frequency = models.CharField(max_length=50)
          
          def __str__(self):
              return f"{self.name} - {self.workplan_item.name}"
      
      class TransformativeInitiative(models.Model):
          """Key transformative initiatives"""
          workplan_item = models.OneToOneField(
              WorkplanItem, 
              on_delete=models.CASCADE,
              limit_choices_to={'item_type': 'transformative'}
          )
          implementation_status = models.CharField(max_length=100)
          start_date = models.DateField()
          end_date = models.DateField()
          progress = models.IntegerField(default=0)  # 0-100%
          
          def __str__(self):
              return f"Initiative: {self.workplan_item.name}"

    . tests.py
      Content:
      from django.test import TestCase
      
      # Create your tests here.

    . urls.py
      Content:
      # apps/budget/urls.py
      from django.urls import path
      from . import views
      
      app_name = 'apps.budget'
      
      urlpatterns = [
          path('workplan/', views.workplan_summary, name='workplan_summary'),
          path('initiatives/', views.transformative_initiatives, name='transformative_initiatives'),
          path('indicators/', views.performance_indicators, name='performance_indicators'),
      ]

    . views.py
      Content:
      # apps/budget/views.py
      from django.shortcuts import render
      from django.contrib.auth.decorators import login_required
      from django.db.models import Sum
      from .models import WorkplanItem, QuarterlyAllocation, FinancialYear
      
      @login_required
      def workplan_summary(request):
          """Display overall workplan summary"""
          current_fy = FinancialYear.objects.first()  # Get current financial year
          workplan_items = WorkplanItem.objects.filter(financial_year=current_fy)
          
          # Calculate totals by quarter
          quarterly_totals = {
              1: QuarterlyAllocation.objects.filter(workplan_item__financial_year=current_fy, quarter=1).aggregate(Sum('amount'))['amount__sum'] or 0,
              2: QuarterlyAllocation.objects.filter(workplan_item__financial_year=current_fy, quarter=2).aggregate(Sum('amount'))['amount__sum'] or 0,
              3: QuarterlyAllocation.objects.filter(workplan_item__financial_year=current_fy, quarter=3).aggregate(Sum('amount'))['amount__sum'] or 0,
              4: QuarterlyAllocation.objects.filter(workplan_item__financial_year=current_fy, quarter=4).aggregate(Sum('amount'))['amount__sum'] or 0,
          }
          
          total_budget = sum(quarterly_totals.values())
          
          # Get items with their quarterly allocations
          items_with_quarters = []
          for item in workplan_items:
              quarterly_data = {
                  allocation.quarter: allocation.amount 
                  for allocation in item.quarterlyallocation_set.all()
              }
              items_with_quarters.append({
                  'item': item,
                  'q1_amount': quarterly_data.get(1, 0),
                  'q2_amount': quarterly_data.get(2, 0),
                  'q3_amount': quarterly_data.get(3, 0),
                  'q4_amount': quarterly_data.get(4, 0),
                  'total': item.total_amount,
                  'indicators': item.performanceindicator_set.all()
              })
      
          context = {
              'financial_year': current_fy,
              'items': items_with_quarters,
              'quarterly_totals': quarterly_totals,
              'total_budget': total_budget
          }
          return render(request, 'budget/workplan_summary.html', context)
      
      @login_required
      def transformative_initiatives(request):
          """Display transformative initiatives"""
          initiatives = WorkplanItem.objects.filter(
              item_type='transformative'
          ).select_related('transformativeinitiative')
          
          context = {
              'initiatives': initiatives
          }
          return render(request, 'budget/transformative_initiatives.html', context)
      
      @login_required
      def performance_indicators(request):
          """Display performance indicators"""
          workplan_items = WorkplanItem.objects.prefetch_related('performanceindicator_set')
          
          context = {
              'workplan_items': workplan_items
          }
          return render(request, 'budget/performance_indicators.html', context)

  . config.py
    Content:
    from django.apps import AppConfig
    
    
    class AppsConfig(AppConfig):
        default_auto_field = 'django.db.models.BigAutoField'
        name = 'apps'
        label = 'apps'

  . context_processors.py
    Content:
    from django.conf import settings
    
    def cfg_assets_root(request):
    
        return { 'ASSETS_ROOT' : settings.ASSETS_ROOT }
    

  . document_management/
    . __init__.py
      Content:


    . admin.py
      Content:
      from django.contrib import admin
      
      # Register your models here.

    . apps.py
      Content:
      from django.apps import AppConfig
      
      
      class DocumentManagementConfig(AppConfig):
          default_auto_field = "django.db.models.BigAutoField"
          name = "apps.document_management"

    . models.py
      Content:
      # apps/document_management/models.py
      from django.db import models
      from django.conf import settings
      from django.contrib.contenttypes.fields import GenericForeignKey
      from django.contrib.contenttypes.models import ContentType
      
      class DocumentCategory(models.Model):
          name = models.CharField(max_length=100)
          description = models.TextField(blank=True)
          is_active = models.BooleanField(default=True)
          created_at = models.DateTimeField(auto_now_add=True)
          updated_at = models.DateTimeField(auto_now=True)
      
          class Meta:
              verbose_name_plural = "Document Categories"
              ordering = ['name']
      
          def __str__(self):
              return self.name
      
      class Document(models.Model):
          STORAGE_CHOICES = [
              ('local', 'Local Storage'),
              ('google_drive', 'Google Drive')
          ]
          
          DOCUMENT_STATUS = [
              ('draft', 'Draft'),
              ('pending_review', 'Pending Review'),
              ('approved', 'Approved'),
              ('rejected', 'Rejected'),
              ('archived', 'Archived')
          ]
      
          # Basic fields
          title = models.CharField(max_length=255)
          description = models.TextField(blank=True)
          file = models.FileField(upload_to='documents/%Y/%m/%d/')
          file_type = models.CharField(max_length=50)  # e.g., pdf, doc, image
          file_size = models.BigIntegerField()  # in bytes
          
          # Classification
          category = models.ForeignKey(DocumentCategory, on_delete=models.SET_NULL, null=True)
          tags = models.CharField(max_length=500, blank=True)  # Comma-separated tags
          
          # Storage information
          storage_type = models.CharField(max_length=20, choices=STORAGE_CHOICES, default='local')
          drive_file_id = models.CharField(max_length=100, blank=True, null=True)
          drive_view_link = models.URLField(blank=True, null=True)
          
          # Security and access
          is_confidential = models.BooleanField(default=False)
          status = models.CharField(max_length=20, choices=DOCUMENT_STATUS, default='draft')
          password_protected = models.BooleanField(default=False)
          access_code = models.CharField(max_length=100, blank=True, null=True)
          
          # Source tracking (Generic relation to any model)
          content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE, null=True, blank=True)
          object_id = models.PositiveIntegerField(null=True, blank=True)
          source_object = GenericForeignKey('content_type', 'object_id')
          source_module = models.CharField(max_length=50, help_text="Name of the module this document belongs to")
          
          # Version control
          version = models.CharField(max_length=50, default='1.0')
          parent_document = models.ForeignKey('self', null=True, blank=True, on_delete=models.SET_NULL, related_name='versions')
          
          # Metadata
          uploaded_by = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='uploaded_documents')
          created_at = models.DateTimeField(auto_now_add=True)
          updated_at = models.DateTimeField(auto_now=True)
          last_accessed = models.DateTimeField(null=True, blank=True)
          expiry_date = models.DateTimeField(null=True, blank=True)
      
          class Meta:
              ordering = ['-created_at']
      
          def __str__(self):
              return f"{self.title} (v{self.version})"
      
          def get_file_url(self):
              if self.storage_type == 'google_drive' and self.drive_view_link:
                  return self.drive_view_link
              return self.file.url if self.file else None
      
      class DocumentAccess(models.Model):
          """Track document access permissions and history"""
          PERMISSION_CHOICES = [
              ('view', 'View Only'),
              ('edit', 'Edit'),
              ('admin', 'Full Admin')
          ]
      
          document = models.ForeignKey(Document, on_delete=models.CASCADE)
          user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          permission_type = models.CharField(max_length=20, choices=PERMISSION_CHOICES)
          granted_by = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='granted_permissions')
          granted_at = models.DateTimeField(auto_now_add=True)
          expires_at = models.DateTimeField(null=True, blank=True)
          is_active = models.BooleanField(default=True)
      
          class Meta:
              unique_together = ['document', 'user']
      
      class DocumentActivity(models.Model):
          """Track all document-related activities"""
          ACTION_CHOICES = [
              ('upload', 'Upload'),
              ('view', 'View'),
              ('edit', 'Edit'),
              ('delete', 'Delete'),
              ('share', 'Share'),
              ('download', 'Download'),
              ('print', 'Print'),
              ('status_change', 'Status Change')
          ]
      
          document = models.ForeignKey(Document, on_delete=models.CASCADE)
          user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          action = models.CharField(max_length=20, choices=ACTION_CHOICES)
          action_details = models.TextField(blank=True)
          ip_address = models.GenericIPAddressField(null=True, blank=True)
          user_agent = models.CharField(max_length=500, blank=True)
          timestamp = models.DateTimeField(auto_now_add=True)
      
          class Meta:
              verbose_name_plural = "Document Activities"
              ordering = ['-timestamp']

    . tests.py
      Content:
      from django.test import TestCase
      
      # Create your tests here.

    . urls.py
      Content:
      from django.urls import path
      from . import views
      
      app_name = 'document_management'
      
      urlpatterns = [
          path('upload/', views.upload_document, name='upload_document'),
          path('list/', views.document_list, name='document_list'),
          path('google-auth/', views.google_auth, name='google_auth'),
          path('google-auth-callback/', views.google_auth_callback, name='google_auth_callback'),
          path('share/<int:document_id>/', views.share_document, name='share_document'),
      ]

    . utils/
      . document_manager.py
        Content:
        # apps/document_management/utils/document_manager.py
        from django.contrib.contenttypes.models import ContentType
        from django.core.files.uploadedfile import UploadedFile
        from django.utils import timezone
        from ..models import Document, DocumentActivity, DocumentAccess
        import os
        import mimetypes
        
        class DocumentManager:
            @staticmethod
            def attach_document(file, source_object, uploaded_by, **kwargs):
                """
                Attach a document to any model instance
                
                Args:
                    file: The file to upload (UploadedFile instance)
                    source_object: The model instance this document belongs to
                    uploaded_by: User instance who is uploading the document
                    **kwargs: Additional document attributes
                
                Returns:
                    Document instance
                """
                # Get content type for the source object
                content_type = ContentType.objects.get_for_model(source_object)
                
                # Determine file type and size
                file_type = mimetypes.guess_type(file.name)[0] or 'application/octet-stream'
                file_extension = os.path.splitext(file.name)[1].lower()
                
                # Create document instance
                document = Document(
                    title=kwargs.get('title', file.name),
                    description=kwargs.get('description', ''),
                    file=file,
                    file_type=file_type,
                    file_size=file.size,
                    content_type=content_type,
                    object_id=source_object.id,
                    source_module=source_object._meta.app_label,
                    uploaded_by=uploaded_by,
                    category_id=kwargs.get('category_id'),
                    is_confidential=kwargs.get('is_confidential', False),
                    status=kwargs.get('status', 'draft'),
                    storage_type=kwargs.get('storage_type', 'local'),
                    version=kwargs.get('version', '1.0')
                )
                document.save()
                
                # Record the activity
                DocumentActivity.objects.create(
                    document=document,
                    user=uploaded_by,
                    action='upload',
                    action_details=f"Document uploaded from {source_object._meta.model_name}"
                )
                
                # Set up initial access
                DocumentAccess.objects.create(
                    document=document,
                    user=uploaded_by,
                    permission_type='admin',
                    granted_by=uploaded_by
                )
                
                return document
        
            @staticmethod
            def get_module_documents(source_object):
                """Get all documents attached to a specific model instance"""
                content_type = ContentType.objects.get_for_model(source_object)
                return Document.objects.filter(
                    content_type=content_type,
                    object_id=source_object.id
                )
        
            @staticmethod
            def get_user_accessible_documents(user, module_name=None):
                """Get all documents a user has access to, optionally filtered by module"""
                accessible_docs = Document.objects.filter(
                    documentaccess__user=user,
                    documentaccess__is_active=True
                )
                
                if module_name:
                    accessible_docs = accessible_docs.filter(source_module=module_name)
                    
                return accessible_docs
        
            @staticmethod
            def record_document_access(document, user, action, **kwargs):
                """Record document activity"""
                DocumentActivity.objects.create(
                    document=document,
                    user=user,
                    action=action,
                    action_details=kwargs.get('details', ''),
                    ip_address=kwargs.get('ip_address'),
                    user_agent=kwargs.get('user_agent')
                )
                
                # Update last accessed timestamp
                document.last_accessed = timezone.now()
                document.save(update_fields=['last_accessed'])
        
            @staticmethod
            def grant_access(document, user, granted_by, permission_type='view', expires_at=None):
                """Grant document access to a user"""
                access, created = DocumentAccess.objects.get_or_create(
                    document=document,
                    user=user,
                    defaults={
                        'permission_type': permission_type,
                        'granted_by': granted_by,
                        'expires_at': expires_at,
                        'is_active': True
                    }
                )
                
                if not created:
                    access.permission_type = permission_type
                    access.expires_at = expires_at
                    access.is_active = True
                    access.save()
                    
                DocumentActivity.objects.create(
                    document=document,
                    user=granted_by,
                    action='share',
                    action_details=f"Access granted to {user.email} with {permission_type} permissions"
                )
                
                return access
        
            @staticmethod
            def revoke_access(document, user, revoked_by):
                """Revoke user's access to a document"""
                try:
                    access = DocumentAccess.objects.get(document=document, user=user)
                    access.is_active = False
                    access.save()
                    
                    DocumentActivity.objects.create(
                        document=document,
                        user=revoked_by,
                        action='share',
                        action_details=f"Access revoked for {user.email}"
                    )
                    
                    return True
                except DocumentAccess.DoesNotExist:
                    return False

    . views.py
      Content:
      from django.shortcuts import render
      
      # Create your views here.

  . home/
    . __init__.py
      Content:
      # -*- encoding: utf-8 -*-
      """
      Copyright (c) 2019 - present AppSeed.us
      """

    . admin.py
      Content:
      # -*- encoding: utf-8 -*-
      """
      Copyright (c) 2019 - present AppSeed.us
      """
      
      from django.contrib import admin
      
      # Register your models here.

    . components/
      . __init__.py
        Content:


      . hello_magic.py
        Content:
        from django_unicorn.components import UnicornView
        
        
        class HelloMagicView(UnicornView):
            pass

    . config.py
      Content:
      # -*- encoding: utf-8 -*-
      """
      Copyright (c) 2019 - present AppSeed.us
      """
      
      from django.apps import AppConfig
      
      
      class MyConfig(AppConfig):
          name = 'apps.home'
          label = 'apps_home'

    . management/
      . commands/
        . seed_modules.py
          Content:
          # apps/home/management/commands/seed_modules.py
          from django.core.management.base import BaseCommand
          from apps.home.models import Module
          from django.contrib.auth.models import Permission
          from django.contrib.contenttypes.models import ContentType
          
          
          class Command(BaseCommand):
              help = 'Seeds modules and their permissions'
          
              def handle(self, *args, **kwargs):
                  self.stdout.write('Seeding modules and permissions...')
          
                  # Delete existing modules
                  Module.objects.all().delete()
          
                  modules_data = [
                      {
                          'name': 'Document Management',
                          'description': 'Create, share and manage electronic documents', 
                          'icon_class': 'fas fa-file-alt',
                          'url_name': 'document_management:document_list',
                          'permission_codename': 'access_documents'
                      },
                      {
                          'name': 'Meetings',
                          'description': 'Schedule and manage meetings',
                          'icon_class': 'fas fa-calendar-alt',
                          'url_name': 'meetings:dashboard',
                          'permission_codename': 'access_meetings'
                      },
                      {
                          'name': 'Budget',
                          'description': 'Manage workplans and budgets',
                          'icon_class': 'fas fa-money-bill-alt',
                          'url_name': 'budget:workplan_summary',
                          'permission_codename': 'access_budget'
                      },
                      {
                          'name': 'Statistics',
                          'description': 'Access and analyze DCRT data',
                          'icon_class': 'fas fa-chart-bar',
                          'url_name': 'statistics:home',
                          'permission_codename': 'access_statistics'
                      },
                      {
                          'name': 'Performance',
                          'description': 'Performance tracking and reporting',
                          'icon_class': 'fas fa-tachometer-alt',
                          'url_name': 'performance:dashboard',
                          'permission_codename': 'access_performance'
                      },
                      {
                          'name': 'Memos',
                          'description': 'Internal memos and communications',
                          'icon_class': 'fas fa-envelope',
                          'url_name': 'memos:department_dashboard',
                          'permission_codename': 'access_memos'
                      },
                      {
                          'name': 'Projects',
                          'description': 'Track transformative initiatives',
                          'icon_class': 'fas fa-project-diagram',
                          'url_name': 'projects:dashboard',
                          'permission_codename': 'access_projects'
                      },
                      {
                          'name': 'Reports',
                          'description': 'Generate and download reports',
                          'icon_class': 'fas fa-file-pdf',
                          'url_name': 'reports:dashboard', 
                          'permission_codename': 'access_reports'
                      }
                  ]
          
                  # Get content type for Module model
                  content_type = ContentType.objects.get_for_model(Module)
          
                  # Create modules and permissions
                  for module_data in modules_data:
                      # Create module
                      module = Module.objects.create(
                          name=module_data['name'],
                          description=module_data['description'],
                          icon_class=module_data['icon_class'],
                          url_name=module_data['url_name'],
                          permission_codename=module_data['permission_codename']
                      )
          
                      # Create permission
                      permission_name = f"Can access {module_data['name']} module"
                      Permission.objects.create(
                          codename=module_data['permission_codename'],
                          name=permission_name,
                          content_type=content_type,
                      )
          
                      self.stdout.write(f"Created module: {module.name} with permission: {module_data['permission_codename']}")
          
                  self.stdout.write(self.style.SUCCESS('Successfully seeded modules and permissions'))

    . models.py
      Content:
      # -*- encoding: utf-8 -*-
      """
      Copyright (c) 2019 - present AppSeed.us
      """
      
      from django.db import models
      from django.contrib.auth.models import User
      from apps.organization.models import Department
      
      class Module(models.Model):
          name = models.CharField(max_length=100, unique=True)
          description = models.TextField(blank=True)
          icon_class = models.CharField(max_length=100, blank=True, help_text="Font Awesome icon class (e.g., 'fas fa-file-alt')")
          url_name = models.CharField(max_length=200, blank=True, help_text="Name of the URL pattern for this module (e.g., 'document_module_view')")
          department = models.ForeignKey(Department, on_delete=models.SET_NULL, null=True, blank=True, related_name='modules') # Optional: Link to Department
          permission_codename = models.CharField(max_length=150, unique=True, blank=True, help_text="Codename for permission to access this module (e.g., 'access_documents')") # NEW FIELD
      
          def __str__(self):
              return self.name
      
          class Meta:
              ordering = ['name'] # Default ordering by name
              permissions = [  # Define custom permissions here
                  # Permissions will be dynamically added in the seeder
              ]
      
          
      
      
      

    . tests.py
      Content:
      # -*- encoding: utf-8 -*-
      """
      Copyright (c) 2019 - present AppSeed.us
      """
      
      from django.test import TestCase
      
      # Create your tests here.

    . urls.py
      Content:
      from django.urls import path
      from . import views
      
      app_name = 'apps.home'
      
      
      urlpatterns = [
          path('', views.index, name='index'),
          path('dashboard/', views.dashboard, name='dashboard'),
          path('departments/<int:department_id>/modules/', views.department_modules, name='department_modules'), # New URL for department modules
      ]

    . views.py
      Content:
      # apps/home/views.py
      from django import template
      from django.contrib.auth.decorators import login_required
      from django.http import HttpResponse, HttpResponseRedirect
      from django.shortcuts import render, get_object_or_404, redirect # IMPORT IS HERE!
      from django.template import loader
      from django.urls import reverse
      from django.shortcuts import render
      from apps.organization.models import Department
      from apps.home.models import Module # Import Module model
      
      @login_required
      def dashboard(request):
          departments = Department.objects.prefetch_related('roles').filter(is_active=True)
          return render(request, "home/dashboard.html", {'departments': departments})
      
      @login_required(login_url="/login/")
      def index(request):
          context = {'segment': 'index'}
          html_template = loader.get_template('home/index.html')
          return HttpResponse(html_template.render(context, request))
      
      @login_required(login_url="/login/")
      def pages(request):
          context = {}
          try:
              load_template = request.path.split('/')[-1]
              
              if load_template == 'admin':
                  return HttpResponseRedirect(reverse('admin:index'))
                  
              context['segment'] = load_template
              html_template = loader.get_template('home/' + load_template)
              return HttpResponse(html_template.render(context, request))
              
          except template.TemplateDoesNotExist:
              html_template = loader.get_template('home/page-404.html')
              return HttpResponse(html_template.render(context, request))
              
          except:
              html_template = loader.get_template('home/page-500.html')
              return HttpResponse(html_template.render(context, request))
      
      @login_required
      def department_modules(request, department_id):
          department = get_object_or_404(Department, id=department_id)
          # all_modules = Module.objects.filter(department=department) # Get all modules for the department
          all_modules = Module.objects.all()
          permitted_modules = []
      
          for module in all_modules:
              permission_codename = f'home.{module.permission_codename}' # Construct full permission codename (app_label.codename)
              if request.user.has_perm(permission_codename): # Check if user has permission
                  permitted_modules.append(module)
      
          context = {
              'department': department,
              'modules': permitted_modules, # Pass only permitted modules to the template
          }
          return render(request, "home/department_modules.html", context)

  . meetings/
    . __init__.py
      Content:


    . admin.py
      Content:
      # apps/meetings/admin.py
      from django.contrib import admin
      from .models import Meeting, MeetingParticipant, MeetingDocument
      
      class MeetingParticipantInline(admin.TabularInline):
          model = MeetingParticipant
          extra = 1
      
      class MeetingDocumentInline(admin.TabularInline):
          model = MeetingDocument
          extra = 1
      
      @admin.register(Meeting)
      class MeetingAdmin(admin.ModelAdmin):
          list_display = ('title', 'department', 'date', 'meeting_type', 'meeting_mode', 'status')
          list_filter = ('department', 'meeting_type', 'meeting_mode', 'status', 'date')
          search_fields = ('title', 'agenda', 'department__name')
          date_hierarchy = 'date'
          inlines = [MeetingParticipantInline, MeetingDocumentInline]
          
          fieldsets = (
              ('Basic Information', {
                  'fields': ('title', 'department', 'meeting_type', 'meeting_mode', 'status')
              }),
              ('Timing', {
                  'fields': ('date', 'start_time', 'end_time')
              }),
              ('Location', {
                  'fields': ('physical_location',)
              }),
              ('Virtual Meeting Details', {
                  'fields': ('virtual_platform', 'virtual_meeting_url', 'virtual_meeting_id', 'virtual_meeting_password'),
                  'classes': ('collapse',)
              }),
              ('Content', {
                  'fields': ('agenda', 'minutes')
              }),
              ('Recording', {
                  'fields': ('recording_url', 'has_recording'),
                  'classes': ('collapse',)
              }),
          )

    . apps.py
      Content:
      from django.apps import AppConfig
      
      
      
      class MeetingsConfig(AppConfig):
          default_auto_field = 'django.db.models.BigAutoField'
          name = 'apps.meetings'
          label = 'meetings'
          

    . forms.py
      Content:
      # apps/meetings/forms.py
      from django import forms
      from .models import Meeting, MeetingParticipant, MeetingDocument, MeetingAction
      
      class MeetingForm(forms.ModelForm):
          def __init__(self, *args, **kwargs):
              super().__init__(*args, **kwargs)
              self.fields['date'].widget = forms.DateInput(attrs={'type': 'date'})
              self.fields['start_time'].widget = forms.TimeInput(attrs={'type': 'time'})
              self.fields['end_time'].widget = forms.TimeInput(attrs={'type': 'time'})
              self.fields['participants'].widget.attrs['class'] = 'form-control select2'
              
              # Make virtual meeting fields not required initially
              self.fields['virtual_meeting_url'].required = False
              self.fields['virtual_meeting_id'].required = False
              self.fields['virtual_meeting_password'].required = False
              self.fields['physical_location'].required = False
      
          def clean(self):
              cleaned_data = super().clean()
              meeting_mode = cleaned_data.get('meeting_mode')
      
              # Validate based on meeting mode
              if meeting_mode == 'virtual' or meeting_mode == 'hybrid':
                  if not cleaned_data.get('virtual_meeting_url'):
                      self.add_error('virtual_meeting_url', 'Virtual meeting URL is required for virtual/hybrid meetings')
      
              if meeting_mode == 'physical' or meeting_mode == 'hybrid':
                  if not cleaned_data.get('physical_location'):
                      self.add_error('physical_location', 'Physical location is required for physical/hybrid meetings')
      
              return cleaned_data
      
          class Meta:
              model = Meeting
              fields = [
                  'title', 'department', 'meeting_type', 'meeting_mode',
                  'date', 'start_time', 'end_time',
                  'physical_location', 'virtual_platform',
                  'virtual_meeting_url', 'virtual_meeting_id',
                  'virtual_meeting_password', 'agenda', 'participants'
              ]
              widgets = {
                  'agenda': forms.Textarea(attrs={'rows': 4}),
              }
              
      class MeetingActionForm(forms.ModelForm):
          class Meta:
              model = MeetingAction
              fields = ['description', 'assigned_to', 'due_date']
              widgets = {
                  'description': forms.Textarea(attrs={
                      'rows': 3,
                      'class': 'form-control',
                      'placeholder': 'Enter action item description'
                  }),
                  'assigned_to': forms.Select(attrs={
                      'class': 'form-control'
                  }),
                  'due_date': forms.DateInput(attrs={
                      'class': 'form-control',
                      'type': 'date'
                  })
              }
      
          def __init__(self, *args, **kwargs):
              super().__init__(*args, **kwargs)
              self.fields['description'].label = 'Action Item Description'
              self.fields['assigned_to'].label = 'Assign To'
              self.fields['due_date'].label = 'Due Date'
              
              
      
      # apps/meetings/forms.py
      
      class MeetingDocumentForm(forms.ModelForm):
          DOCUMENT_TYPES = [
              ('agenda', 'Agenda'),
              ('minutes', 'Minutes'),
              ('presentation', 'Presentation'),
              ('report', 'Report'),
              ('other', 'Other')
          ]
          
          document_type = forms.ChoiceField(
              choices=DOCUMENT_TYPES,
              widget=forms.Select(attrs={'class': 'form-control'})
          )
          file = forms.FileField(
              widget=forms.FileInput(attrs={'class': 'form-control'})
          )
          notes = forms.CharField(
              required=False,
              widget=forms.Textarea(attrs={
                  'class': 'form-control',
                  'rows': 3,
                  'placeholder': 'Optional notes about this document'
              })
          )
      
          class Meta:
              model = MeetingDocument
              fields = ['document_type', 'file', 'notes']
              
          def save(self, meeting, commit=True):
              instance = super().save(commit=False)
              instance.meeting = meeting
              
              if commit:
                  instance.save()
              return instance

    . management/
      . commands/
        . seed_meetings.py
          Content:
          # apps/meetings/management/commands/seed_meetings.py
          from django.core.management.base import BaseCommand
          from django.contrib.auth import get_user_model
          from django.utils import timezone
          from apps.meetings.models import Meeting, MeetingParticipant
          from apps.organization.models import Department
          from datetime import timedelta
          
          User = get_user_model()
          
          class Command(BaseCommand):
              help = 'Seeds sample meetings for each department'
          
              def handle(self, *args, **kwargs):
                  self.stdout.write('Seeding meetings data...')
          
                  # Get departments
                  departments = Department.objects.all()
                  try:
                      director = User.objects.get(username='joseph.osewe')
                  except User.DoesNotExist:
                      self.stdout.write('Creating director user...')
                      director = User.objects.create_user(
                          username='joseph.osewe',
                          email='joseph.osewe@judiciary.go.ke',
                          first_name='Joseph',
                          last_name='Osewe',
                          is_staff=True,
                          is_superuser=True
                      )
                      director.set_password('Admin123!')
                      director.save()
          
                  meeting_types = {
                      'Department Internal': [
                          'Monthly Performance Review',
                          'Staff Meeting',
                          'Team Building',
                          'Strategy Session'
                      ],
                      'With Director': [
                          'Quarterly Review',
                          'Budget Planning',
                          'Performance Assessment',
                          'Strategic Planning'
                      ],
                      'Committee': [
                          'Technical Committee',
                          'Quality Assurance',
                          'Research Committee',
                          'Innovation Committee'
                      ]
                  }
          
                  for department in departments:
                      self.stdout.write(f'Creating meetings for {department.name}')
                      
                      # Get department head - first user in department with Assistant Director role
                      dept_head = User.objects.filter(departments=department).first()
                      
                      if not dept_head:
                          continue
          
                      # Create meetings for each type
                      for meeting_type, titles in meeting_types.items():
                          for title in titles:
                              # Create future meeting
                              days_ahead = 14 if meeting_type == 'Department Internal' else 30
                              meeting_date = timezone.now().date() + timedelta(days=days_ahead)
                              
                              meeting = Meeting.objects.create(
                                  title=f"{department.name} - {title}",
                                  department=department,
                                  meeting_type=meeting_type,
                                  date=meeting_date,
                                  start_time='10:00',
                                  end_time='11:30',
                                  meeting_mode='hybrid',
                                  physical_location='Conference Room A',
                                  virtual_platform='teams',
                                  virtual_meeting_url='https://teams.microsoft.com/meeting',
                                  agenda=f"""
                                  1. Opening Remarks
                                  2. Previous Action Items Review
                                  3. {title} Main Agenda
                                  4. Department Updates
                                  5. Way Forward
                                  6. AOB
                                  """,
                                  status='scheduled',
                                  organizer=dept_head if meeting_type == 'Department Internal' else director
                              )
          
                              # Add participants
                              dept_staff = User.objects.filter(departments=department).distinct()
          
                              for staff in dept_staff:
                                  MeetingParticipant.objects.create(
                                      meeting=meeting,
                                      participant=staff,
                                      role='attendee'
                                  )
          
                              # Add director for director meetings
                              if meeting_type == 'With Director':
                                  MeetingParticipant.objects.create(
                                      meeting=meeting,
                                      participant=director,
                                      role='organizer'
                                  )
          
                  self.stdout.write(self.style.SUCCESS('Successfully seeded meetings data'))

    . models.py
      Content:
      # apps/meetings/models.py
      from django.db import models
      from django.conf import settings
      from apps.organization.models import Department
      from apps.document_management.models import Document
      
      
      class MeetingAction(models.Model):
          meeting = models.ForeignKey('Meeting', on_delete=models.CASCADE)
          description = models.TextField()
          assigned_to = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          due_date = models.DateField()
      
          class Meta:
              verbose_name = 'Meeting Action Item'
              verbose_name_plural = 'Meeting Action Items'
      
          def __str__(self):
              return f"{self.description} - {self.meeting.title}"
          
          
      
      class MeetingDocument(models.Model):
          DOCUMENT_TYPES = [
              ('agenda', 'Agenda'),
              ('minutes', 'Minutes'),
              ('presentation', 'Presentation'),
              ('report', 'Report'),
              ('other', 'Other')
          ]
      
          meeting = models.ForeignKey('Meeting', on_delete=models.CASCADE)
          document = models.ForeignKey(Document, on_delete=models.CASCADE)
          document_type = models.CharField(max_length=20, choices=DOCUMENT_TYPES)
          notes = models.TextField(blank=True, help_text="Additional notes about the document")
          uploaded_at = models.DateTimeField(auto_now_add=True)
          updated_at = models.DateTimeField(auto_now=True)
      
          class Meta:
              unique_together = ['meeting', 'document']
              verbose_name = 'Meeting Document'
              verbose_name_plural = 'Meeting Documents'
              ordering = ['-uploaded_at']
      
          def __str__(self):
              return f"{self.get_document_type_display()} for {self.meeting}"
      
      
      
      class MeetingParticipant(models.Model):
          PARTICIPANT_ROLE = [
              ('organizer', 'Organizer'),
              ('attendee', 'Attendee'),
              ('guest', 'Guest')
          ]
      
          meeting = models.ForeignKey('Meeting', on_delete=models.CASCADE)
          participant = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          role = models.CharField(max_length=20, choices=PARTICIPANT_ROLE, default='attendee')
      
          class Meta:
              unique_together = ['meeting', 'participant']
              verbose_name = 'Meeting Participant'
              verbose_name_plural = 'Meeting Participants'
      
          def __str__(self):
              return f"{self.participant.get_full_name()} - {self.get_role_display()}"
          
          
      
      class Meeting(models.Model):
          MEETING_STATUS = [
              ('scheduled', 'Scheduled'),
              ('in_progress', 'In Progress'),
              ('completed', 'Completed'),
              ('cancelled', 'Cancelled')
          ]
      
          MEETING_TYPE = [
              ('department', 'Department Internal'),
              ('director', 'With Director'),
              ('committee', 'Committee Meeting'),
              ('other', 'Other')
          ]
          
          MEETING_MODE = [
              ('physical', 'Physical'),
              ('virtual', 'Virtual'),
              ('hybrid', 'Hybrid')
          ]
      
          # Basic Info
          title = models.CharField(max_length=255)
          department = models.ForeignKey(Department, on_delete=models.CASCADE, related_name='meetings')
          meeting_type = models.CharField(max_length=20, choices=MEETING_TYPE)
          date = models.DateField()
          start_time = models.TimeField()
          end_time = models.TimeField()
          
          # Location/Mode
          meeting_mode = models.CharField(max_length=20, choices=MEETING_MODE, default='physical')
          physical_location = models.CharField(max_length=255, blank=True, null=True)
          virtual_meeting_url = models.URLField(blank=True, null=True)
          virtual_meeting_id = models.CharField(max_length=100, blank=True, null=True, help_text="Meeting ID for virtual platform")
          virtual_meeting_password = models.CharField(max_length=50, blank=True, null=True, help_text="Password for virtual meeting")
          virtual_platform = models.CharField(
              max_length=50, 
              blank=True, 
              null=True,
              choices=[
                  ('zoom', 'Zoom'),
                  ('teams', 'Microsoft Teams'),
                  ('meet', 'Google Meet'),
                  ('other', 'Other Platform')
              ]
          )
      
          # Content
          agenda = models.TextField()
          minutes = models.TextField(blank=True, null=True)
          status = models.CharField(max_length=20, choices=MEETING_STATUS, default='scheduled')
          
          # Meeting organization
          organizer = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='organized_meetings')
          participants = models.ManyToManyField(settings.AUTH_USER_MODEL, through='MeetingParticipant', related_name='meetings')
          
          # Recording (for virtual meetings)
          recording_url = models.URLField(blank=True, null=True)
          has_recording = models.BooleanField(default=False)
          
          # Timestamps
          created_at = models.DateTimeField(auto_now_add=True)
          updated_at = models.DateTimeField(auto_now=True)
      
          class Meta:
              ordering = ['-date', '-start_time']
              permissions = [
                  ("view_all_meetings", "Can view all meetings across departments"),
                  ("manage_department_meetings", "Can manage department meetings"),
              ]
      
          def __str__(self):
              return f"{self.title} - {self.department.name} ({self.date})"
          
          def get_meeting_location(self):
              """Returns formatted meeting location/link based on meeting mode"""
              if self.meeting_mode == 'physical':
                  return self.physical_location
              elif self.meeting_mode == 'virtual':
                  return self.virtual_meeting_url
              else:  # hybrid
                  return f"Physical: {self.physical_location}\nVirtual: {self.virtual_meeting_url}"
      
          def get_meeting_access_info(self):
              """Returns formatted virtual meeting access information"""
              if self.meeting_mode in ['virtual', 'hybrid']:
                  info = []
                  if self.virtual_platform:
                      info.append(f"Platform: {self.get_virtual_platform_display()}")
                  if self.virtual_meeting_url:
                      info.append(f"URL: {self.virtual_meeting_url}")
                  if self.virtual_meeting_id:
                      info.append(f"Meeting ID: {self.virtual_meeting_id}")
                  if self.virtual_meeting_password:
                      info.append(f"Password: {self.virtual_meeting_password}")
                  return "\n".join(info)
              return ""

    . tests.py
      Content:
      from django.test import TestCase
      
      # Create your tests here.

    . urls.py
      Content:
      # apps/meetings/urls.py
      from django.urls import path
      from . import views
      
      app_name = 'meetings'
      
      urlpatterns = [
          path('', views.dashboard, name='dashboard'),
          path('director/', views.director_dashboard, name='director_dashboard'),
          path('list/', views.meeting_list, name='meeting_list'),
          path('create/', views.meeting_create, name='meeting_create'),
          path('<int:pk>/', views.meeting_detail, name='meeting_detail'),
          path('<int:pk>/edit/', views.meeting_update, name='meeting_update'),
          path('<int:pk>/delete/', views.meeting_delete, name='meeting_delete'),
      ]

    . views/
      . __init__.py
        Content:
        # apps/meetings/views/__init__.py
        from .base import dashboard, director_dashboard
        from .crud import (
            meeting_create,
            meeting_detail, 
            meeting_update,
            meeting_delete
        )
        from .lists import meeting_list
        
        __all__ = [
            'dashboard',
            'director_dashboard',
            'meeting_create',
            'meeting_detail',
            'meeting_update', 
            'meeting_delete',
            'meeting_list'
        ]

      . base.py
        Content:
        # apps/meetings/views/base.py
        from django.shortcuts import render, redirect
        from django.contrib.auth.decorators import login_required
        from django.contrib import messages
        from django.db.models import Q
        from django.utils import timezone
        from apps.meetings.models import Meeting, MeetingParticipant
        from apps.organization.models import Department
        
        @login_required 
        def dashboard(request):
            user = request.user
            today = timezone.now().date()
            thirty_days_ago = today - timezone.timedelta(days=30)
        
            base_query = Q(department=user.department) | Q(participants=user)
        
            stats = {
                'total_meetings': Meeting.objects.filter(base_query).distinct().count(),
                'upcoming_count': Meeting.objects.filter(
                    date__gte=today,
                    status='scheduled'
                ).filter(base_query).distinct().count(),
                'completed_count': Meeting.objects.filter(
                    status='completed',
                    date__gte=thirty_days_ago
                ).filter(base_query).distinct().count()
            }
        
            upcoming_meetings = Meeting.objects.filter(
                date__gte=today,
                status='scheduled'
            ).filter(base_query).distinct().order_by('date', 'start_time')[:5]
        
            context = {
                'stats': stats,
                'upcoming_meetings': upcoming_meetings,
            }
            return render(request, 'meetings/dashboard.html', context)
        
        @login_required
        def director_dashboard(request):
            if not request.user.is_superuser:
                messages.error(request, "Access denied")
                return redirect('meetings:dashboard')
        
            today = timezone.now().date()
            departments = Department.objects.all()
            dept_meetings = {}
        
            for dept in departments:
                dept_meetings[dept] = {
                    'upcoming': Meeting.objects.filter(
                        department=dept,
                        date__gte=today,
                        status='scheduled'
                    ).order_by('date')[:5],
                    'recent': Meeting.objects.filter(
                        department=dept,
                        date__lt=today
                    ).order_by('-date')[:5],
                    'stats': {
                        'total': Meeting.objects.filter(department=dept).count(),
                        'scheduled': Meeting.objects.filter(
                            department=dept, 
                            status='scheduled'
                        ).count(),
                        'completed': Meeting.objects.filter(
                            department=dept,
                            status='completed'
                        ).count()
                    }
                }
        
            context = {
                'dept_meetings': dept_meetings,
                'total_meetings': Meeting.objects.count(),
                'total_participants': MeetingParticipant.objects.count()
            }
            
            return render(request, 'meetings/director_dashboard.html', context)

      . crud.py
        Content:
        # apps/meetings/views/crud.py
        from django.shortcuts import render, get_object_or_404, redirect
        from django.contrib.auth.decorators import login_required
        from django.contrib import messages
        from django.utils import timezone
        from apps.meetings.models import Meeting, MeetingParticipant
        from apps.meetings.forms import MeetingForm
        
        @login_required
        def meeting_create(request):
            """Create a new meeting"""
            if request.method == 'POST':
                form = MeetingForm(request.POST)
                if form.is_valid():
                    meeting = form.save(commit=False)
                    meeting.organizer = request.user
                    meeting.department = request.user.department
                    meeting.save()
                    form.save_m2m()
        
                    # Create participant entries
                    for user_participant in form.cleaned_data['participants']:
                        MeetingParticipant.objects.create(
                            meeting=meeting,
                            participant=user_participant
                        )
        
                    messages.success(request, 'Meeting created successfully.')
                    return redirect('meetings:meeting_detail', pk=meeting.pk)
            else:
                form = MeetingForm()
        
            return render(request, 'meetings/meeting_form.html', {
                'form': form, 
                'action': 'Create'
            })
        
        @login_required
        def meeting_detail(request, pk):
            """View meeting details"""
            meeting = get_object_or_404(Meeting, pk=pk)
            user = request.user
        
            # Check permissions
            if not (user == meeting.organizer or
                    user.department == meeting.department or
                    meeting.participants.filter(id=user.id).exists()):
                messages.error(request, "You don't have permission to view this meeting.")
                return redirect('meetings:dashboard')
        
            context = {
                'meeting': meeting,
                'participants': MeetingParticipant.objects.filter(meeting=meeting),
                'can_edit': user == meeting.organizer or user.has_perm('meetings.change_meeting')
            }
            return render(request, 'meetings/meeting_detail.html', context)
        
        @login_required
        def meeting_update(request, pk):
            """Update existing meeting"""
            meeting = get_object_or_404(Meeting, pk=pk)
            user = request.user
        
            if not (user == meeting.organizer or user.has_perm('meetings.change_meeting')):
                messages.error(request, "You don't have permission to edit this meeting.")
                return redirect('meetings:meeting_detail', pk=pk)
        
            if request.method == 'POST':
                form = MeetingForm(request.POST, instance=meeting)
                if form.is_valid():
                    form.save()
                    messages.success(request, 'Meeting updated successfully.')
                    return redirect('meetings:meeting_detail', pk=pk)
            else:
                form = MeetingForm(instance=meeting)
        
            return render(request, 'meetings/meeting_form.html', {
                'form': form,
                'meeting': meeting,
                'action': 'Update'
            })
        
        @login_required
        def meeting_delete(request, pk):
            """Delete a meeting"""
            meeting = get_object_or_404(Meeting, pk=pk)
            user = request.user
        
            if not (user == meeting.organizer or user.has_perm('meetings.delete_meeting')):
                messages.error(request, "You don't have permission to delete this meeting.")
                return redirect('meetings:meeting_detail', pk=pk)
        
            if request.method == 'POST':
                meeting.delete()
                messages.success(request, 'Meeting deleted successfully.')
                return redirect('meetings:dashboard')
        
            return render(request, 'meetings/meeting_confirm_delete.html', {
                'meeting': meeting
            })

      . lists.py
        Content:
        # apps/meetings/views/lists.py
        from django.shortcuts import render
        from django.contrib.auth.decorators import login_required
        from django.db.models import Q
        from django.core.paginator import Paginator
        from apps.meetings.models import Meeting
        from apps.organization.models import Department
        
        @login_required
        def meeting_list(request):
            """View for listing meetings based on user's role and department"""
            user = request.user
            
            # Check if user can view all meetings
            can_view_all = user.has_perm('meetings.view_all_meetings')
            
            if can_view_all:
                meetings = Meeting.objects.all()
            else:
                # Department users see only their department meetings
                meetings = Meeting.objects.filter(
                    Q(department=user.department) | Q(participants=user)
                ).distinct()
        
            # Filter options
            status = request.GET.get('status')
            meeting_type = request.GET.get('meeting_type')
            department_id = request.GET.get('department')
        
            if status:
                meetings = meetings.filter(status=status)
            if meeting_type:
                meetings = meetings.filter(meeting_type=meeting_type)
            if department_id and can_view_all:
                meetings = meetings.filter(department_id=department_id)
        
            # Pagination
            paginator = Paginator(meetings.order_by('-date'), 10)
            page = request.GET.get('page')
            meetings = paginator.get_page(page)
        
            context = {
                'meetings': meetings,
                'departments': Department.objects.all() if can_view_all else None,
                'can_view_all': can_view_all,
            }
            return render(request, 'meetings/meeting_list.html', context)

  . memos/
    . __init__.py
      Content:


    . admin.py
      Content:
      from django.contrib import admin
      
      # Register your models here.

    . apps.py
      Content:
      from django.apps import AppConfig
      
      
      class MemosConfig(AppConfig):
          default_auto_field = "django.db.models.BigAutoField"
          name = "apps.memos"
          label = "memos"

    . forms.py
      Content:
      from django import forms
      from .models import Memo, MemoTemplate, MemoComment
      from apps.document_management.models import Document
      
      class MemoForm(forms.ModelForm):
          document = forms.FileField(required=False)
          template = forms.ModelChoiceField(
              queryset=MemoTemplate.objects.none(),
              required=False,
              empty_label="Select a template"
          )
      
          class Meta:
              model = Memo
              fields = [
                  'title', 'memo_type', 'content', 'recipient_departments',
                  'recipient_users', 'is_confidential', 'external_recipient',
                  'external_organization', 'tags', 'file_number'
              ]
              widgets = {
                  'content': forms.Textarea(attrs={'rows': 10, 'class': 'rich-text-editor'}),
                  'tags': forms.TextInput(attrs={'data-role': 'tagsinput'}),
                  'recipient_departments': forms.SelectMultiple(
                      attrs={'class': 'select2', 'data-placeholder': 'Select departments'}
                  ),
                  'recipient_users': forms.SelectMultiple(
                      attrs={'class': 'select2', 'data-placeholder': 'Select users'}
                  )
              }
      
          def __init__(self, *args, **kwargs):
              user = kwargs.pop('user', None)
              super().__init__(*args, **kwargs)
              
              if user:
                  # Filter templates based on user's department
                  self.fields['template'].queryset = MemoTemplate.objects.filter(
                      models.Q(department=user.department) | 
                      models.Q(department__isnull=True)
                  )
      
          def clean(self):
              cleaned_data = super().clean()
              memo_type = cleaned_data.get('memo_type')
              external_recipient = cleaned_data.get('external_recipient')
      
      class MemoTemplateForm(forms.ModelForm):
          class Meta:
              model = MemoTemplate
              fields = ['name', 'content', 'department']
              widgets = {
                  'content': forms.Textarea(attrs={'rows': 10, 'class': 'rich-text-editor'}),
              }
      
      class MemoCommentForm(forms.ModelForm):
          class Meta:
              model = MemoComment
              fields = ['content']
              widgets = {
                  'content': forms.Textarea(attrs={
                      'rows': 3,
                      'class': 'form-control',
                      'placeholder': 'Enter your comment'
                  }),
              }

    . models.py
      Content:
      
      from django.db import models
      from django.conf import settings
      from apps.organization.models import Department
      from apps.document_management.models import Document, DocumentCategory
      
      class MemoTemplate(models.Model):
          """Templates for different types of memos"""
          name = models.CharField(max_length=200)
          description = models.TextField(blank=True)
          content = models.TextField()
          memo_type = models.CharField(max_length=50, choices=[
              ('internal', 'Internal Memo'),
              ('external', 'External Letter'),
              ('circular', 'Circular')
          ])
          department = models.ForeignKey(Department, on_delete=models.CASCADE)
          created_by = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          created_at = models.DateTimeField(auto_now_add=True)
          updated_at = models.DateTimeField(auto_now=True)
          is_active = models.BooleanField(default=True)
      
          def __str__(self):
              return f"{self.name} - {self.get_memo_type_display()}"
      
      class Memo(models.Model):
          """Main memo model"""
          MEMO_STATUS = [
              ('draft', 'Draft'),
              ('pending_approval', 'Pending Approval'),
              ('approved', 'Approved'),
              ('rejected', 'Rejected'),
              ('published', 'Published'),
              ('archived', 'Archived')
          ]
          
          MEMO_TYPE = [
              ('internal', 'Internal Memo'),
              ('external', 'External Letter'),
              ('circular', 'Circular')
          ]
      
          title = models.CharField(max_length=255)
          reference_number = models.CharField(max_length=100, unique=True)
          memo_type = models.CharField(max_length=50, choices=MEMO_TYPE)
          template = models.ForeignKey(MemoTemplate, null=True, blank=True, on_delete=models.SET_NULL)
          content = models.TextField()
          department = models.ForeignKey(Department, on_delete=models.CASCADE)
          status = models.CharField(max_length=50, choices=MEMO_STATUS, default='draft')
          
          # Main document - stores the final version
          document = models.ForeignKey(
              Document, 
              on_delete=models.SET_NULL, 
              null=True, 
              blank=True,
              related_name='memo_main_document'
          )
          
          # Metadata
          created_by = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          created_at = models.DateTimeField(auto_now_add=True)
          updated_at = models.DateTimeField(auto_now=True)
          published_at = models.DateTimeField(null=True, blank=True)
          version_number = models.PositiveIntegerField(default=1)
          
          # Recipients and visibility
          recipient_departments = models.ManyToManyField(
              Department, related_name='received_memos', blank=True
          )
          recipient_users = models.ManyToManyField(
              settings.AUTH_USER_MODEL, related_name='receipent_memos', blank=True
          )
          is_confidential = models.BooleanField(default=False)
          
          # For external memos
          external_recipient = models.CharField(max_length=255, blank=True, null=True)
          external_organization = models.CharField(max_length=255, blank=True, null=True)
          
          # Classification and filing
          tags = models.CharField(max_length=500, blank=True)  # Comma-separated tags
          file_number = models.CharField(max_length=100, blank=True)  # For physical filing reference
          
          class Meta:
              ordering = ['-created_at']
              permissions = [
                  ("can_approve_memos", "Can approve memos"),
                  ("can_publish_memos", "Can publish memos"),
                  ("view_department_memos", "Can view department memos"),
              ]
      
          def create_document(self, file_obj, title_suffix=""):
              """Helper method to create a Document for this memo"""
              from apps.document_management.utils import DocumentManager
      
              title = f"{self.title}{title_suffix}"
              return DocumentManager.attach_document(
                  file=file_obj,
                  source_object=self,
                  uploaded_by=self.created_by,
                  title=title,
                  description=f"Document for memo: {self.reference_number}",
                  category=DocumentCategory.objects.get_or_create(
                      name="Memos",
                      defaults={'description': 'Documents related to memos'}
                  )[0],
                  is_confidential=self.is_confidential,
                  status='draft' if self.status == 'draft' else 'approved'
              )
      
      class MemoVersion(models.Model):
          """Track different versions of a memo"""
          memo = models.ForeignKey(Memo, on_delete=models.CASCADE, related_name='versions')
          version_number = models.PositiveIntegerField()
          content = models.TextField()
          document = models.ForeignKey(
              Document, 
              on_delete=models.SET_NULL,
              null=True,
              blank=True,
              related_name='memo_versions'
          )
          created_by = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          created_at = models.DateTimeField(auto_now_add=True)
          comments = models.TextField(blank=True)
          
          class Meta:
              unique_together = ['memo', 'version_number']
              ordering = ['-version_number']
      
      class MemoApproval(models.Model):
          """Track approval workflow for memos"""
          APPROVAL_STATUS = [
              ('pending', 'Pending'),
              ('approved', 'Approved'),
              ('rejected', 'Rejected'),
              ('skipped', 'Skipped')
          ]
          
          memo = models.ForeignKey(Memo, on_delete=models.CASCADE, related_name='approvals')
          approver = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          status = models.CharField(max_length=20, choices=APPROVAL_STATUS, default='pending')
          comments = models.TextField(blank=True)
          approved_at = models.DateTimeField(null=True, blank=True)
          level = models.PositiveIntegerField(help_text="Approval hierarchy level")
          
          # Document containing approval signature or stamp
          signature_document = models.ForeignKey(
              Document,
              on_delete=models.SET_NULL,
              null=True,
              blank=True,
              related_name='memo_approvals'
          )
          
          class Meta:
              ordering = ['level']
              unique_together = ['memo', 'approver', 'level']
      
      class MemoComment(models.Model):
          """Comments and feedback on memos"""
          memo = models.ForeignKey(Memo, on_delete=models.CASCADE, related_name='comments')
          user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          content = models.TextField()
          created_at = models.DateTimeField(auto_now_add=True)
          updated_at = models.DateTimeField(auto_now=True)
          parent = models.ForeignKey('self', null=True, blank=True, on_delete=models.CASCADE, 
                                    related_name='replies')
          is_internal = models.BooleanField(default=True, 
                                          help_text="Internal comments are only visible to memo creators and approvers")
          
          # Attachments to comments (like screenshots or supporting documents)
          attachments = models.ManyToManyField(Document, blank=True, related_name='memo_comments')
      
      class MemoActivity(models.Model):
          """Audit trail of all memo-related activities"""
          ACTION_TYPES = [
              ('create', 'Created'),
              ('update', 'Updated'),
              ('status_change', 'Status Changed'),
              ('approve', 'Approved'),
              ('reject', 'Rejected'),
              ('comment', 'Commented'),
              ('view', 'Viewed'),
              ('download', 'Downloaded'),
              ('share', 'Shared')
          ]
          
          memo = models.ForeignKey(Memo, on_delete=models.CASCADE, related_name='activities')
          user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
          action = models.CharField(max_length=20, choices=ACTION_TYPES)
          action_details = models.JSONField(null=True, blank=True)
          timestamp = models.DateTimeField(auto_now_add=True)
          ip_address = models.GenericIPAddressField(null=True, blank=True)
          user_agent = models.CharField(max_length=500, blank=True)
          
          # Related document if action involves a document
          document = models.ForeignKey(
              Document,
              on_delete=models.SET_NULL,
              null=True,
              blank=True,
              related_name='memo_activities'
          )

    . signals.py
      Content:
      # apps/memos/signals.py
      from django.db.models.signals import post_save, pre_save
      from django.dispatch import receiver
      from .models import Memo, MemoActivity, MemoApproval
      from django.utils import timezone
      
      @receiver(post_save, sender=Memo)
      def create_memo_activity(sender, instance, created, **kwargs):
          if created:
              MemoActivity.objects.create(
                  memo=instance,
                  user=instance.created_by,
                  action='create',
                  action_details={'status': instance.status}
              )
      
      @receiver(pre_save, sender=Memo)
      def track_memo_changes(sender, instance, **kwargs):
          if instance.pk:  # Only for existing instances
              old_instance = Memo.objects.get(pk=instance.pk)
              if old_instance.status != instance.status:
                  MemoActivity.objects.create(
                      memo=instance,
                      user=instance.created_by,
                      action='status_change',
                      action_details={
                          'old_status': old_instance.status,
                          'new_status': instance.status
                      }
                  )

    . tests.py
      Content:
      from django.test import TestCase
      
      # Create your tests here.

    . urls.py
      Content:
      # apps/memos/urls.py
      from django.urls import path
      from . import views
      
      app_name = 'apps.memos'
      
      urlpatterns = [
          # Dashboard
          path('', views.department_dashboard, name='department_dashboard'),
          path('my-memos/', views.my_memos, name='my_memos'),
          path('pending-approvals/', views.pending_approvals, name='pending_approvals'),
          
          # Memo CRUD
          path('create/', views.memo_create, name='memo_create'),
          path('<int:pk>/', views.memo_detail, name='memo_detail'),
          path('<int:pk>/edit/', views.memo_edit, name='memo_edit'),
          path('<int:pk>/delete/', views.memo_delete, name='memo_delete'),
          
          # Workflow
          path('<int:pk>/submit/', views.memo_submit, name='memo_submit'),
          path('<int:pk>/approve/', views.memo_approve, name='memo_approve'),
          path('<int:pk>/reject/', views.memo_reject, name='memo_reject'),
          path('<int:pk>/publish/', views.memo_publish, name='memo_publish'),
          
          # Comments
          path('<int:pk>/comment/', views.add_comment, name='add_comment'),
          path('comment/<int:pk>/reply/', views.add_reply, name='add_reply'),
          
          # Templates
          path('templates/', views.template_list, name='template_list'),
          path('templates/create/', views.template_create, name='template_create'),
          path('templates/<int:pk>/edit/', views.template_edit, name='template_edit'),
          
          # API endpoints for AJAX
          path('api/memo/<int:pk>/status/', views.memo_status_update, name='memo_status_update'),
          path('api/memo/<int:pk>/attachments/', views.memo_attachments, name='memo_attachments'),
      ]

    . views.py
      Content:
      from django.shortcuts import render, get_object_or_404, redirect
      from django.contrib.auth.decorators import login_required, permission_required
      from django.contrib import messages
      from django.db.models import Q, Count
      from django.http import JsonResponse
      from django.views.decorators.http import require_POST
      from django.utils import timezone
      
      from .models import Memo, MemoTemplate, MemoApproval, MemoComment, MemoActivity
      from .forms import MemoForm, MemoTemplateForm, MemoCommentForm
      from apps.document_management.models import Document
      from apps.document_management.utils.document_manager import DocumentManager
      
      @login_required
      def department_dashboard(request):
          """Department dashboard showing memo statistics and lists"""
          user = request.user
          department = user.department
      
          # Get memos statistics
          stats = {
              'draft': Memo.objects.filter(department=department, status='draft').count(),
              'pending': Memo.objects.filter(department=department, status='pending_approval').count(),
              'approved': Memo.objects.filter(department=department, status='approved').count(),
              'published': Memo.objects.filter(department=department, status='published').count()
          }
      
          # Recent memos
          recent_memos = Memo.objects.filter(
              Q(department=department) | Q(recipient_departments=department)
          ).distinct().order_by('-created_at')[:10]
      
          # Pending approvals
          pending_approvals = MemoApproval.objects.filter(
              approver=request.user,
              status='pending'
          ).select_related('memo').order_by('memo__created_at')
      
          context = {
              'stats': stats,
              'recent_memos': recent_memos,
              'pending_approvals': pending_approvals
          }
          return render(request, 'memos/dashboard.html', context)
      
      @login_required
      def memo_create(request):
          """Create a new memo"""
          if request.method == 'POST':
              form = MemoForm(request.POST, request.FILES)
              if form.is_valid():
                  memo = form.save(commit=False)
                  memo.created_by = request.user
                  memo.department = request.user.department
                  memo.save()
                  form.save_m2m()
      
                  # Handle document creation if file is uploaded
                  if request.FILES.get('document'):
                      memo.create_document(request.FILES['document'])
      
                  messages.success(request, 'Memo created successfully.')
                  return redirect('memos:memo_detail', pk=memo.pk)
          else:
              form = MemoForm()
      
          templates = MemoTemplate.objects.filter(
              Q(department=request.user.department) | Q(department__isnull=True)
          )
      
          return render(request, 'memos/memo_form.html', {
              'form': form,
              'templates': templates,
              'action': 'Create'
          })
      
      @login_required
      def memo_detail(request, pk):
          """View memo details"""
          memo = get_object_or_404(Memo, pk=pk)
          user = request.user
      
          # Check permissions
          if not (user == memo.created_by or 
                  user.department == memo.department or
                  memo.recipient_departments.filter(id=user.department.id).exists() or
                  memo.recipient_users.filter(id=user.id).exists()):
              messages.error(request, "You don't have permission to view this memo.")
              return redirect('memos:department_dashboard')
      
          # Record view activity
          MemoActivity.objects.create(
              memo=memo,
              user=user,
              action='view',
              ip_address=request.META.get('REMOTE_ADDR')
          )
      
          context = {
              'memo': memo,
              'approvals': memo.approvals.select_related('approver').order_by('level'),
              'comments': memo.comments.select_related('user').order_by('created_at'),
              'activities': memo.activities.select_related('user').order_by('-timestamp')[:10],
              'can_approve': MemoApproval.objects.filter(
                  memo=memo, 
                  approver=user, 
                  status='pending'
              ).exists()
          }
          return render(request, 'memos/memo_detail.html', context)
      
      @login_required
      @require_POST
      def memo_submit(request, pk):
          """Submit memo for approval"""
          memo = get_object_or_404(Memo, pk=pk)
          
          if memo.created_by != request.user:
              messages.error(request, "You don't have permission to submit this memo.")
              return redirect('memos:memo_detail', pk=pk)
      
          if memo.status != 'draft':
              messages.error(request, "Only draft memos can be submitted for approval.")
              return redirect('memos:memo_detail', pk=pk)
      
          # Create approval workflow
          approvers = get_memo_approvers(memo)  # Define this function based on your workflow rules
          for level, approver in enumerate(approvers, 1):
              MemoApproval.objects.create(
                  memo=memo,
                  approver=approver,
                  level=level
              )
      
          memo.status = 'pending_approval'
          memo.save()
      
          messages.success(request, 'Memo submitted for approval.')
          return redirect('memos:memo_detail', pk=pk)
      
      @login_required
      @require_POST
      def memo_approve(request, pk):
          """Approve a memo"""
          memo = get_object_or_404(Memo, pk=pk)
          approval = get_object_or_404(
              MemoApproval, 
              memo=memo, 
              approver=request.user,
              status='pending'
          )
      
          approval.status = 'approved'
          approval.approved_at = timezone.now()
          approval.comments = request.POST.get('comments', '')
          approval.save()
      
          # Handle digital signature/stamp if provided
          if request.FILES.get('signature'):
              document = DocumentManager.attach_document(
                  file=request.FILES['signature'],
                  source_object=approval,
                  uploaded_by=request.user,
                  title=f"Approval signature - {memo.reference_number} - Level {approval.level}",
                  is_confidential=memo.is_confidential
              )
              approval.signature_document = document
              approval.save()
      
          # Check if this was the final approval
          if not memo.approvals.filter(status='pending').exists():
              memo.status = 'approved'
              memo.save()
              messages.success(request, 'Final approval granted. Memo is now approved.')
          else:
              messages.success(request, 'Memo approved. Waiting for next level approval.')
      
          return redirect('memos:memo_detail', pk=pk)
      
      @login_required
      def pending_approvals(request):
          """List of memos pending user's approval"""
          pending = MemoApproval.objects.filter(
              approver=request.user,
              status='pending'
          ).select_related(
              'memo', 
              'memo__created_by', 
              'memo__department'
          ).order_by('memo__created_at')
      
          return render(request, 'memos/pending_approvals.html', {'approvals': pending})
      
      @login_required
      @require_POST
      def add_comment(request, pk):
          """Add a comment to a memo"""
          memo = get_object_or_404(Memo, pk=pk)
          form = MemoCommentForm(request.POST)
          
          if form.is_valid():
              comment = form.save(commit=False)
              comment.memo = memo
              comment.user = request.user
              comment.save()
      
              # Handle attachments
              for file in request.FILES.getlist('attachments'):
                  document = DocumentManager.attach_document(
                      file=file,
                      source_object=comment,
                      uploaded_by=request.user,
                      title=f"Comment attachment - {memo.reference_number}",
                      is_confidential=memo.is_confidential
                  )
                  comment.attachments.add(document)
      
              if request.headers.get('X-Requested-With') == 'XMLHttpRequest':
                  return JsonResponse({
                      'status': 'success',
                      'comment_html': render_to_string(
                          'memos/partials/comment.html', 
                          {'comment': comment}
                      )
                  })
      
          messages.success(request, 'Comment added successfully.')
          return redirect('memos:memo_detail', pk=pk)
      
      def get_memo_approvers(memo):
          """Helper function to determine memo approvers based on department hierarchy"""
          approvers = []
          department = memo.department
      
          # Add immediate supervisor
          if department.head:
              approvers.append(department.head)
      
          # Add department director
          if department.director and department.director != department.head:
              approvers.append(department.director)
      
          # Add additional approvers based on memo type and department
          if memo.memo_type == 'external':
              # Add any additional required approvers for external memos
              pass
      
          return approvers
      
      @login_required
      def my_memos(request):
          """View for listing memos created by the current user"""
          memos = Memo.objects.filter(created_by=request.user).order_by('-created_at')
          return render(request, 'memos/my_memos.html', {'memos': memos})
      
      
      
      @login_required
      def memo_edit(request, pk):
          """Edit an existing memo"""
          memo = get_object_or_404(Memo, pk=pk)
      
          if memo.status != 'draft':
              messages.error(request, "Only draft memos can be edited.")
              return redirect('memos:memo_detail', pk=pk)
      
          if request.method == 'POST':
              form = MemoForm(request.POST, request.FILES, instance=memo)
              if form.is_valid():
                  memo = form.save()
                  form.save_m2m()
                  messages.success(request, 'Memo updated successfully.')
                  return redirect('memos:memo_detail', pk=memo.pk)
          else:
              form = MemoForm(instance=memo, user=request.user)
      
          templates = MemoTemplate.objects.filter(department=request.user.department)
      
          return render(request, 'memos/memo_form.html', {
              'form': form,
              'memo': memo,
              'templates': templates,
              'action': 'Edit'
          })
      
      
      @login_required
      @require_POST
      def memo_delete(request, pk):
          """Delete a memo"""
          memo = get_object_or_404(Memo, pk=pk)
      
          if memo.created_by != request.user:
              messages.error(request, "You don't have permission to delete this memo.")
              return redirect('memos:memo_detail', pk=pk)
      
          if memo.status != 'draft':
              messages.error(request, "Only draft memos can be deleted.")
              return redirect('memos:memo_detail', pk=pk)
      
          memo.delete()
          messages.success(request, 'Memo deleted successfully.')
          return redirect('memos:department_dashboard')
      
      
      @login_required
      @require_POST
      def memo_reject(request, pk):
          """Reject a memo approval request"""
          memo = get_object_or_404(Memo, pk=pk)
          approval = get_object_or_404(
              MemoApproval,
              memo=memo,
              approver=request.user,
              status='pending'
          )
      
          approval.status = 'rejected'
          approval.comments = request.POST.get('comments', '')
          approval.rejected_at = timezone.now()
          approval.save()
      
          messages.success(request, 'Memo approval rejected.')
          return redirect('memos:memo_detail', pk=pk)
      
      
      @login_required
      @require_POST
      def memo_publish(request, pk):
          """Publish a memo"""
          memo = get_object_or_404(Memo, pk=pk)
      
          if memo.status != 'approved':
              messages.error(request, "Only approved memos can be published.")
              return redirect('memos:memo_detail', pk=pk)
      
          memo.status = 'published'
          memo.published_at = timezone.now()
          memo.save()
      
          messages.success(request, 'Memo published successfully.')
          return redirect('memos:memo_detail', pk=pk)
      
      # add_reply
      @login_required
      def add_reply(request, pk):
          """Add a reply to a memo"""
          memo = get_object_or_404(Memo, pk=pk)
          form = MemoCommentForm(request.POST)
          
          if form.is_valid():
              comment = form.save(commit=False)
              comment.memo = memo
              comment.user = request.user
              comment.save()
      
              # Handle attachments
              for file in request.FILES.getlist('attachments'):
                  document = DocumentManager.attach_document(
                      file=file,
                      source_object=comment,
                      uploaded_by=request.user,
                      title=f"Comment attachment - {memo.reference_number}",
                      is_confidential=memo.is_confidential
                  )
                  comment.attachments.add(document)
      
              if request.headers.get('X-Requested-With') == 'XMLHttpRequest':
                  return JsonResponse({
                      'status': 'success',
                      'comment_html': render_to_string(
                          'memos/partials/comment.html', 
                          {'comment': comment}
                      )
                  })
      
          messages.success(request, 'Comment added successfully.')
          return redirect('memos:memo_detail', pk=pk)
      
      # template_list
      
      @login_required
      def template_list(request):
          """List of memo templates"""
          templates = MemoTemplate.objects.filter(
              Q(department=request.user.department) | Q(department__isnull=True)
          )
          return render(request, 'memos/template_list.html', {'templates': templates})
      
      
      # template_create
      
      @login_required
      def template_create(request):
          """Create a new memo template"""
          if request.method == 'POST':
              form = MemoTemplateForm(request.POST)
              if form.is_valid():
                  template = form.save(commit=False)
                  template.department = request.user.department
                  template.save()
                  form.save_m2m()
                  messages.success(request, 'Template created successfully.')
                  return redirect('memos:template_list')
          else:
              form = MemoTemplateForm()
      
          return render(request, 'memos/template_form.html', {
              'form': form,
              'action': 'Create'
          })
      
      
      # template_edit
      
      @login_required
      def template_edit(request, pk):
          """Edit an existing memo template"""
          template = get_object_or_404(MemoTemplate, pk=pk)
      
          if request.method == 'POST':
              form = MemoTemplateForm(request.POST, instance=template)
              if form.is_valid():
                  template = form.save()
                  form.save_m2m()
                  messages.success(request, 'Template updated successfully.')
                  return redirect('memos:template_list')
          else:
              form = MemoTemplateForm(instance=template)
      
          return render(request, 'memos/template_form.html', {
              'form': form,
              'template': template,
              'action': 'Edit'
          })
      
      # memo_status_update
      
      @login_required
      @require_POST
      def memo_status_update(request, pk):
          """Update memo status"""
          memo = get_object_or_404(Memo, pk=pk)
          status = request.POST.get('status')
      
          if status not in ['draft', 'pending_approval', 'approved', 'published']:
              messages.error(request, 'Invalid status.')
              return redirect('memos:memo_detail', pk=pk)
      
          memo.status = status
          memo.save()
      
          messages.success(request, 'Memo status updated successfully.')
          return redirect('memos:memo_detail', pk=pk)
      
      
      # memo_attachments
      
      @login_required
      def memo_attachments(request, pk):
          """View memo attachments"""
          memo = get_object_or_404(Memo, pk=pk)
          return render(request, 'memos/memo_attachments.html', {'memo': memo})
      
          

  . organization/
    . __init__.py
      Content:


    . admin.py
      Content:
      from django.contrib import admin
      
      # Register your models here.

    . apps.py
      Content:
      from django.apps import AppConfig
      
      
      class OrganizationConfig(AppConfig):
          default_auto_field = "django.db.models.BigAutoField"
          name = "apps.organization"

    . management/
      . commands/
        . clear_org_data.py
          Content:
          # apps/organization/management/commands/clear_org_data.py
          from django.core.management.base import BaseCommand
          from django.contrib.auth import get_user_model
          from apps.organization.models import Department, Role, UserRole
          
          class Command(BaseCommand):
              help = 'Clears all organization data'
          
              def handle(self, *args, **kwargs):
                  User = get_user_model()
                  UserRole.objects.all().delete()
                  Role.objects.all().delete()
                  Department.objects.all().delete()
                  User.objects.all().delete()
                  self.stdout.write(self.style.SUCCESS('Successfully cleared all organization data'))

        . seed_organization.py
          Content:
          # apps/organization/management/commands/seed_organization.py
          from django.core.management.base import BaseCommand
          from django.contrib.auth import get_user_model
          from apps.organization.models import Department, Role, UserRole
          
          User = get_user_model()
          
          class Command(BaseCommand):
              help = 'Seeds organization structure and users'
          
              def handle(self, *args, **kwargs):
                  self.stdout.write('Creating departments...')
                  departments = {
                      'directors_office': Department.objects.create(
                          name="Director's Office",
                          description="Office of the Director of Strategy, Planning and Organizational Performance"
                      ),
                      'performance': Department.objects.create(
                          name="Performance Coordination",
                          description="Performance monitoring and coordination"
                      ),
                      'planning': Department.objects.create(
                          name="Planning, Monitoring & Evaluation",
                          description="Planning, monitoring and evaluation activities"
                      ),
                      'research': Department.objects.create(
                          name="Research & Statistics",
                          description="Research and statistical analysis"
                      ),
                      'quality': Department.objects.create(
                          name="Quality Assurance & Innovation",
                          description="Quality assurance and innovation initiatives"
                      )
                  }
          
                  self.stdout.write('Creating base roles...')
                  base_roles = [
                      ("Assistant Director", 'JSG3'),
                      ("Court Assistant II", 'JSG4'),
                      ("Economist I", 'JSG4'),
                      ("Court Administrator I", 'JSG4'),
                      ("Statistician II", 'JSG4'),
                      ("Accountant I", 'JSG4'),
                      ("Office Assistant I", 'JSG5'),
                      ("Office Assistant II", 'JSG5'),
                  ]
          
                  roles = {}
                  for dept in departments.values():
                      for title, job_group in base_roles:
                          role_key = f"{title}_{dept.name}".lower().replace(' ', '_').replace(',', '').replace('&', 'and')
                          roles[role_key] = Role.objects.create(
                              title=title,
                              department=dept,
                              job_group=job_group
                          )
          
                  staff_data = [
                      {'name': 'George Obai', 'pj': '64282', 'title': 'Assistant Director', 'dept': departments['performance']},
                      {'name': 'Dominic Nyambane', 'pj': '64739', 'title': 'Assistant Director', 'dept': departments['planning']},
                      {'name': 'Gilbert Kipkirui', 'pj': '69727', 'title': 'Assistant Director', 'dept': departments['research']},
                      {'name': 'Victor Lumwamu', 'pj': '62751', 'title': 'Economist I', 'dept': departments['quality']},
                      {'name': 'Alex Njeru', 'pj': '75665', 'title': 'Court Assistant II', 'dept': departments['planning']},
                      {'name': 'Evelyne Simiyu', 'pj': '42505', 'title': 'Economist I', 'dept': departments['performance']},
                      {'name': 'Linda Lukhale', 'pj': '44029', 'title': 'Court Administrator I', 'dept': departments['quality']},
                      {'name': 'Martin Asitiba', 'pj': '33627', 'title': 'Court Assistant II', 'dept': departments['research']},
                      {'name': 'Eric Kocheli', 'pj': '75681', 'title': 'Court Assistant II', 'dept': departments['research']},
                      {'name': 'Solomon Onyara', 'pj': '76433', 'title': 'Court Assistant II', 'dept': departments['planning']},
                      {'name': 'Caroline Mungai', 'pj': '75657', 'title': 'Court Assistant II', 'dept': departments['quality']},
                      {'name': 'Margret Ochieng', 'pj': '80113', 'title': 'Court Assistant II', 'dept': departments['research']},
                      {'name': 'Stanford Mwangi', 'pj': '47117', 'title': 'Court Assistant II', 'dept': departments['research']},
                      {'name': 'Patrick Ngobiro', 'pj': '59433', 'title': 'Court Assistant II', 'dept': departments['directors_office']},
                      {'name': 'John Mbiti', 'pj': '71530', 'title': 'Court Assistant II', 'dept': departments['performance']},
                      {'name': 'Mercy Chemitai', 'pj': '71483', 'title': 'Court Assistant II', 'dept': departments['research']},
                      {'name': 'Hannah Gichuki', 'pj': '54936', 'title': 'Office Assistant II', 'dept': departments['directors_office']},
                      {'name': 'Lucy Gachoka', 'pj': '30982', 'title': 'Office Assistant I', 'dept': departments['directors_office']},
                      {'name': 'Steve Njehia', 'pj': '57049', 'title': 'Accountant I', 'dept': departments['planning']},
                      {'name': 'Leonard Melly', 'pj': '81485', 'title': 'Statistician II', 'dept': departments['research']},
                      {'name': 'Lorna Barasa', 'pj': '82594', 'title': 'Office Assistant II', 'dept': departments['directors_office']}
                  ]
          
                  self.stdout.write('Creating staff users...')
                  for staff in staff_data:
                      user = User.objects.create(
                          username=f"{staff['name'].lower().replace(' ', '.')}",
                          first_name=staff['name'].split()[0],
                          last_name=staff['name'].split()[-1],
                          email=f"{staff['name'].lower().replace(' ', '.')}@judiciary.go.ke",
                          pj_number=staff['pj']
                      )
                      user.set_password('Password123!')
                      user.save()
          
                      role_key = f"{staff['title']}_{staff['dept'].name}".lower().replace(' ', '_').replace(',', '').replace('&', 'and')
                      role = roles[role_key]
                      
                      UserRole.objects.create(
                          user=user,
                          role=role,
                          is_active=True
                      )
          
                  self.stdout.write('Creating director user...')
                  director = User.objects.create(
                      username='joseph.osewe',
                      email='joseph.osewe@judiciary.go.ke',
                      first_name='Joseph',
                      last_name='Osewe',
                      is_staff=True,
                      is_superuser=True
                  )
                  director.set_password('Admin123!')
                  director.save()
          
                  self.stdout.write(self.style.SUCCESS('Successfully seeded organization data'))

    . models.py
      Content:
      from django.db import models
      from django.conf import settings
      
      class Department(models.Model):
          name = models.CharField(max_length=200)
          description = models.TextField(blank=True)
          created_at = models.DateTimeField(auto_now_add=True)
          is_active = models.BooleanField(default=True)
      
          def __str__(self):
              return self.name
      
          class Meta:
              ordering = ['name']
      
      class Role(models.Model):
          JOB_GROUPS = [
              ('JSG1', 'JSG1'),
              ('JSG2', 'JSG2'),
              ('JSG3', 'JSG3'),
              ('JSG4', 'JSG4'),
              ('JSG5', 'JSG5'),
          ]
      
          title = models.CharField(max_length=200)
          department = models.ForeignKey(Department, on_delete=models.CASCADE, related_name='roles')
          job_group = models.CharField(max_length=4, choices=JOB_GROUPS)
          description = models.TextField(blank=True)
          is_active = models.BooleanField(default=True)
          created_at = models.DateTimeField(auto_now_add=True)
      
          def __str__(self):
              return f"{self.title} ({self.department.name})"
      
          class Meta:
              ordering = ['department', 'job_group', 'title']
      
      class UserRole(models.Model):
          user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='user_roles')
          role = models.ForeignKey(Role, on_delete=models.CASCADE)
          assigned_at = models.DateTimeField(auto_now_add=True)
          is_active = models.BooleanField(default=True)
      
          def __str__(self):
              return f"{self.user.username} - {self.role.title}"
      
          class Meta:
              unique_together = ['user', 'role']

    . tests.py
      Content:
      from django.test import TestCase
      
      # Create your tests here.

    . views.py
      Content:
      from django.shortcuts import render
      
      # Create your views here.

  . statistics/
    . __init__.py
      Content:


    . admin.py
      Content:
      from django.contrib import admin
      
      # Register your models here.

    . apps.py
      Content:
      from django.apps import AppConfig
      
      
      class StastisticsConfig(AppConfig):
          default_auto_field = 'django.db.models.BigAutoField'
          name = 'apps.statistics'
          label = 'statistics'

    . components/
      . __init__.py
        Content:


      . case_summary.py
        Content:
        # views.py
        from django_unicorn.components import UnicornView
        from apps.statistics.models import DcrtData
        from django_pandas.io import read_frame
        from django.utils.html import format_html
        
        class CaseSummaryView(UnicornView):
            selected_column = None
            queryset = None
            columns = None 
            summary = {}
            shape = None
            df = None
        
            def __init__(self, *args, **kwargs):
                super().__init__(*args, **kwargs)
                self.queryset = DcrtData.objects.all()
                if self.queryset:
                    df = read_frame(self.queryset)
                    self.columns = df.columns.tolist()
                    self.shape = df.shape
        
            def changeColumn(self):
                if self.selected_column and self.queryset:
                    df = read_frame(self.queryset)
                    self.summary = df[self.selected_column].describe().to_dict()
                    self.shape = df.shape
                    

      . dashboard.py
        Content:
        # views.py
        from django_unicorn.components import UnicornView
        from django.shortcuts import redirect
        
        # import models
        from apps.statistics.models import UnitRank, FinancialYear, FinancialQuarter
        
        class DashboardView(UnicornView):
            court_rank = None
            financial_year = None
            quarter = None
            unit_ranks = None
            financial_years = FinancialYear.objects.all()
            financial_quarters = FinancialQuarter.objects.filter(financial_year=financial_year)
        
            def __init__(self, *args, **kwargs):
                super().__init__(*args, **kwargs)
                self.unit_ranks =  UnitRank.objects.all()
                
        
            def changeCourtRank(self):
                if self.court_rank:
                    self.financial_years = FinancialYear.objects.all()
                    self.financial_year = None
                    self.quarter = None
                    self.financial_quarters = None
           
        
            def changeFinancialYear(self):
                if self.financial_year:
                    self.financial_quarters = FinancialQuarter.objects.filter(financial_year=self.financial_year)
                    self.quarter = None
        
            def changeQuarter(self):
                print(self.quarter)
                if self.quarter:
                    return redirect('statistics:rank_units', self.court_rank, self.financial_year, self.quarter)

      . hello_magic.py
        Content:
        from django_unicorn.components import UnicornView
        
        
        class HelloMagicView(UnicornView):
            pass

      . hello_world.py
        Content:
        # hello_world.py
        from django_unicorn.components import UnicornView
        
        class HelloWorldView(UnicornView):
            name = "World"

    . management/
      . commands/
        . check_data.py
          Content:
          # Create a new file: apps/statistics/management/commands/check_data.py
          
          from django.core.management.base import BaseCommand
          from apps.statistics.models import Unit, Division, UnitDivision
          
          class Command(BaseCommand):
              help = 'Check existing data in database'
          
              def handle(self, *args, **options):
                  self.stdout.write("Checking existing data...")
                  
                  self.stdout.write("\nDivisions:")
                  for division in Division.objects.all():
                      self.stdout.write(f"ID: {division.id}, Name: {division.name}")
                      
                  self.stdout.write("\nUnits:")
                  for unit in Unit.objects.all():
                      self.stdout.write(f"ID: {unit.id}, Name: {unit.name}")

        . populate_unit_ranks.py
          Content:
          from django.core.management.base import BaseCommand
          from apps.statistics.models import UnitRank
          
          class Command(BaseCommand):
              help = 'Populates the unit ranks table'
          
              def handle(self, *args, **options):
                  unit_ranks = [
                      {'name': 'Supreme Court', 'is_court': True},
                      {'name': 'Court of Appeal', 'is_court': True},
                      {'name': 'High Court', 'is_court': True},
                      {'name': 'Employment and Labour Relations Court', 'is_court': True},
                      {'name': 'Environment and Land Court', 'is_court': True},
                      {'name': 'Magistrate Court', 'is_court': True},
                      {'name': 'Kadhi Court', 'is_court': True},
                      {'name': 'Tribunal', 'is_court': True},
                      {'name': 'Committee', 'is_court': False},
                      {'name': 'Library', 'is_court': False},
                      {'name': 'Directorate', 'is_court': False},
                      {'name': 'Other Office', 'is_court': False},
                      {'name': 'Small Claim', 'is_court': True},
                  ]
          
                  for rank in unit_ranks:
                      UnitRank.objects.create(name=rank['name'])
          
                  self.stdout.write(self.style.SUCCESS('Successfully populated unit ranks.'))

        . seed_months.py
          Content:
          from django.core.management.base import BaseCommand
          from apps.statistics.models import Months
          
          class Command(BaseCommand):
              help = 'Seed months data'
          
              def handle(self, *args, **options):
                  months_data = [
                      {'name': 'January', 'month_number': 31 ,"financial_quarter":3},
                      {'name': 'February', 'month_number': 28 ,"financial_quarter":3},
                      {'name': 'March', 'month_number': 31 ,"financial_quarter":3},
                      {'name': 'April', 'month_number': 30,"financial_quarter":4},
                      {'name': 'May', 'month_number': 31 ,"financial_quarter":4},
                      {'name': 'June', 'month_number': 30 ,"financial_quarter":4},
                      {'name': 'July', 'month_number': 31 ,"financial_quarter":1},
                      {'name': 'August', 'month_number': 31 ,"financial_quarter":1},
                      {'name': 'September', 'month_number': 30 ,"financial_quarter":1},
                      {'name': 'October', 'month_number': 31 ,"financial_quarter":2},
                      {'name': 'November', 'month_number': 30 ,"financial_quarter":2},
                      {'name': 'December', 'month_number': 31 ,"financial_quarter":2},
                  ]
          
                  for month_data in months_data:
                      Months.objects.create(
                          name=month_data['name'],
                          month_number=month_data['month_number'],
                          financial_quarter=month_data['financial_quarter']
                      )
          
                  self.stdout.write(self.style.SUCCESS('Successfully seeded months data'))

        . seeddivisions.py
          Content:
          import csv
          from django.core.management.base import BaseCommand
          from apps.statistics.models import Division
          import os
          
          class Command(BaseCommand):
              help = 'Seed divisions data'
          
              def handle(self, *args, **options):
                  Division.objects.all().delete()
                  base = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
          
                  with open(base + '/data/division.csv') as csvfile:
                      divisions_data = csv.reader(csvfile)
                      next(divisions_data)  # Skip header row
          
                      for data in divisions_data:
                          Division.objects.create(
                              name=data[1],
                              is_active=bool(int(data[2])),
                              code=data[3],
                              deleted_at=None if data[4] == 'NULL' else data[4]
                          )
          
                  self.stdout.write(self.style.SUCCESS('Successfully seeded divisions data'))

        . seedfinancialdata.py
          Content:
          from django.core.management.base import BaseCommand
          
          from apps.statistics.seeder.financial_seeder import seed_financial_periods
          
          class Command(BaseCommand):
              help = 'Seed financial data into the database.'
          
              def handle(self, *args, **options):
                  seed_financial_periods()
                  self.stdout.write(self.style.SUCCESS('Financial data seeded successfully.'))

        . unit_division_seeder.py
          Content:
          from django.core.management.base import BaseCommand
          import os
          import csv
          from apps.statistics.models import UnitDivision, Unit, Division
          
          class Command(BaseCommand):
              help = 'Seed Unit Division data from CSV file'
          
              def handle(self, *args, **options):
                  self.stdout.write("Starting Unit Division seeding...")
                  
                  # Clear existing data
                  UnitDivision.objects.all().delete()
                  self.stdout.write("Cleared existing Unit Division data")
          
                  base_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
          
                  success_count = 0
                  error_count = 0
                  skipped_count = 0
                  
                  with open(base_dir + '/data/unit_division.csv') as csv_file:
                      csv_reader = csv.reader(csv_file)
                      header = next(csv_reader)  # Skip header row
                      
                      for row in csv_reader:
                          try:
                              unit_id = int(row[1])
                              division_id = int(row[2])
                              
                              # Check if Unit exists and can have divisions
                              try:
                                  unit = Unit.objects.get(id=unit_id)
                                  
                                  # Skip if unit cannot have divisions
                                  if not unit.has_division:
                                      self.stdout.write(f'Skipping unit {unit.name} (ID: {unit_id}) - Cannot have divisions')
                                      skipped_count += 1
                                      continue
                                      
                                  division = Division.objects.get(id=division_id)
                                  
                                  # Create UnitDivision
                                  UnitDivision.objects.create(
                                      id=int(row[0]),
                                      unit=unit,
                                      division=division,
                                  )
                                  success_count += 1
                                  
                              except Unit.DoesNotExist:
                                  self.stdout.write(self.style.ERROR(f'Unit with id {unit_id} does not exist'))
                                  error_count += 1
                              except Division.DoesNotExist:
                                  self.stdout.write(self.style.ERROR(f'Division with id {division_id} does not exist'))
                                  error_count += 1
                              except Exception as e:
                                  self.stdout.write(self.style.ERROR(f'Error processing row {row}: {str(e)}'))
                                  error_count += 1
                                  
                          except ValueError as e:
                              self.stdout.write(self.style.ERROR(f'Invalid data in row {row}: {str(e)}'))
                              error_count += 1
          
                  self.stdout.write(self.style.SUCCESS(
                      f'Finished seeding Unit Divisions.\n'
                      f'Successfully processed: {success_count} records\n'
                      f'Skipped (no divisions allowed): {skipped_count} records\n'
                      f'Errors encountered: {error_count} records'
                  ))

        . unit_seeder.py
          Content:
          from django.core.management.base import BaseCommand
          from apps.statistics.models import Unit
          import os
          import csv
          
          class Command(BaseCommand):
              help = 'Seed units from CSV file'
          
              def handle(self, *args, **options):
                  Unit.objects.all().delete()  # Optional: Truncate the Unit table before seeding
                  base_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
                  with open(base_dir + '/data/unit.csv') as csv_file:
                      csv_reader = csv.reader(csv_file)
                      next(csv_reader)  # Skip header row
                      for row in csv_reader:
                          Unit.objects.create(
                              id=row[0],
                              name=row[1],
                              unique_id=row[2],
                              unique_code=row[3],
                              unit_rank_id=row[4],
                              head_id_fk=row[5],
                              subhead_id_fk=row[6],
                          )
          
                  self.stdout.write(self.style.SUCCESS('Successfully seeded units.'))
          
          
                   

    . models.py
      Content:
      from django.db import models
      
      # Create your models here.
      
      from django.db import models
      
      class UnitRank(models.Model):
          name = models.CharField(max_length=255)
          is_court = models.BooleanField(default=False)
      
      class FinancialYear(models.Model):
          name = models.CharField(max_length=255)
          start_date = models.DateTimeField()
          end_date = models.DateTimeField()
      
      class FinancialQuarter(models.Model):
          name = models.CharField(max_length=255)
          start_date = models.DateField()
          end_date = models.DateField()
          financial_year = models.ForeignKey(FinancialYear, on_delete=models.CASCADE)
          quarter_number = models.IntegerField(help_text='The financial quarter in which the month falls. It is either 1, 2, 3, or 4')
      
          # show the name - start_date - end_date as get_quarter_name in date format dd/mm/yyyy
      
          def get_quarter_name(self):
              return self.name + ' - ' + str(self.start_date.strftime('%d/%m/%Y')) + ' - ' + str(self.end_date.strftime('%d/%m/%Y'))
          
      class Unit(models.Model):
          name = models.CharField(max_length=255)
          unique_id = models.CharField(max_length=255)
          unique_code = models.CharField(max_length=255)
          unit_rank = models.ForeignKey(UnitRank, on_delete=models.CASCADE)
          head_id_fk = models.IntegerField()
          subhead_id_fk = models.IntegerField()
          has_division = models.BooleanField(default=False)
          is_court = models.BooleanField(default=False)
          latitude = models.FloatField(default=0)
          longitude = models.FloatField(default=0)
      
      class Months(models.Model):
          name = models.CharField(max_length=255)
          month_number = models.IntegerField(help_text='Number of days in the month')
          # the financial quarter in which the month falls . it is either 1,2,3,4. 
          financial_quarter = models.IntegerField( help_text='The financial quarter in which the month falls. It is either 1, 2, 3, or 4')
      
      
      
          def __str__(self):
              return self.name
          
      class Division(models.Model):
          name = models.CharField(max_length=255)
          is_active = models.BooleanField(default=True)
          code = models.CharField(max_length=50)
          deleted_at = models.DateTimeField(null=True, blank=True)
      
          def __str__(self):
              return self.name
          
      # dcrt data Model
      class DcrtData(models.Model):
          # no constraints on foreign keys
      
          unit = models.ForeignKey(Unit, on_delete=models.CASCADE)
          financial_year = models.ForeignKey(FinancialYear, on_delete=models.CASCADE)
          financial_quarter = models.ForeignKey(FinancialQuarter, on_delete=models.CASCADE)
          month = models.ForeignKey(Months, on_delete=models.CASCADE)
          division = models.ForeignKey(Division, on_delete=models.CASCADE)
          today_date_day = models.IntegerField(null=True, blank=True)
          today_date_month = models.CharField(max_length=255, null=True, blank=True)
          today_date_year = models.CharField(max_length=255, null=True, blank=True)
          name_of_court = models.CharField(max_length=255, null=True, blank=True)
          case_number_code = models.CharField(max_length=255, null=True, blank=True)
          case_number_number = models.IntegerField(null=True, blank=True)
          case_number_day = models.IntegerField(null=True, blank=True)
          case_number_month = models.CharField(max_length=255, null=True, blank=True)
          case_number_year = models.IntegerField(null=True, blank=True)
          appeal_number_court_name = models.CharField(max_length=255, null=True, blank=True)
          appeal_number_code = models.CharField(max_length=255, null=True, blank=True)
          appeal_number_number = models.IntegerField(null=True, blank=True)
          appeal_number_year = models.IntegerField(null=True, blank=True)
          specific_case_type = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_1 = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_2 = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_3 = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_4 = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_5 = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_6 = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_7 = models.CharField(max_length=255, null=True, blank=True)
          judicial_officer_8 = models.CharField(max_length=255, null=True, blank=True)
          case_coming_for = models.CharField(max_length=255 ,null=True, blank=True)
          case_outcome = models.CharField(max_length=255, null=True, blank=True)
          adjournment_reason = models.CharField(max_length=255, null=True, blank=True)
          date_of_next_activity_day = models.IntegerField(null=True, blank=True)
          date_of_next_activity_month = models.CharField(max_length=255, null=True, blank=True)
          date_of_next_activity_year = models.IntegerField(null=True, blank=True)
          no_of_plaintiffs_or_appellants_male = models.IntegerField(null=True, blank=True)
          no_of_plaintiffs_or_appellants_female = models.IntegerField(null=True, blank=True)
          no_of_plaintiffs_or_appellants_organization = models.IntegerField(null=True, blank=True)
          no_of_defendants_accused_male = models.IntegerField(null=True, blank=True)
          no_of_defendants_accused_female = models.IntegerField(null=True, blank=True)
          no_of_defendants_accused_organization = models.IntegerField(null=True, blank=True)
          parties_have_legal_representation = models.CharField(max_length=255,null=True, blank=True)
          no_of_witnesses_in_court_d = models.IntegerField(null=True, blank=True)
          no_of_witnesses_in_court_w = models.IntegerField(null=True, blank=True)
          no_of_accused_remanded = models.IntegerField(null=True, blank=True)
          last_date_of_submission_of_case_file_day = models.CharField(max_length=255, null=True, blank=True)
          last_date_of_submission_of_case_file_month = models.CharField(max_length=255, null=True, blank=True)
          last_date_of_submission_of_case_file_year = models.CharField(max_length=255, null=True, blank=True)
          remarks = models.CharField(max_length=255, null=True, blank=True)
          
      class UnitDivision(models.Model):
          unit = models.ForeignKey(Unit, on_delete=models.CASCADE)
          division = models.ForeignKey(Division, on_delete=models.CASCADE)
      
      
      

    . seeder/
      . financial_seeder.py
        Content:
        # seeds/financial.py
        
        from datetime import datetime
        
        from django.utils import timezone
        
        from apps.statistics.models import FinancialYear, FinancialQuarter
        
        
        def seed_financial_periods():
            financial_years = [
                {'name': '2018/2019', 'start_date': '2018-07-01', 'end_date': '2019-06-30', 'id': 1},
                {'name': '2019/2020', 'start_date': '2019-07-01', 'end_date': '2020-06-30', 'id': 2},
                {'name': '2020/2021', 'start_date': '2020-07-01', 'end_date': '2021-06-30', 'id': 3},
                {'name': '2021/2022', 'start_date': '2021-07-01', 'end_date': '2022-06-30', 'id': 4},
                {'name': '2022/2023', 'start_date': '2022-07-01', 'end_date': '2023-06-30', 'id': 5},
                {'name': '2023/2024', 'start_date': '2023-07-01', 'end_date': '2024-06-30', 'id': 6},
                {'name': '2024/2025', 'start_date': '2024-07-01', 'end_date': '2025-06-30', 'id': 7},
                {'name': '2025/2026', 'start_date': '2025-07-01', 'end_date': '2026-06-30', 'id': 8},
                {'name': '2026/2027', 'start_date': '2026-07-01', 'end_date': '2027-06-30', 'id': 9},
                {'name': '2027/2028', 'start_date': '2027-07-01', 'end_date': '2028-06-30', 'id': 10},
                {'name': '2028/2029', 'start_date': '2028-07-01', 'end_date': '2029-06-30', 'id': 11},
                {'name': '2029/2030', 'start_date': '2029-07-01', 'end_date': '2030-06-30', 'id': 12},
                
            ]
            
            for fy_data in financial_years:
                financial_year = FinancialYear.objects.create(
                    name=fy_data['name'],
                    start_date=datetime.strptime(fy_data['start_date'], '%Y-%m-%d').date(), 
                    end_date=datetime.strptime(fy_data['end_date'], '%Y-%m-%d').date()
                )
                
                quarters = [
                    {'name': 'Quarter 1', 'start_date': '07-01', 'end_date': '09-30','quarter_number':1}, # 'quarter_number':1
                    {'name': 'Quarter 2', 'start_date': '10-01', 'end_date': '12-31','quarter_number':2}, # 'quarter_number':2
                    {'name': 'Quarter 3', 'start_date': '01-01', 'end_date': '03-31','quarter_number':3}, # 'quarter_number':3
                    {'name': 'Quarter 4', 'start_date': '04-01', 'end_date': '06-30','quarter_number':4}, # 'quarter_number':4
                ]
                
                for quarter_data in quarters:
                    start_date = datetime.strptime(f"{financial_year.start_date.year}-{quarter_data['start_date']}", '%Y-%m-%d').date()
                    end_date = datetime.strptime(f"{financial_year.end_date.year}-{quarter_data['end_date']}", '%Y-%m-%d').date()
                
                    FinancialQuarter.objects.create(
                        name=quarter_data['name'],
                        start_date=start_date,
                        end_date=end_date,
                        financial_year=financial_year,
                        quarter_number=quarter_data['quarter_number']
                    )
                    
            print("Financial periods seeded.")

    . templates/
      . unicorn/
        . case_summary.html
          Content:
          <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
                  <p class="lead">Select a column to view its summary</p>
          
               <div class="row">
                  <div class="col-md-3">
                      <div class="form-group">
                          <label for="exampleFormControlSelect1">Select Dataset</label>
                          <select class="form-control" id="df_name" name="df_name" unicorn:change="changeDataset" unicorn:model="selected_dataset">
                              <option value="">Select Dataset</option>
                              {% for df in dfs %}
                              <option value="{{ df }}">{{ df }}</option>
                              {% endfor %}
                          </select>
                      </div>
                  </div>
              </div>
          
              <!-- shape is a tuple of (rows, columns) -->
              <div class="row">
                  <h3>Shape</h3>
                  
                  <h3>{{ shape }}</h3>
              </div>
          
          
          
              <!-- drop down for columns . columns is df.columns -->
          
              <div class="row">
                  <div class="col-md-3">
                      <div class="form-group">
                          <label for="exampleFormControlSelect1">Select Column</label>
                          <select class="form-control" id="df_column" name="df_column" unicorn:change="changeColumn" unicorn:model="selected_column">
                              <option value="">Select Column</option>
                              {% for column in columns %}
                              <option value="{{ column }}">{{ column }}</option>
                              {% endfor %}
                          </select>
                      </div>
                  </div>
              </div>
          
          
          
          
              <h5>Summary Statistics</h5>
          
              <!-- summary is a dict of summary statistics. display as a table -->
          
              <table class="table table-striped">
                  <thead>
                      <tr>
                          <th scope="col">Statistic</th>
                          <th scope="col">Value</th>
                      </tr>
                  </thead>
                  <tbody>
                      {% for key, value in summary.items %}
                      <tr>
                          <td>{{ key }}</td>
                          <td>{{ value }}</td>
                      </tr>
                      {% endfor %}
                  </tbody>
              </table>
          
          
          </div>

        . dashboard.html
          Content:
          <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
              <h2 class="mb-4">Ranks</h2>
              <p class="lead">Select court rank, financial year, and quarter to proceed.</p>
          
              <div class="form-group">
                  <label for="court_rank">Unit Rank</label>
                  <select class="form-control" id="court_rank" name="court_rank" unicorn:change="changeCourtRank" unicorn:model="court_rank">
                      <option value="">Select Unit Rank</option>
                      {% for unit_rank in unit_ranks %}
                          <option value="{{ unit_rank.id }}">{{ unit_rank.name }}</option>
                      {% endfor %}
                  </select>
              </div>
          
              <div class="form-group">
                  <label for="financial_year">Financial Year</label>
                  <select class="form-control" id="financial_year" name="financial_year" unicorn:change="changeFinancialYear" unicorn:model="financial_year" unicorn:disabled="!court_rank">
                      <option value="">Select Financial Year</option>
                      {% for financial_year in financial_years %}
                          <option value="{{ financial_year.id }}">{{ financial_year.name }}</option>
                      {% endfor %}
                  </select>
              </div>
          
              <div class="form-group">
                  <label for="quarter">FY Quarter</label>
                  <select class="form-control" id="quarter" name="quarter" unicorn:model="quarter" unicorn:change="changeQuarter" unicorn:disabled="!financial_year">
                      <option value="">Select Quarter</option>
                      {% for quarter in financial_quarters %}
                          <option value="{{ quarter.id }}">{{ quarter.get_quarter_name }}</option>
                      {% endfor %}
                  </select>
              </div>
          </div>
          

        . hello-magic.html
          Content:
          <div>
              <!-- put component code here -->
          </div>

        . hello-world.html
          Content:
          <!-- hello-world.html -->
          <div>
              <input unicorn:model="name" type="text" id="text" /><br />
              Hello {{ name|title }}
            </div>

    . tests.py
      Content:
      from django.test import TestCase
      
      # Create your tests here.

    . urls.py
      Content:
      # -*- encoding: utf-8 -*-
      """
      Copyright (c) 2019 - present AppSeed.us
      """
      
      from django.urls import path
      from apps.statistics import views
      
      app_name = "apps.statistics"
      
      urlpatterns = [
      
          # The home page
      
          path('', views.home, name='home'),
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units', views.rank_units, name='rank_units'),
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months', views.rank_unit_division_months, name='unit_division_months'),
          
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/cases/dcrt_summary', views.rank_unit_division_month_cases_summary, name='unit_division_month_cases_summary'),
      
          # upload unit_monthly_dcrt_excel
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/upload_unit_monthly_dcrt_excel', views.upload_unit_monthly_dcrt_excel, name='upload_unit_monthly_dcrt_excel'),
      
          # case summary
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/cases/case_summary', views.case_summary, name='monthly_unit_case_summary'),
      
      
          # remove missing values from dataset
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/cases/monthly_unit_outliers', views.monthly_unit_outliers, name='monthly_unit_outliers'),
      
          # remove outliers from dataset
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/cases/monthly_unit_missing_data', views.monthly_unit_missing_data, name='monthly_unit_missing_data'),
      
          # monthly_unit_duplicate_data
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/cases/monthly_unit_duplicate_data', views.monthly_unit_duplicate_data, name='monthly_unit_duplicate_data'),
      
          # view missing values
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/cases/monthly_unit_registered_cases', views.monthly_unit_registered_cases, name='monthly_unit_registered_cases'),
      
          # view outliers
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/cases/monthly_unit_resolved_cases', views.monthly_unit_resolved_cases, name='monthly_unit_resolved_cases'),
      
          # unit_division_quarters
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>', views.unit_division_quarters, name='unit_division_quarters'),
      
      
          # monthly_unit_matters_handled
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>', views.monthly_unit_matters_handled, name='monthly_unit_matters_handled'),
      
          #  monthly_unit_incomplete_data
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>/months/<int:month_id>/incomplete_data', views.monthly_unit_incomplete_data, name='monthly_unit_incomplete_data'),
      
      
          # unit_division_fy
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>/division/<int:division_id>', views.unit_division_fy, name='unit_division_fy'),
      
      
          # monthly_unit_duplicate_data
      
          path('rank/<int:id>/fy/<int:financial_year_id>/fq/<int:financial_quarter_id>/units/<int:unit_id>', views.monthly_unit_duplicate_data, name='monthly_unit_duplicate_data'),
          
      ]

    . utils.py
      Content:
      import os
      import openpyxl
      from django.conf import settings
      from openpyxl.utils import get_column_letter
      from .models import DcrtData
      
      def handle_uploaded_file(excel_file, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          # Define the destination directory within MEDIA_ROOT where the file will be saved
          destination = os.path.join(settings.MEDIA_ROOT, 'uploads', excel_file.name)
      
          # Open and save the file to the destination
          with open(destination, 'wb+') as destination_file:
              for chunk in excel_file.chunks():
                  destination_file.write(chunk)
      
          # Load the uploaded Excel file
          workbook = openpyxl.load_workbook(destination)
          worksheet = workbook.active
      
          # Start reading data from row 6, column B
          for row in worksheet.iter_rows(min_row=6, min_col=2, values_only=True):
      
              # if all values in the row are None, stop reading
              if all([cell is None for cell in row]):
                  break
              else:
              # Create a DcrtData object and populate its fields
                  dcrt_data = DcrtData(
                      unit_id=unit_id,
                      financial_year_id=financial_year_id,
                      financial_quarter_id=financial_quarter_id,
                      month_id=month_id,
                      division_id=25,
                      today_date_day=row[0],
                      today_date_month=row[1],
                      today_date_year=row[2],
                      case_number_code = row[3],
                      case_number_number = row[4],
                      case_number_day = row[5],
                      case_number_month = row[6],
                      case_number_year = row[7],
                      appeal_number_court_name = row[8],
                      appeal_number_code = row[9],
                      appeal_number_number = row[10] if row[10] else None,
                      appeal_number_year = row[11] if row[11] else None,
                      specific_case_type = row[12],
                      judicial_officer_1 = row[13],
                      judicial_officer_2 = row[14],
                      judicial_officer_3 = row[15],
                      judicial_officer_4 = row[16],
                      judicial_officer_5 = row[17],
                      judicial_officer_6 = row[18],
                      judicial_officer_7 = row[19],
                      judicial_officer_8 = row[20],
                      case_coming_for = row[21],
                      case_outcome = row[22],
                      adjournment_reason = row[23],
                      date_of_next_activity_day = row[24] if row[24] else None,
                      date_of_next_activity_month = row[25] if row[25] else None,
                      date_of_next_activity_year = row[26] if row[26] else None,
                      no_of_plaintiffs_or_appellants_male = row[27] if row[27] else None,
                      no_of_plaintiffs_or_appellants_female = row[28] if row[28] else None,
                      no_of_plaintiffs_or_appellants_organization = row[29] if row[29] else None,
                      no_of_defendants_accused_male = row[30] if row[30] else None,
                      no_of_defendants_accused_female = row[31] if row[31] else None,
                      no_of_defendants_accused_organization = row[32] if row[32] else None,
                      parties_have_legal_representation = row[33] if row[33] else None,
                      no_of_witnesses_in_court_d = row[34] if row[34] else None,
                      no_of_witnesses_in_court_w = row[35] if row[35] else None,
                      no_of_accused_remanded = row[36] if row[36] else None,
                      last_date_of_submission_of_case_file_day = row[37] if row[37] else None,
                      last_date_of_submission_of_case_file_month = row[38] if row[38] else None,
                      last_date_of_submission_of_case_file_year = row[39] if row[39] else None,
                      remarks = row[40],
                  )
                  dcrt_data.save()
      
          # Return the path where the file was saved
          return destination

    . views.py
      Content:
      from django.shortcuts import render
      from django.http import HttpResponse , HttpResponseRedirect
      from django_pandas.io import read_frame
      import urllib.request
      from .utils import handle_uploaded_file
      from apps.statistics.models import UnitRank , FinancialYear , FinancialQuarter , Unit , Months , DcrtData , Division
      
      
      
      def home(request):
          context = {
              'unit_ranks': UnitRank.objects.all(),
              'total_units': Unit.objects.count(),
              'active_divisions': Division.objects.filter(is_active=True).count(),
              'court_units': Unit.objects.filter(is_court=True).count(),
              'financial_year': FinancialYear.objects.first(),
              'financial_quarter': FinancialQuarter.objects.first(),
          }
          return render(request, 'statistics/home.html', context)
          
      
      def rank_units(request, id, financial_year_id, financial_quarter_id):
          # Handle logic for rank units view here
      
          #  UnitRank
      
          unit_rank = UnitRank.objects.get(id=id)
      
          fy = FinancialYear.objects.get(id=financial_year_id)
      
          fq = FinancialQuarter.objects.get(id=financial_quarter_id)
      
      
      
          context = {
              'units': Unit.objects.filter(unit_rank=id),
              'unit_rank': unit_rank,
              'financial_year': fy,
              'financial_quarter': fq,
          }
          return render(request, 'statistics/rank_units.html', context)
      
      def rank_unit_division_months(request, id, financial_year_id, financial_quarter_id, unit_id, division_id):
          # Handle logic for rank unit months view here
      
          #  UnitRank
          unit_rank = UnitRank.objects.get(id=id)
      
          fy = FinancialYear.objects.get(id=financial_year_id)
      
          fq = FinancialQuarter.objects.get(id=financial_quarter_id)
      
          unit = Unit.objects.get(id=unit_id)
      
          division = Division.objects.get(id=25)
           
          context = {
              'months': Months.objects.filter(financial_quarter=fq.quarter_number),
              'unit_rank': unit_rank,
              'financial_year': fy,
              'financial_quarter': fq,
              'unit': unit,
              'division': division,
              }
            
          return render(request, 'statistics/rank_unit_months.html', context)
      
      def rank_unit_month(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          #  months dictionary with e.g id 1 as key and January as value
          unit_rank = UnitRank.objects.get(id=id)
      
          fy = FinancialYear.objects.get(id=financial_year_id)
      
          fq = FinancialQuarter.objects.get(id=financial_quarter_id)
      
          unit = Unit.objects.get(id=unit_id)
      
          division = Division.objects.get(id=25)
      
          month = Months.objects.get(id=month_id)
      
      
        
      
          context = {
              'unit_rank': unit_rank,
              'financial_year': fy,
              'financial_quarter': fq,
              'unit': unit,
              'division': division,
              'month': month,
          }
          return render(request, 'statistics/rank_unit_month.html', context)
      
      def rank_unit_division_month_cases_summary(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          #  unit_rank = UnitRank.objects.get(id=id)
          unit_rank = UnitRank.objects.get(id=id)
          fy = FinancialYear.objects.get(id=financial_year_id)
          fq = FinancialQuarter.objects.get(id=financial_quarter_id)
          unit = Unit.objects.get(id=unit_id)
          division = Division.objects.get(id=25)
          month = Months.objects.get(id=month_id)
      
          context = {
              'unit_rank': unit_rank,
              'financial_year': fy,
              'financial_quarter': fq,
              'unit': unit,
              'division': division,
              'month': month,
          }
          return render(request, 'statistics/rank_unit_division_month_cases_summary.html', context)
      
      def upload_unit_monthly_dcrt_excel(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          # Handle logic for upload unit monthly dcrt excel view here
      
          unit_rank = UnitRank.objects.get(id=id)
          fy = FinancialYear.objects.get(id=financial_year_id)
          fq = FinancialQuarter.objects.get(id=financial_quarter_id)
          unit = Unit.objects.get(id=unit_id)
          division = Division.objects.get(id=25)
          month = Months.objects.get(id=month_id)
      
      
          if request.method == 'POST':
              excel_file = request.FILES.get("excelFile")  # Get the uploaded file
      
              if excel_file:
                  handle_uploaded_file(excel_file, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id)  # Call the function to handle the uploaded file
                  # go to statistics:case_summary path
                  return HttpResponseRedirect('/statistics/rank/' + str(id) + '/fy/' + str(financial_year_id) + '/fq/' + str(financial_quarter_id) + '/units/' + str(unit_id) + '/division/' + str(division_id) + '/months/' + str(month_id) + '/cases/case_summary')
                 
              else:
                  return HttpResponse("No file uploaded.")
          
          else:
      
              context = {
              'unit_rank': unit_rank,
              'financial_year': fy,
              'financial_quarter': fq,
              'unit': unit,
              'division': division,
              'month': month,
          }
              
              return render(request, 'statistics/upload_unit_monthly_dcrt_excel.html', context)
          
      def case_summary(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          unit_rank = UnitRank.objects.get(id=id)
          fy = FinancialYear.objects.get(id=financial_year_id)
          fq = FinancialQuarter.objects.get(id=financial_quarter_id)
          unit = Unit.objects.get(id=unit_id)
          division = Division.objects.get(id=25)
          month = Months.objects.get(id=month_id)
          queryset = DcrtData.objects.filter(financial_year=financial_year_id, financial_quarter=financial_quarter_id, unit=unit_id, division=division_id, month=month_id)
      
          context = {
              'unit_rank': unit_rank,
              'financial_year': fy,
              'financial_quarter': fq,
              'unit': unit,
              'division': division,
              'month': month,
          }
          return render(request, 'statistics/case_summary.html', context)
      
      
      
      
      
      def monthly_unit_outliers(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          # Handle logic for remove missing values view here
          context = {
              'id': id,
              'financial_year_id': financial_year_id,
              'financial_quarter_id': financial_quarter_id,
              'unit_id': unit_id,
              'division_id': division_id,
              'month_id': month_id,
          }
          return render(request, 'statistics/monthly_unit_outliers.html', context)
      
      
      def monthly_unit_missing_data(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          # Handle logic for remove outliers view here
          context = {
              'id': id,
              'financial_year_id': financial_year_id,
              'financial_quarter_id': financial_quarter_id,
              'unit_id': unit_id,
              'division_id': division_id,
              'month_id': month_id,
          }
          return render(request, 'statistics/monthly_unit_missing_data.html', context)
      
      
      def monthly_unit_registered_cases(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          queryset = DcrtData.objects.all()
          df = read_frame(queryset)
           # count of registered cases . look for case_outcome with phrase 'Case Registered/Filed' . count them, skip null values
      
          registered_cases = df[df['case_outcome'].str.contains('Case Registered/Filed', na=False)].shape[0]
      
          # registered_cases by case_number_code and count each case_number_code
      
          registered_cases_group = df.groupby('case_number_code').count()
      
          context = {
              'id': id,
              'financial_year_id': financial_year_id,
              'financial_quarter_id': financial_quarter_id,
              'unit_id': unit_id,
              'division_id': division_id,
              'month_id': month_id,
              'registered_cases': registered_cases,
              'registered_cases_group': registered_cases_group,
          }
          return render(request, 'statistics/monthly_unit_registered_cases.html', context)
      
      
      # monthly_unit_duplicate_data
      
      def monthly_unit_duplicate_data(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          
      
          queryset = DcrtData.objects.all()
          df = read_frame(queryset)
          context = {
              'id': id,
              'financial_year_id': financial_year_id,
              'financial_quarter_id': financial_quarter_id,
              'unit_id': unit_id,
              'division_id': division_id,
              'month_id': month_id,
              'duplicate_cases': duplicate_cases,
              'duplicate_cases_group': duplicate_cases_group,
          }
      
          return render(request, 'statistics/monthly_unit_duplicate_data.html', context)
      
      
      
      
      def monthly_unit_resolved_cases(request, id, financial_year_id, financial_quarter_id, unit_id, division_id, month_id):
          # Handle logic for view outliers view here
          context = {
              'id': id,
              'financial_year_id': financial_year_id,
              'financial_quarter_id': financial_quarter_id,
              'unit_id': unit_id,
              'division_id': division_id,
              'month_id': month_id,
          }
          return render(request, 'statistics/monthly_unit_resolved_cases.html', context)
      
      
      # unit_division_quarters
      
      def unit_division_quarters(request, id, financial_year_id, financial_quarter_id, unit_id, division_id):
          # Handle logic for unit division quarters view here
          context = {
              'financial_years': FinancialYear.objects.all(),
              'financial_quarters': FinancialQuarter.objects.all(),
              'id': id,
              'unit_id': unit_id,
              'division_id': division_id,
          }
          return render(request, 'statistics/unit_division_quarters.html', context)
      
      
      # monthly_unit_matters_handled
      
      def monthly_unit_matters_handled(request, id, financial_year_id, financial_quarter_id, unit_id , division_id , month_id):
          # Handle logic for monthly unit matters handled view here
          context = {
              'financial_years': FinancialYear.objects.all(),
              'financial_quarters': FinancialQuarter.objects.all(),
              'id': id,
              'unit_id': unit_id,
          }
          return render(request, 'statistics/monthly_unit_matters_handled.html', context)
      
      # monthly_unit_incomplete_data
      
      def monthly_unit_incomplete_data(request, id, financial_year_id, financial_quarter_id, unit_id , division_id , month_id):
          # Handle logic for monthly unit incomplete data view here
          context = {
              'financial_years': FinancialYear.objects.all(),
              'financial_quarters': FinancialQuarter.objects.all(),
              'id': id,
              'unit_id': unit_id,
          }
          return render(request, 'statistics/monthly_unit_incomplete_data.html', context)
      
      
      # unit_division_fy
      
      def unit_division_fy(request, id, financial_year_id, financial_quarter_id, unit_id , division_id):
          # Handle logic for unit division fy view here
          context = {
              'financial_years': FinancialYear.objects.all(),
              'financial_quarters': FinancialQuarter.objects.all(),
              'id': id,
              'unit_id': unit_id,
          }
          return render(request, 'statistics/unit_division_fy.html', context)
      
      
      # monthly_unit_duplicate_data
      
      def monthly_unit_duplicate_data(request, id, financial_year_id, financial_quarter_id, unit_id , division_id , month_id):
          # Handle logic for monthly unit duplicate data view here
          context = {
              'financial_years': FinancialYear.objects.all(),
              'financial_quarters': FinancialQuarter.objects.all(),
              'id': id,
              'unit_id': unit_id,
          }
          return render(request, 'statistics/monthly_unit_duplicate_data.html', context)
      

  . templates/
    . .gitkeep
      Content:


    . accounts/
      . login.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Sign IN {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-lg-100 mt-5 mt-lg-0 bg-soft d-flex align-items-center">
                    <div class="container">
                        <p class="text-center">
                            Open-source Django Dashboard
                        </p>
                        <div class="row justify-content-center form-bg-image" data-background-lg="{{ ASSETS_ROOT }}/img/illustrations/signin.svg">
                            <div class="col-12 d-flex align-items-center justify-content-center">
                                <div class="bg-white shadow border-0 rounded border-light p-4 p-lg-5 w-100 fmxw-500">
                                    <div class="text-center text-md-center mb-4 mt-md-0">
                                        <h1 class="mb-0 h3">
                                            Sign IN
                                        </h1>
                                        <br />
                                        <p>
                                            {% if msg %}
                                                <span class="text-danger">
                                                    {{ msg | safe }}
                                                </span>                                        
                                            {% else %}
                                                Add your credentials
                                            {% endif %}                                     
                                        </p> 
                                    </div>
        
                                    <form method="post" action="" class="mt-4">
                                        
                                        {% csrf_token %}
        
                                        <!-- Form -->
                                        <div class="form-group mb-4">
                                            <label for="email">Username</label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon1">
                                                    <span class="fas fa-user-circle"></span>
                                                </span>
                                                {{ form.username }}
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <div class="form-group">
                                            <!-- Form -->
                                            <div class="form-group mb-4">
                                                <label for="password">Your Password</label>
                                                <div class="input-group">
                                                    <span class="input-group-text" id="basic-addon2">
                                                        <span class="fas fa-unlock-alt"></span>
                                                    </span>
                                                    {{ form.password }}
                                                </div>  
                                            </div>
                                            <!-- End of Form -->
                                            <div class="d-flex justify-content-between align-items-top mb-4">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" value="" id="remember">
                                                    <label class="form-check-label mb-0" for="remember">
                                                      Remember me
                                                    </label>
                                                </div>
                                                <div><a href="{% url 'register' %}" class="text-right">Register</a></div>
                                            </div>
                                        </div>
                                        <div class="d-grid">
                                            <button type="submit" name="login" class="btn btn-gray-800">Sign IN</button>
                                        </div>
                                    </form>
        
                            
        
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . register.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Sign UP {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-lg-100 mt-5 mt-lg-0 bg-soft d-flex align-items-center">
                    <div class="container">
                        <p class="text-center">
                            Open-source Django Dashboard
                        </p>
                        <div class="row justify-content-center form-bg-image" data-background-lg="{{ ASSETS_ROOT }}/img/illustrations/signin.svg">
                            <div class="col-12 d-flex align-items-center justify-content-center">
                                <div class="bg-white shadow border-0 rounded border-light p-4 p-lg-5 w-100 fmxw-500">
                                    <div class="text-center text-md-center mb-4 mt-md-0">
                                        <h1 class="mb-0 h3">
                                            Sign UP
                                        </h1>
                                        <br />
                                        <p>
                                            {% if msg %}
                                                {{ msg | safe }}
                                            {% else %}
                                                Add your credentials
                                            {% endif %}                                     
                                        </p> 
                                    </div>
        
                                    {% if success %}
        
                                        <div class="d-grid">
                                            <a href="{% url 'login' %}" class="btn btn-gray-800">Sign IN</a>
                                        </div>
        
                                    {% else %}
        
                                        <form method="post" action="" class="mt-4">
                                            
                                            {% csrf_token %}
        
                                            <div class="form-group mb-4">
                                                <label for="email">Username</label>
                                                <div class="input-group">
                                                    <span class="input-group-text" id="basic-addon1">
                                                        <span class="fas fa-user-circle"></span>
                                                    </span>
                                                    {{ form.username }}
                                                </div>  
                                                <span class="text-danger">{{ form.username.errors }}</span>
                                            </div>
        
                                            <!-- Form -->
                                            <div class="form-group mb-4">
                                                <label for="email">Your Email</label>
                                                <div class="input-group">
                                                    <span class="input-group-text" id="basic-addon1">
                                                        <span class="fas fa-envelope"></span>
                                                    </span>
                                                    {{ form.email }}
                                                </div>  
                                                <span class="text-danger">{{ form.email.errors }}</span>
                                            </div>
                                            <!-- End of Form -->
                                            <div class="form-group">
                                                
                                                <!-- Form -->
                                                <div class="form-group mb-4">
                                                    <label for="password">Your Password</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text" id="basic-addon2">
                                                            <span class="fas fa-unlock-alt"></span>
                                                        </span>
                                                        {{ form.password1 }}
                                                    </div>  
                                                    <span class="text-danger">{{ form.password1.errors }}</span>
                                                </div>
                                                <div class="form-group mb-4">
                                                    <label for="password">Password Confirmation</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text" id="basic-addon2">
                                                            <span class="fas fa-unlock-alt"></span>
                                                        </span>
                                                        {{ form.password2 }}
                                                    </div>  
                                                    <span class="text-danger">{{ form.password2.errors }}</span>
                                                </div>
         
                                            </div>
                                            <div class="d-grid">
                                                <button type="submit" name="register" class="btn btn-gray-800">Sign UP</button>
                                            </div>
                                        </form>
                                        <br />
                                        <div class="d-flex justify-content-center align-items-center mt-4">
                                            <span class="fw-normal">
                                                Already have an account? 
                                                <a href="{% url 'login' %}" class="fw-bold">Sign IN</a>
                                            </span>
                                        </div>
        
                                    {% endif %}
        
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

    . budget/
      . performance_indicators.html
        Content:


      . transformative_initiatives.html
        Content:


      . workplan_summary.html
        Content:
        {% extends "layouts/base.html" %}
        {% block title %} Workplan Summary {% endblock %}
        {% block content %}
        <div class="container mt-4">
            <!-- Navigation Dropdown -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <h2>Workplan Summary - {{ financial_year.name }}</h2>
                </div>
                <div class="col-md-6 text-end">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="budgetDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            Budget Options
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="budgetDropdown">
                            <li><a class="dropdown-item" href="{% url 'budget:workplan_summary' %}">Workplan Summary</a></li>
                            <li><a class="dropdown-item" href="{% url 'budget:transformative_initiatives' %}">Transformative Initiatives</a></li>
                            <li><a class="dropdown-item" href="{% url 'budget:performance_indicators' %}">Performance Indicators</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        
            <div class="table-responsive mt-4">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Budget Item</th>
                            <th>Code</th>
                            <th>Q1</th>
                            <th>Q2</th>
                            <th>Q3</th>
                            <th>Q4</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for item in items %}
                        <tr>
                            <td>{{ item.item.name }}</td>
                            <td>{{ item.item.budget_code }}</td>
                            <td>{{ item.q1_amount|floatformat:2 }}</td>
                            <td>{{ item.q2_amount|floatformat:2 }}</td>
                            <td>{{ item.q3_amount|floatformat:2 }}</td>
                            <td>{{ item.q4_amount|floatformat:2 }}</td>
                            <td>{{ item.total|floatformat:2 }}</td>
                        </tr>
                        {% if item.indicators %}
                        <tr>
                            <td colspan="7" class="bg-light">
                                <small>
                                    <strong>Performance Indicators:</strong>
                                    {% for indicator in item.indicators %}
                                    {{ indicator.name }} (Target: {{ indicator.target }}){% if not forloop.last %}, {% endif %}
                                    {% endfor %}
                                </small>
                            </td>
                        </tr>
                        {% endif %}
                        {% endfor %}
                    </tbody>
                    <tfoot>
                        <tr class="table-info">
                            <th colspan="2">Total</th>
                            <th>{{ quarterly_totals.1|floatformat:2 }}</th>
                            <th>{{ quarterly_totals.2|floatformat:2 }}</th>
                            <th>{{ quarterly_totals.3|floatformat:2 }}</th>
                            <th>{{ quarterly_totals.4|floatformat:2 }}</th>
                            <th>{{ total_budget|floatformat:2 }}</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        {% endblock %}

    . home/
      . brief_analyser.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Brief Analyser {% endblock title %}
        
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <div class="py-4">
        
                <div class="row">
        
                <h1> Brief Analyser </h1>
        
                </div>
              
            </div>
        
        
        
            <div class="row">
        
            <!-- Upload a brief to extract important information and find similar judgements to help you save time looking out. -->
        
            <p> Upload a brief to extract important information and find similar judgements to help you save time looking out. </p>
        
           
            </div>
        
        
            <div class="row">
        
        
                 <!-- Brief Analyser either by URL or by File -->
            </div>
        </div>
        
        {% endblock content %}

      . components-buttons.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} UI Buttons {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
          <div class="py-4">
              <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                  <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                      <li class="breadcrumb-item">
                          <a href="#">
                              <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                          </a>
                      </li>
                      <li class="breadcrumb-item"><a href="#">Components</a></li>
                      <li class="breadcrumb-item active" aria-current="page">Buttons</li>
                  </ol>
              </nav>
              <div class="d-flex justify-content-between w-100 flex-wrap">
                  <div class="mb-3 mb-lg-0">
                      <h1 class="h4">Buttons</h1>
                      <p class="mb-0">Dozens of reusable components built to provide buttons, alerts, popovers, and more.</p>
                  </div>
                  <div>
                      <a href="https://themesberg.com/docs/volt-bootstrap-5-dashboard/components-buttons/" class="btn btn-outline-gray"><i class="far fa-question-circle me-1"></i> Buttons Docs</a>
                  </div>
              </div>
          </div>
        
          <div class="row">
              <div class="col-12 mb-4">
                  <div class="card border-light shadow-sm components-section">
                      <div class="card-body">
                              <div class="mb-3">
                                  <h2 class="h5">Sizes</h2>
                              </div>
                              <!--Buttons-->
                              <button class="btn btn-sm btn-primary" type="button">Small</button>
                              <button class="btn btn-primary" type="button">Regular</button>
                              <button class="btn btn-lg btn-primary" type="button">Large Button</button>
        
                              <h2 class="h5 fw-bold mt-4 mb-3">With Icons</h2>
                              <button type="button" class="btn btn-primary d-inline-flex align-items-center">
                                  Download
                                  <svg class="icon icon-xxs ms-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z" clip-rule="evenodd" /></svg>
                              </button>
                              <button type="button" class="btn btn-primary d-inline-flex align-items-center">
                                  <svg class="icon icon-xxs me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path></svg>
                                  Contact Us
                              </button>
        
                              <h2 class="h5 fw-bold mt-4 mb-3">Dropdown buttons</h2>
                              <div class="d-flex">
                                  <div class="dropdown me-1">
                                      <button type="button" class="btn btn-secondary dropdown-toggle" id="dropdownMenuOffset" data-bs-toggle="dropdown" aria-expanded="false" data-bs-offset="10,20">
                                      Offset
                                      </button>
                                      <ul class="dropdown-menu py-0" aria-labelledby="dropdownMenuOffset">
                                          <li><a class="dropdown-item rounded-top" href="#">Action</a></li>
                                          <li><a class="dropdown-item" href="#">Another action</a></li>
                                          <li><a class="dropdown-item rounded-bottom" href="#">Something else here</a></li>
                                      </ul>
                                  </div>
                                  <div class="btn-group">
                                      <button type="button" class="btn btn-secondary">Reference</button>
                                      <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference" data-bs-toggle="dropdown" aria-expanded="false" data-bs-reference="parent">
                                          <svg class="icon icon-xs" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="visually-hidden">Toggle Dropdown</span>
                                      </button>
                                      <ul class="dropdown-menu py-0" aria-labelledby="dropdownMenuReference">
                                          <li><a class="dropdown-item rounded-top" href="#">Action</a></li>
                                          <li><a class="dropdown-item" href="#">Another action</a></li>
                                          <li><a class="dropdown-item" href="#">Something else here</a></li>
                                          <li><hr class="dropdown-divider"></li>
                                          <li><a class="dropdown-item rounded-bottom" href="#">Separated link</a></li>
                                      </ul>
                                  </div>
                              </div>
                              <div class="mb-3 mt-5">
                                  <h2 class="h5">Link Buttons</h2>
                              </div>
                              <!--Buttons-->
                              <a href="#" class="text-default fw-bold me-3">Primary</a>
                              <a href="#" class="text-primary d-inline-flex align-items-center me-3">
                                  <svg class="icon icon-xxs me-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z" clip-rule="evenodd" /></svg>
                                  Icon Left
                              </a>
                              <a href="#" class="text-primary d-inline-flex align-items-center">
                                  Icon Right
                                  <svg class="icon icon-xxs ms-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z" clip-rule="evenodd" /></svg>
                              </a>
                              <!--End of Buttons-->
                              <!-- Tooltips -->
                              <div class="mb-3 mt-5">
                                  <h2 class="h5">Tooltips</h2>
                              </div>
                              <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="top" title="Tooltip on top">
                                  Tooltip on top
                              </button>
                              <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on right">
                                  Tooltip on right
                              </button>
                              <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Tooltip on bottom">
                                  Tooltip on bottom
                              </button>
                              <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="left" title="Tooltip on left">
                                  Tooltip on left
                              </button>
                              <!-- Tooltips -->
                              <div class="mb-3 mt-5">
                                  <h2 class="h5">Popovers</h2>
                              </div>
                              <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Top popover">
                                  Popover on top
                              </button>
                              <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right" data-bs-content="Right popover">
                                  Popover on right
                              </button>
                              <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="Bottom popover">
                                  Popover on bottom
                              </button>
                              <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="left" data-bs-content="Left popover">
                                  Popover on left
                              </button>
                              <!-- Button colors -->
                              <div class="mb-3 mt-5">
                                  <h2 class="h5">Choose your color</h2>
                              </div>
                              <div class="mb-3 mt-5">
                                  <small class="text-uppercase fw-bold">Main</small>
                              </div>
                              <!--Buttons-->
                              <button class="btn btn-primary" type="button">Primary</button>
                              <button class="btn btn-secondary" type="button">Secondary</button>
                              <button class="btn btn-tertiary" type="button">Tertiary</button>
                              <button class="btn btn-info" type="button">Info</button>
                              <button class="btn btn-success" type="button">Success</button>
                              <button class="btn btn-warning" type="button">Warning</button>
                              <button class="btn btn-danger" type="button">Danger</button>
                              <button class="btn btn-gray-800" type="button">Dark</button>
                              <button class="btn btn-gray-200" type="button">Gray</button>
                              <button class="btn btn-gray-50" type="button">Light</button>
                              <button class="btn btn-white" type="button">White</button>
                              <!--End Of Buttons-->
                              <div class="mb-3 mt-5">
                                  <small class="text-uppercase fw-bold">Outline</small>
                              </div>
                              <!--Buttons-->
                              <button class="btn btn-outline-primary" type="button">Primary</button>
                              <button class="btn btn-outline-secondary" type="button">Secondary</button>
                              <button class="btn btn-outline-tertiary" type="button">Tertiary</button>
                              <button class="btn btn-outline-info" type="button">Info</button>
                              <button class="btn btn-outline-success" type="button">Success</button>
                              <button class="btn btn-outline-danger" type="button">Danger</button>
                              <button class="btn btn-outline-gray-800" type="button">Dark</button>
                              <button class="btn btn-outline-gray-500" type="button">Gray</button>
                              <!--End Of Buttons-->
                              <div class="mb-3 mt-5">
                                  <small class="text-uppercase fw-bold">Round Outline</small>
                              </div>
                              <!--Buttons-->
                              <button class="btn btn-pill btn-outline-primary" type="button">Primary</button>
                              <button class="btn btn-pill btn-outline-secondary" type="button">Secondary</button>
                              <button class="btn btn-pill btn-outline-tertiary" type="button">Tertiary</button>
                              <button class="btn btn-pill btn-outline-info" type="button">Info</button>
                              <button class="btn btn-pill btn-outline-success" type="button">Success</button>
                              <button class="btn btn-pill btn-outline-danger" type="button">Danger</button>
                              <button class="btn btn-pill btn-outline-gray-800" type="button">Dark</button>
                              <button class="btn btn-pill btn-outline-gray-500" type="button">Gray</button>
                              <!--End Of Buttons-->
                              <!-- Button links -->
                              <div class="mb-3 mt-5">
                                  <small class="text-uppercase fw-bold">Links</small>
                              </div>
                              <!--Buttons-->
                              <a href="#" class="text-default me-3">Default</a>
                              <a href="#" class="text-primary me-3">Primary</a>
                              <a href="#" class="text-secondary me-3">Secondary</a>
                              <a href="#" class="text-tertiary me-3">Tertiary</a>
                              <a href="#" class="text-info me-3">Info</a>
                              <a href="#" class="text-success me-3">Success</a>
                              <a href="#" class="text-danger me-3">Danger</a>
                              <a href="#" class="text-dark me-3">Dark</a>
                              <a href="#" class="text-gray">Gray</a>
                              <!--End Of Buttons-->
                          
                          <div class="row">
                              <div class="col-lg-4 col-md-6">
                                  <!-- Button Social -->
                                  <div class="mb-4 mt-5">
                                      <h2 class="h5 fw-bold">Social Buttons</h2>
                                  </div>
                                  <button class="btn btn-facebook d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"></path></svg>
                                      Login with Facebook
                                  </button>
                                  <br>
                                  <button class="btn btn-twitter text-white d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
                                      Share on Twitter
                                  </button>
                                  <br>
                                  <button class="btn btn-youtube d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="youtube" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"></path></svg>
                                      Watch on YouTube
                                  </button>
                                  <br>
                                  <button class="btn btn-github d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg>
                                      Login with GitHub
                                  </button>
                                  <br>
                                  <button class="btn btn-paypal d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="paypal" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path fill="currentColor" d="M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4.7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9.7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z"></path></svg>
                                      Donate with PayPal
                                  </button>
                                  <br>
                                  <button class="btn btn-behance d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="behance" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z"></path></svg>
                                      Follow us
                                  </button>\
        
                                 
                              </div>
                              <div class="col-12 col-lg-6">
                                  <!-- Square -->
                                  <div class="mb-4 mt-5">
                                      <h2 class="h5">Only Icon</h2>
                                  </div>
                                  <button class="btn btn-icon-only btn-facebook d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"></path></svg>
                                  </button>
                                  <br>
                                  <button class="btn btn-icon-only btn-twitter text-white d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
                                  </button>
                                  <br>
                                  <button class="btn btn-icon-only btn-youtube d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="youtube" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"></path></svg>
                                  </button>
                                  <br>
                                  <button class="btn btn-icon-only btn-github d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg>
                                  </button>
                                  <br>
                                  <button class="btn btn-icon-only btn-paypal d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="paypal" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path fill="currentColor" d="M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4.7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9.7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z"></path></svg>
                                  </button>
                                  <br>
                                  <button class="btn btn-icon-only btn-behance d-inline-flex align-items-center" type="button">
                                      <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="behance" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z"></path></svg>
                                  </button>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . components-forms.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} UI Forms {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
          <div class="py-4">
              <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                  <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                      <li class="breadcrumb-item">
                          <a href="#">
                              <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                          </a>
                      </li>
                      <li class="breadcrumb-item"><a href="#">Volt</a></li>
                      <li class="breadcrumb-item active" aria-current="page">Forms</li>
                  </ol>
              </nav>
              <div class="d-flex justify-content-between w-100 flex-wrap">
                  <div class="mb-3 mb-lg-0">
                      <h1 class="h4">Forms</h1>
                      <p class="mb-0">Dozens of reusable components built to provide buttons, alerts, popovers, and more.</p>
                  </div>
                  <div>
                      <a href="https://themesberg.com/docs/volt-bootstrap-5-dashboard/components-forms/" class="btn btn-outline-gray"><i class="far fa-question-circle me-1"></i> Forms Docs</a>
                  </div>
              </div>
          </div>
        
          <div class="row">
              <div class="col-12 mb-4">
                  <div class="card border-0 shadow components-section">
                      <div class="card-body">     
                          <div class="row mb-4">
                              <div class="col-lg-4 col-sm-6">
                                  <!-- Form -->
                                  <div class="mb-4">
                                      <label for="email">Email address</label>
                                      <input type="email" class="form-control" id="email" aria-describedby="emailHelp">
                                      <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                                  </div>
                                  <!-- End of Form -->
                                  <!-- Form -->
                                  <div class="mb-3">
                                      <label for="exampleInputIconLeft">Icon Left</label>
                                      <div class="input-group">
                                          <span class="input-group-text" id="basic-addon1">
                                              <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path></svg>  
                                          </span>
                                          <input type="text" class="form-control" id="exampleInputIconLeft" placeholder="Search" aria-label="Search">
                                      </div>
                                  </div>
                                  <!-- End of Form -->
                                  <!-- Form -->
                                  <div class="mb-3">
                                      <label for="exampleInputIconRight">Icon Right</label>
                                      <div class="input-group">
                                          <input type="text" class="form-control" id="exampleInputIconRight" placeholder="Search" aria-label="Search">
                                          <span class="input-group-text" id="basic-addon2">
                                              <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path></svg>  
                                          </span>
                                      </div>
                                  </div>
                                  <!-- End of Form -->
                                  <!-- Form -->
                                  <div class="mb-3">
                                      <label for="exampleInputIconPassword">Password</label>
                                      <div class="input-group">
                                          <input type="password" class="form-control" id="exampleInputIconPassword" placeholder="Password" aria-label="Password">
                                          <span class="input-group-text" id="basic-addon3">
                                              <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                          </span>
                                      </div>
                                  </div>
                                  <!-- End of Form -->
                                  <!-- Form -->
                                  <div class="mb-3">
                                      <label for="firstName">First name</label>
                                      <input type="text" class="form-control is-valid" id="firstName" value="Mark" required>
                                      <div class="valid-feedback">
                                          Looks good!
                                      </div>                
                                  </div>
                                  <!-- End of Form -->
                              </div>
                              <div class="col-lg-4 col-sm-6">
        
                                  <!-- Form -->
                                  <div class="my-4">
                                      <label for="textarea">Example textarea</label>
                                      <textarea class="form-control" placeholder="Enter your message..." id="textarea" rows="4"></textarea>
                                  </div>
                                  <!-- End of Form -->
                                  <!-- Form -->
                                  <div class="mb-4">
                                      <label for="usernameValidate">Username</label>
                                      <input type="text" class="form-control is-invalid" id="usernameValidate" required>
                                      <div class="invalid-feedback">
                                          Please choose a username.
                                      </div>               
                                  </div>
                                  <!-- End of Form -->
                              </div>
                              <div class="col-lg-4 col-sm-6">
                                  <div class="mb-3">
                                      <label for="birthday">Birthday</label>
                                      <div class="input-group">
                                          <span class="input-group-text">
                                              <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path></svg>
                                          </span>
                                          <input data-datepicker="" class="form-control" id="birthday" type="text" placeholder="dd/mm/yyyy" required>                                               
                                      </div>
                                  </div>
                                  <!-- Form -->
                                  <div class="mb-3">
                                      <label for="disabledTextInput">Name</label>
                                      <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input" disabled>
                                  </div>
                                  <div class="mb-3">
                                      <label for="disabledSelect">Disabled select menu</label>
                                      <select id="disabledSelect" class="form-control" disabled>
                                      <option>Disabled select</option>
                                      </select>
                                  </div>
                                  <!-- End of Form -->
                                  <!-- Form -->
                                  <div class="mb-4">
                                      <label class="my-1 me-2" for="country">Country</label>
                                      <select class="form-select" id="country" aria-label="Default select example">
                                          <option selected>Open this select menu</option>
                                          <option value="1">One</option>
                                          <option value="2">Two</option>
                                          <option value="3">Three</option>
                                      </select>
                                  </div>
                                  <!-- End of Form -->
                                  <!-- Form -->
                                  <div class="mb-3">
                                      <label for="formFile" class="form-label">Default file input example</label>
                                      <input class="form-control" type="file" id="formFile">
                                  </div>
                                  <!-- End of Form -->
                              </div>
                          </div>
                          <div class="row mb-5 mb-lg-5">
                              <div class="col-lg-3 col-md-6">
                                  <!-- Checkboxes -->
                                  <div class="mb-3">
                                      <span class="h6 fw-bold">Checkboxes Round</span>
                                  </div>
                                  <div class="form-check">
                                      <input class="form-check-input" type="checkbox" value="" id="defaultCheck10">
                                      <label class="form-check-label" for="defaultCheck10">
                                        Default checkbox
                                      </label>
                                  </div>
                                  <div class="form-check">
                                      <input class="form-check-input" type="checkbox" value="" id="defaultCheck20" disabled>
                                      <label class="form-check-label" for="defaultCheck20">
                                        Disabled checkbox
                                      </label>
                                  </div>
                              </div>
                              <div class="col-lg-3 col-sm-6 mt-4 mt-md-0">
                                  <!-- Radio -->
                                  <fieldset>
                                      <legend class="h6">Radios</legend>
                                      <div class="form-check">
                                          <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" checked>
                                          <label class="form-check-label" for="exampleRadios1">
                                            Default radio
                                          </label>
                                        </div>
                                        <div class="form-check">
                                          <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2">
                                          <label class="form-check-label" for="exampleRadios2">
                                            Second default radio
                                          </label>
                                        </div>
                                        <div class="form-check">
                                          <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3" disabled>
                                          <label class="form-check-label" for="exampleRadios3">
                                            Disabled radio
                                          </label>
                                        </div>
                                      <!-- End of Radio -->
                                  </fieldset>
                              </div>
                              <div class="col-lg-3 col-sm-6 mt-4 mt-md-0">
                                  <div class="mb-3">
                                      <span class="h6 fw-bold">Switches</span>
                                  </div>
                                  <div class="form-check form-switch">
                                      <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault">
                                      <label class="form-check-label" for="flexSwitchCheckDefault">Default switch input</label>
                                  </div>
                                  <div class="form-check form-switch">
                                      <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" checked>
                                      <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch input</label>
                                  </div>
                                  <div class="form-check form-switch">
                                      <input class="form-check-input" type="checkbox" id="flexSwitchCheckDisabled" disabled>
                                      <label class="form-check-label" for="flexSwitchCheckDisabled">Disabled switch input</label>
                                  </div>
                                  <div class="form-check form-switch">
                                      <input class="form-check-input" type="checkbox" id="flexSwitchCheckCheckedDisabled" checked disabled>
                                      <label class="form-check-label" for="flexSwitchCheckCheckedDisabled">Disabled checked switch input</label>
                                  </div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . components-modals.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} UI Modals {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
          <div class="py-4">
              <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                  <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                      <li class="breadcrumb-item">
                          <a href="#">
                              <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                          </a>
                      </li>
                      <li class="breadcrumb-item"><a href="#">Volt</a></li>
                      <li class="breadcrumb-item active" aria-current="page">Modals</li>
                  </ol>
              </nav>
              <div class="d-flex justify-content-between w-100 flex-wrap">
                  <div class="mb-3 mb-lg-0">
                      <h1 class="h4">Modals</h1>
                      <p class="mb-0">Dozens of reusable components built to provide buttons, alerts, popovers, and more.</p>
                  </div>
                  <div>
                      <a href="https://themesberg.com/docs/volt-bootstrap-5-dashboard/components-modals/" class="btn btn-outline-gray"><i class="far fa-question-circle me-1"></i> Modals Docs</a>
                  </div>
              </div>
          </div>
        
          <div class="row">
              <div class="col-12 mb-4">
                  <div class="card border-0 shadow">
                      <div class="card-body">     
                          <div class="row d-block mt-4">
                              <div class="col-lg-4">
                                  <!-- Button Modal -->
                                  <button type="button" class="btn btn-block btn-gray-800 mb-3" data-bs-toggle="modal" data-bs-target="#modal-default">Default</button>
                                  <!-- Modal Content -->
                                  <div class="modal fade" id="modal-default" tabindex="-1" role="dialog" aria-labelledby="modal-default" aria-hidden="true">
                                      <div class="modal-dialog modal-dialog-centered" role="document">
                                          <div class="modal-content">
                                              <div class="modal-header">
                                                  <h2 class="h6 modal-title">Terms of Service</h2>
                                                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                              </div>
                                              <div class="modal-body">
                                                  <p>With less than a month to go before the European Union enacts new consumer privacy laws for its citizens, companies around the world are updating their terms of service agreements to comply.</p>
                                                  <p>The European Union’s General Data Protection Regulation (G.D.P.R.) goes into effect on May 25 and is meant to ensure a common set of data rights in the European Union. It requires organizations to notify users as
                                                      soon as possible of high-risk data breaches that could personally affect them.</p>
                                              </div>
                                              <div class="modal-footer">
                                                  <button type="button" class="btn btn-secondary">Accept</button>
                                                  <button type="button" class="btn btn-link text-gray-600 ms-auto" data-bs-dismiss="modal">Close</button>
                                              </div>
                                          </div>
                                      </div>
                                  </div>
                                  <!-- End of Modal Content -->
                              </div>
                              <div class="col-lg-4">
                                  <!-- Button Modal -->
                                  <button type="button" class="btn btn-block btn-gray-800 mb-3" data-bs-toggle="modal" data-bs-target="#modal-notification">Notification</button>
                                  <!-- Modal Content -->
                                  <div class="modal fade" id="modal-notification" tabindex="-1" role="dialog" aria-labelledby="modal-notification" aria-hidden="true">
                                      <div class="modal-dialog modal-info modal-dialog-centered" role="document">
                                          <div class="modal-content bg-gradient-secondary">
                                              <button type="button" class="btn-close theme-settings-close fs-6 ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                                              <div class="modal-header">
                                                  <p class="modal-title text-gray-200" id="modal-title-notification">A new experience, personalized for you.</p>
                                              </div>
                                              <div class="modal-body text-white">
                                                  <div class="py-3 text-center">
                                                      <span class="modal-icon">
                                                          <svg class="icon icon-xl text-gray-200" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z"></path><path d="M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z"></path></svg>
                                                      </span>
                                                      <h2 class="h4 modal-title my-3">Important message!</h2>
                                                      <p>Do you know that you can assign status and relation to a company right in the visit list?</p>
                                                  </div>
                                              </div>
                                              <div class="modal-footer">
                                                  <button type="button" class="btn btn-sm btn-white">Go to Inbox</button>
                                              </div>
                                          </div>
                                      </div>
                                  </div>
                                  <!-- End of Modal Content -->
                              </div>
                              <div class="col-lg-4">
                                  <!-- Button Modal -->
                                  <button type="button" class="btn btn-block btn-gray-800 mb-3" data-bs-toggle="modal" data-bs-target="#modal-form">Sign
                                      In</button>
                                  <!-- Modal Content -->
                                  <div class="modal fade" id="modal-form" tabindex="-1" role="dialog" aria-labelledby="modal-form" aria-hidden="true">
                                      <div class="modal-dialog modal-dialog-centered" role="document">
                                          <div class="modal-content">
                                              <div class="modal-body p-0">
                                                  <div class="card p-3 p-lg-4">
                                                      <button type="button" class="btn-close ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                                                      <div class="text-center text-md-center mb-4 mt-md-0">
                                                          <h1 class="mb-0 h4">Sign in to our platform</h1>
                                                      </div>
                                                      <form action="#" class="mt-4">
                                                          <!-- Form -->
                                                          <div class="form-group mb-4">
                                                              <label for="email">Your Email</label>
                                                              <div class="input-group">
                                                                  <span class="input-group-text" id="basic-addon1">
                                                                      <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path></svg>
                                                                  </span>
                                                                  <input type="email" class="form-control" placeholder="example@company.com" id="email" autofocus required>
                                                              </div>  
                                                          </div>
                                                          <!-- End of Form -->
                                                          <div class="form-group">
                                                              <!-- Form -->
                                                              <div class="form-group mb-4">
                                                                  <label for="password">Your Password</label>
                                                                  <div class="input-group">
                                                                      <span class="input-group-text" id="basic-addon2">
                                                                          <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                                      </span>
                                                                      <input type="password" placeholder="Password" class="form-control" id="password" required>
                                                                  </div>  
                                                              </div>
                                                              <!-- End of Form -->
                                                              <div class="d-flex justify-content-between align-items-top mb-4">
                                                                  <div class="form-check">
                                                                      <input class="form-check-input" type="checkbox" value="" id="remember">
                                                                      <label class="form-check-label mb-0" for="remember">
                                                                        Remember me
                                                                      </label>
                                                                  </div>
                                                                  <div><a href="./forgot-password.html" class="small text-right">Lost password?</a></div>
                                                              </div>
                                                          </div>
                                                          <div class="d-grid">
                                                              <button type="submit" class="btn btn-gray-800">Sign in</button>
                                                          </div>
                                                      </form>
                                                      <div class="mt-3 mb-4 text-center">
                                                          <span class="fw-normal">or login with</span>
                                                      </div>
                                                      <div class="d-flex justify-content-center my-4">
                                                          <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" type="button" aria-label="facebook button" title="facebook button">
                                                              <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"></path></svg>
                                                          </a>
                                                          <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" type="button" aria-label="twitter button" title="twitter button">
                                                              <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
                                                          </a>
                                                          <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500" type="button" aria-label="github button" title="github button">
                                                              <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg>
                                                          </a>
                                                      </div>
                                                      <div class="d-flex justify-content-center align-items-center mt-4">
                                                          <span class="fw-normal">
                                                              Not registered?
                                                              <a href="./sign-up.html" class="fw-bold">Create account</a>
                                                          </span>
                                                      </div>
                                                  </div>
                                              </div>
                                          </div>
                                      </div>
                                  </div>
                                  <!-- End of Modal Content -->
                              </div>
                              <div class="col-lg-4">
                                  <!-- Button Modal -->
                                  <button type="button" class="btn btn-block btn-gray-800 mb-3" data-bs-toggle="modal" data-bs-target="#modal-form-signup">Sign Up</button>
                                  <!-- Modal Content -->
                                  <div class="modal fade" id="modal-form-signup" tabindex="-1" role="dialog" aria-labelledby="modal-form-signup" aria-hidden="true">
                                      <div class="modal-dialog modal-dialog-centered" role="document">
                                          <div class="modal-content">
                                              <div class="modal-body p-0">
                                                  <div class="card p-3 p-lg-4">
                                                      <button type="button" class="btn-close ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                                                      <div class="text-center text-md-center mb-4 mt-md-0">
                                                          <h1 class="mb-0 h4">Create Account </h1>
                                                      </div>
                                                      <form action="#" class="mt-4">
                                                          <!-- Form -->
                                                          <div class="form-group mb-4">
                                                              <label for="email">Your Email</label>
                                                              <div class="input-group">
                                                                  <span class="input-group-text" id="basic-addon1">
                                                                      <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path></svg>
                                                                  </span>
                                                                  <input type="email" class="form-control" placeholder="example@company.com" id="email" autofocus required>
                                                              </div>  
                                                          </div>
                                                          <!-- End of Form -->
                                                          <div class="form-group">
                                                              <!-- Form -->
                                                              <div class="form-group mb-4">
                                                                  <label for="password">Your Password</label>
                                                                  <div class="input-group">
                                                                      <span class="input-group-text" id="basic-addon2">
                                                                          <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                                      </span>
                                                                      <input type="password" placeholder="Password" class="form-control" id="password" required>
                                                                  </div>  
                                                              </div>
                                                              <!-- End of Form -->
                                                              <!-- Form -->
                                                              <div class="form-group mb-4">
                                                                  <label for="confirm_password">Confirm Password</label>
                                                                  <div class="input-group">
                                                                      <span class="input-group-text" id="basic-addon2">
                                                                          <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                                      </span>
                                                                      <input type="password" placeholder="Confirm Password" class="form-control" id="confirm_password" required>
                                                                  </div>  
                                                              </div>
                                                              <!-- End of Form -->
                                                              <div class="mb-4">
                                                                  <div class="form-check">
                                                                      <input class="form-check-input" type="checkbox" value="" id="remember">
                                                                      <label class="form-check-label fw-normal mb-0" for="remember">
                                                                          I agree to the <a href="#" class="fw-bold">terms and conditions</a>
                                                                      </label>
                                                                  </div>
                                                              </div>
                                                          </div>
                                                          <div class="d-grid">
                                                              <button type="submit" class="btn btn-gray-800">Sign up</button>
                                                          </div>
                                                      </form>
                                                      <div class="mt-3 mb-4 text-center">
                                                          <span class="fw-normal">or login with</span>
                                                      </div>
                                                      <div class="d-flex justify-content-center my-3">
                                                          <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" type="button" aria-label="facebook button" title="facebook button">
                                                              <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"></path></svg>
                                                          </a>
                                                          <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" type="button" aria-label="twitter button" title="twitter button">
                                                              <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
                                                          </a>
                                                          <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500" type="button" aria-label="github button" title="github button">
                                                              <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg>
                                                          </a>
                                                      </div>
                                                      <div class="d-flex justify-content-center align-items-center mt-4">
                                                          <span class="fw-normal">
                                                              Already have an account? 
                                                              <a href="./sign-in.html" class="fw-bold">Login here</a>
                                                          </span>
                                                      </div>
                                                  </div>
                                              </div>
                                          </div>
                                      </div>
                                  </div>
                                  <!-- End of Modal Content -->
                              </div>
                              <div class="col-lg-4">
                                  <!-- Button Modal -->
                                  <button type="button" class="btn btn-block btn-gray-800 mb-3" data-bs-toggle="modal" data-bs-target="#modal-achievement">Achievement</button>
                                  <!-- Modal Content -->
                                  <div class="modal fade" id="modal-achievement" tabindex="-1" role="dialog" aria-labelledby="modal-achievement" aria-hidden="true">
                                      <div class="modal-dialog modal-tertiary modal-dialog-centered" role="document">
                                          <div class="modal-content">
                                              <button type="button" class="btn-close theme-settings-close fs-6 ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                                              <div class="modal-header mx-auto">
                                                  <p class="lead mb-0 text-white">You just unlocked a new badge</p>
                                              </div>
                                              <div class="modal-body pt-0">
                                                  <div class="py-3 px-5 text-center">
                                                      <span class="modal-icon display-1 text-white">
                                                          <svg class="icon icon-lg text-gray-200" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z" clip-rule="evenodd"></path></svg>
                                                      </span>
                                                      <h2 class="h3 modal-title mb-3 text-white">Author Level 5</h2>
                                                      <p class="mb-4 text-white">One Thousand Dollars! Well done mate - heads are turning your way.</p>
                                                      <div class="progress mb-0">
                                                          <div class="progress-bar bg-secondary" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                                      </div>
                                                  </div>
                                              </div>
                                              <div class="modal-footer d-flex justify-content-center pt-0 pb-3">
                                                  <button type="button" class="btn btn-sm btn-white text-tertiary" data-bs-dismiss="modal">Awesome!</button>
                                              </div>
                                          </div>
                                      </div>
                                  </div>
                                  <!-- End of Modal Content -->
                              </div>
                              <div class="col-lg-4">
                                  <!-- Button Modal -->
                                  <button type="button" class="btn btn-block btn-gray-800 mb-3" data-bs-toggle="modal" data-bs-target="#modal-subscribe">Subscribe</button>
                                  <!-- Modal Content -->
                                  <div class="modal fade" id="modal-subscribe" tabindex="-1" role="dialog" aria-labelledby="modal-subscribe" aria-hidden="true">
                                      <div class="modal-dialog modal-tertiary modal-dialog-centered modal-lg" role="document">
                                          <div class="modal-content bg-dark text-white">
                                              <div class="modal-header">
                                                  <button type="button" class="btn-close btn-close-white text-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                              </div>
                                              <div class="modal-body text-center py-3">
                                                  <span class="modal-icon">
                                                      <svg class="icon icon-xl text-gray-200 mb-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M2.94 6.412A2 2 0 002 8.108V16a2 2 0 002 2h12a2 2 0 002-2V8.108a2 2 0 00-.94-1.696l-6-3.75a2 2 0 00-2.12 0l-6 3.75zm2.615 2.423a1 1 0 10-1.11 1.664l5 3.333a1 1 0 001.11 0l5-3.333a1 1 0 00-1.11-1.664L10 11.798 5.555 8.835z" clip-rule="evenodd"></path></svg>
                                                  </span>
                                                  <h3 class="modal-title mb-3">Join our 1,360,462 subscribers</h3>
                                                  <p class="mb-4 lead">Get exclusive access to freebies, premium products and news.</p>
                                                  <div class="form-group px-lg-5">
                                                      <div class="d-flex mb-3 justify-content-center">
                                                          <input type="text" id="subscribe" class="me-sm-1 mb-sm-0 form-control form-control-lg" placeholder="example@company.com">
                                                          <div>
                                                              <button type="submit" class="ms-2 btn large-form-btn btn-secondary">Subscribe</button>
                                                          </div>
                                                      </div>
                                                  </div>
                                              </div>
                                              <div class="modal-footer z-2 mx-auto text-center">
                                                  <p class="text-white font-small">
                                                      We’ll never share your details with third parties.
                                                      <br class="visible-md">View our <a href="#">Privacy Policy</a> for more info.
                                                  </p>
                                              </div>
                                          </div>
                                      </div>
                                  </div>
                                  <!-- End of Modal Content -->
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . components-notifications.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} UI Notifications {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <div class="py-4">
                <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                    <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                        <li class="breadcrumb-item">
                            <a href="#">
                                <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                    xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6">
                                    </path>
                                </svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item"><a href="#">Volt</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Notifications</li>
                    </ol>
                </nav>
                <div class="d-flex justify-content-between w-100 flex-wrap">
                    <div class="mb-3 mb-lg-0">
                        <h1 class="h4">Notifications</h1>
                        <p class="mb-0">Dozens of reusable components built to provide buttons, alerts, popovers, and more.
                        </p>
                    </div>
                </div>
            </div>
        
            <div class="row">
                <div class="col-12 col-lg-6">
                    <div class="card border-0 shadow">
                        <div class="card-header border-gray-100 d-flex justify-content-between align-items-center">
                            <h2 class="h4 mb-0">Sweet alerts</h2>
                            <a href="https://themesberg.com/docs/volt-bootstrap-5-dashboard/plugins/sweet-alerts/"
                                class="btn btn-outline-gray-500 d-inline-flex align-items-center">
                                <svg class="icon icon-xxs me-2" fill="currentColor" viewBox="0 0 20 20"
                                    xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd"
                                        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z"
                                        clip-rule="evenodd"></path>
                                </svg>
                                Documentation
                            </a>
                        </div>
                        <div class="card-body">
                            <button class="btn btn-gray-800" id="basicAlert">Basic alert</button>
                            <button class="btn btn-info" id="infoAlert">Info alert</button>
                            <button class="btn btn-success" id="successAlert">Success alert</button>
                            <button class="btn btn-danger" id="dangerAlert">Danger alert</button>
                            <button class="btn btn-warning" id="warningAlert">Warning alert</button>
                            <button class="btn btn-gray-200" id="questionAlert">Question</button>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-lg-6">
                    <div class="card border-0 shadow">
                        <div class="card-header border-gray-100 d-flex justify-content-between align-items-center">
                            <h2 class="h4 mb-0">Notyf</h2>
                            <a href="https://themesberg.com/docs/volt-bootstrap-5-dashboard/plugins/notifications/"
                                class="btn btn-outline-gray-500 d-inline-flex align-items-center">
                                <svg class="icon icon-xxs me-2" fill="currentColor" viewBox="0 0 20 20"
                                    xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd"
                                        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z"
                                        clip-rule="evenodd"></path>
                                </svg>
                                Documentation
                            </a>
                        </div>
                        <div class="card-body">
                            <button class="btn btn-info" id="notifyTopLeft">Top left info</button>
                            <button class="btn btn-danger" id="notifyTopRight">Top right danger</button>
                            <button class="btn btn-warning" id="notifyBottomLeft">Bottom left warning</button>
                            <button class="btn btn-gray-800" id="notifyBottomRight">Primary bottom right</button>
                        </div>
                    </div>
                </div>
            </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}
        
            <script>
        
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-primary',
                        cancelButton: 'btn btn-gray'
                    },
                    buttonsStyling: false
                });
        
                // SweetAlert 2
                document.getElementById('basicAlert').addEventListener('click', function () {
                    swalWithBootstrapButtons.fire(
                        'Basic alert',
                        'You clicked the button!'
                    )
                });
        
                document.getElementById('infoAlert').addEventListener('click', function () {
                    swalWithBootstrapButtons.fire(
                        'Info alert',
                        'You clicked the button!',
                        'info'
                    )
                });
        
                document.getElementById('successAlert').addEventListener('click', function () {
                    swalWithBootstrapButtons.fire({
                        icon: 'success',
                        title: 'Success alert',
                        text: 'Your work has been saved',
                        showConfirmButton: true,
                        timer: 1500
                    })
                });
        
                document.getElementById('warningAlert').addEventListener('click', function () {
                    swalWithBootstrapButtons.fire(
                        'Warning alert',
                        'You clicked the button!',
                        'warning'
                    )
                });
        
                document.getElementById('dangerAlert').addEventListener('click', function () {
                    swalWithBootstrapButtons.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                        footer: '<a href>Why do I have this issue?</a>'
                    })
                });
        
                document.getElementById('questionAlert').addEventListener('click', function () {
                    swalWithBootstrapButtons.fire(
                        'The Internet?',
                        'That thing is still around?',
                        'question'
                    );
                });
        
                document.getElementById('notifyTopLeft').addEventListener('click', function () {
                    const notyf = new Notyf({
                        position: {
                            x: 'left',
                            y: 'top',
                        },
                        types: [
                            {
                                type: 'info',
                                background: '#0948B3',
                                icon: {
                                    className: 'fas fa-info-circle',
                                    tagName: 'span',
                                    color: '#fff'
                                },
                                dismissible: false
                            }
                        ]
                    });
                    notyf.open({
                        type: 'info',
                        message: 'Send us <b>an email</b> to get support'
                    });
                });
        
                document.getElementById('notifyTopRight').addEventListener('click', function () {
                    const notyf = new Notyf({
                        position: {
                            x: 'right',
                            y: 'top',
                        },
                        types: [
                            {
                                type: 'error',
                                background: '#FA5252',
                                icon: {
                                    className: 'fas fa-times',
                                    tagName: 'span',
                                    color: '#fff'
                                },
                                dismissible: false
                            }
                        ]
                    });
                    notyf.open({
                        type: 'error',
                        message: 'This action is not allowed.'
                    });
                });
        
                document.getElementById('notifyBottomLeft').addEventListener('click', function () {
                    const notyf = new Notyf({
                        position: {
                            x: 'left',
                            y: 'bottom',
                        },
                        types: [
                            {
                                type: 'warning',
                                background: '#F5B759',
                                icon: {
                                    className: 'fas fa-exclamation-triangle',
                                    tagName: 'span',
                                    color: '#fff'
                                },
                                dismissible: false
                            }
                        ]
                    });
                    notyf.open({
                        type: 'warning',
                        message: 'This might be dangerous.'
                    });
                });
        
                document.getElementById('notifyBottomRight').addEventListener('click', function () {
                    const notyf = new Notyf({
                        position: {
                            x: 'right',
                            y: 'bottom',
                        },
                        types: [
                            {
                                type: 'info',
                                background: '#262B40',
                                icon: {
                                    className: 'fas fa-comment-dots',
                                    tagName: 'span',
                                    color: '#fff'
                                },
                                dismissible: false
                            }
                        ]
                    });
                    notyf.open({
                        type: 'info',
                        message: 'John Garreth: Are you ready for the presentation?'
                    });
                });
        
            </script>
            
        {% endblock javascripts %}

      . components-typography.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} UI Typography {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
          <div class="py-4">
              <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                  <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                      <li class="breadcrumb-item">
                          <a href="#">
                              <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                          </a>
                      </li>
                      <li class="breadcrumb-item"><a href="#">Volt</a></li>
                      <li class="breadcrumb-item active" aria-current="page">Typography</li>
                  </ol>
              </nav>
              <div class="d-flex justify-content-between w-100 flex-wrap">
                  <div class="mb-3 mb-lg-0">
                      <h1 class="h4">Typography</h1>
                      <p class="mb-0">Dozens of reusable components built to provide buttons, alerts, popovers, and more.</p>
                  </div>
                  <div>
                      <a href="https://themesberg.com/docs/volt-bootstrap-5-dashboard/foundation/typography/" class="btn btn-outline-gray-600 d-inline-flex align-items-center">
                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path></svg>
                          Typography Docs
                      </a>
                  </div>
              </div>
          </div>
        
          <div class="row">
              <div class="col-12 mb-4">
                  <div class="card border-0 shadow components-section">
                      <div class="card-body">     
                          <div class="row mb-4 mb-lg-5">                                           
                              <div class="col-12 col-md-6">
                                  <h2 class="h5 mb-3">Headings</h2>
                                  <h1>h1. Themesberg heading</h1>
                                  <h2>h2. Themesberg heading</h2>
                                  <h3>h3. Themesberg heading</h3>
                                  <h4>h4. Themesberg heading</h4>
                                  <h5>h5. Themesberg heading</h5>
                                  <h6>h6. Themesberg heading</h6>
                              </div>
                              <div class="col-12 col-md-6">
                                  <h2 class="h5 mb-3">Display Headings</h2>
                                  <h1 class="display-1">Display 1</h1>
                                  <h1 class="display-2">Display 2</h1>
                                  <h1 class="display-3">Display 3</h1>
                                  <h1 class="display-4">Display 4</h1>
                              </div>
                          </div>
                          <!-- Title  -->
                          <div class="row">
                              <div class="col-md-4">
                                  <div class="mb-5">
                                      <h2 class="h5 mb-3">Paragraphs</h2>
                                  </div>
                              </div>
                          </div>
                          <!-- End of Title -->
                          <div class="row mb-4 mb-lg-5">
                              <div class="col-md-6">
                                  <div class="mb-3">
                                      <span class="h6 fw-bold">Simple paragraph</span>
                                  </div>
                                  <p>Start your development with a Pixel Design System for Bootstrap 4. Themesberg makes beautiful products to help people with creative ideas succeed.Our company empowers millions of people.
                                  </p>
                              </div>
                              <div class="col-md-6">
                                  <div class="mt-5 mb-3 mt-sm-0">
                                      <span class="h6 fw-bold">Lead paragraph</span>
                                  </div>
                                  <p class="lead">Start your development with a Pixel Design System for Bootstrap 4.Themesberg makes beautiful products to help people with creative ideas succeed.Our company empowers millions of people.</p>
                              </div>
                          </div>
                          <div class="row mt-4 mb-3 align-items-center">
                              <div class="col-sm-2">
                                  <small class="text-uppercase text-muted">Dark text</small>
                              </div>
                              <div class="col-sm-10">
                                  <p class="text-dark mb-0">Design is not just what it looks like and feels like. Design is how it works.</p>
                              </div>
                          </div>
                          <div class="row py-3 align-items-center">
                              <div class="col-sm-2">
                                  <small class="text-uppercase text-muted">Primary text</small>
                              </div>
                              <div class="col-sm-10">
                                  <p class="text-primary mb-0">Design is not just what it looks like and feels like. Design is how it works.</p>
                              </div>
                          </div>
                          <div class="row py-3 align-items-center">
                              <div class="col-sm-2">
                                  <small class="text-uppercase text-muted">Secondary text</small>
                              </div>
                              <div class="col-sm-10">
                                  <p class="text-secondary mb-0">Design is not just what it looks like and feels like. Design is how it works.</p>
                              </div>
                          </div>
                          <div class="row py-3 align-items-center">
                              <div class="col-sm-2">
                                  <small class="text-uppercase text-muted">Tertiary text</small>
                              </div>
                              <div class="col-sm-10">
                                  <p class="text-tertiary mb-0">Design is not just what it looks like and feels like. Design is how it works.</p>
                              </div>
                          </div>
                          <div class="row py-3 align-items-center">
                              <div class="col-sm-2">
                                  <small class="text-uppercase text-muted">Info text</small>
                              </div>
                              <div class="col-sm-10">
                                  <p class="text-info mb-0">Design is not just what it looks like and feels like. Design is how it works.</p>
                              </div>
                          </div>
                          <div class="row py-3 align-items-center">
                              <div class="col-sm-2">
                                  <small class="text-uppercase text-muted">Danger text</small>
                              </div>
                              <div class="col-sm-10">
                                  <p class="text-danger mb-0">Design is not just what it looks like and feels like. Design is how it works.</p>
                              </div>
                          </div>
                          <div class="row py-3 align-items-center">
                              <div class="col-sm-2">
                                  <small class="text-uppercase text-muted">Success text</small>
                              </div>
                              <div class="col-sm-10">
                                  <p class="text-success mb-0">Design is not just what it looks like and feels like. Design is how it works.</p>
                              </div>
                          </div>
                          <!-- Title  -->
                          <div class="row">
                              <div class="col-md-4">
                                  <div class="mt-6 mb-5">
                                      <span class="h6">Blockquote</span>
                                  </div>
                              </div>
                          </div>
                          <!-- End of Title -->
                          <div class="row">
                              <div class="col-md-8">
                                  <blockquote class="blockquote text-center">
                                      Themesberg makes beautiful products to help people with creative ideas succeed. Our company empowers millions of people.
                                      <footer class="blockquote-footer mt-3 text-primary">Zoltan Szőgyényi</footer>
                                  </blockquote>
                              </div>
                          </div>
                          <!-- Title  -->
                          <div class="row">
                              <div class="col-md-4">
                                  <div class="mt-6 mb-5">
                                      <span class="h6">Lists</span>
                                  </div>
                              </div>
                          </div>
                          <!-- End of Title -->
                          <div class="row">
                              <div class="col-md-6">
                                  <div class="mb-3">
                                      <span class="h6">Unordered</span>
                                  </div>
                                  <ul>
                                      <li>Minutes of the last meeting</li>
                                      <li>Do we need yet more meetings?</li>
                                      <li>Any other business
                                          <ul>
                                              <li>Programming</li>
                                              <li>Web Design</li>
                                              <li>Database</li>
                                          </ul>
                                      </li>
                                      <li>Something funny</li>
                                  </ul>
                              </div>
                              <div class="col-md-6">
                                  <div class="mt-5 mb-3 mt-sm-0">
                                      <span class="h6 fw-bold">Ordered</span>
                                  </div>
                                  <ol>
                                      <li>Minutes of the last meeting</li>
                                      <li>Do we need yet more meetings?</li>
                                      <li>Any other business
                                          <ol>
                                              <li>Programming</li>
                                              <li>Web Design</li>
                                              <li>Database</li>
                                          </ol>
                                      </li>
                                      <li>Something funny</li>
                                  </ol>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . dashboard.html
        Content:
        {% extends "layouts/base.html" %}
        {% block title %} Departments {% endblock %}
        
        {% block content %}
        <div class="container mt-2" style="min-height: 100vh; background-color: #f7f9f8;">
            <h2 class="mb-4" style="color: #26443c;">Departments</h2>
            <div class="row">
                {% for department in departments %}
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm">
                        <div class="card-header {% cycle 'bg-primary' 'bg-success' 'bg-info' 'bg-warning' %} text-white" style="background-color: #26443c !important; border-color: #c4a938;">
                            <h5 class="card-title mb-0"><i class="fas fa-building me-2"></i> {{ department.name }}</h5>
                        </div>
                        <div class="card-body" style="color: #000000;">
                            <p class="card-text">{{ department.description }}</p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <a href="{% url 'apps.home:department_modules' department_id=department.id %}" class="btn btn-sm btn-outline-primary"><i class="fas fa-folder-open me-1"></i> View Modules</a>
                            </div>
                        </div>
                    </div>
                </div>
                {% empty %}
                <div class="col-12">
                    <div class="alert alert-info" role="alert">
                        <i class="fas fa-info-circle me-2"></i> No departments found.
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
        {% endblock content %}

      . department_modules.html
        Content:
        {% extends "layouts/base.html" %}
        {% block title %} {{ department.name }} Modules {% endblock %}
        
        {% block content %}
        <div class="container mt-2" style="min-height: 100vh; background-color: #f7f9f8;">
            <h2 class="mb-3" style="color: #26443c;"><i class="fas fa-building me-2"></i> {{ department.name }} Modules</h2>
            <div class="card mb-4 shadow-sm" style="border-color: #c4a938;">
                <div class="card-body" style="color: #000000;">
                    <p class="card-text"><i class="fas fa-info-circle me-2" style="color: #26443c;"></i> {{ department.description }}</p>
                </div>
            </div>
            <div class="row">
                {% for module in modules %}
                <div class="col-md-4 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-header text-center text-white" style="background-color: #26443c !important; border-color: #c4a938;">
                            <h5 class="card-title mb-0"><i class="{{ module.icon_class }} me-2"></i> {{ module.name }}</h5>
                        </div>
                        <div class="card-body text-center d-flex flex-column align-items-center justify-content-center" style="color: #000000;">
                            {% if module.url_name %}
                                {% url module.url_name as module_url %} <!-- Try to resolve URL, store in variable -->
                                <a href="{{ module_url }}" class="module-link" style="display: block; padding: 20px; text-decoration: none; color: inherit;">
                                    <i class="{{ module.icon_class }} fa-4x" style="color: #c4a938;"></i>
                                </a>
                            {% else %}
                                <a href="javascript:void(0);" class="module-link" style="display: block; padding: 20px; text-decoration: none; color: inherit; pointer-events: none; cursor: default;"> <!-- Fallback URL -->
                                    <i class="{{ module.icon_class }} fa-4x" style="color: #c4a938;"></i>
                                </a>
                            {% endif %}
                            <p class="card-text mt-2" style="font-size: 0.9rem; color: #555;">{{ module.description }}</p>
                        </div>
                        <div class="card-footer text-center" style="background-color: #f7f9f8;">
                            {% if module.url_name %}
                                {% url module.url_name as button_url %} <!-- Try to resolve URL for button too -->
                                <a href="{{ button_url }}" class="btn btn-outline-primary btn-sm"><i class="fas fa-arrow-right me-1"></i> Go to Module</a>
                            {% else %}
                                <button class="btn btn-outline-secondary btn-sm" disabled><i class="fas fa-times-circle me-1"></i> Module Inactive</button>
                            {% endif %}
                        </div>
                    </div>
                </div>
                {% endfor %}
            </div>
            <div class="mt-4">
                <a href="{% url 'apps.home:dashboard' %}" class="btn btn-secondary"><i class="fas fa-arrow-left me-1"></i> Back to Departments</a>
            </div>
        </div>
        {% endblock content %}

      . index.html
        Content:
        <!DOCTYPE html>
        <html lang="en">
        <head> 
            <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
            <title>Directorate of Strategy, Planning and Organizational Productivity</title>
            <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
            
            <!-- Favicon -->
            <link rel="apple-touch-icon" sizes="120x120" href="{{ ASSETS_ROOT }}/img/favicon/apple-touch-icon.png">
            <link rel="icon" type="image/png" sizes="32x32" href="{{ ASSETS_ROOT }}/img/favicon/favicon-32x32.png">
            <link rel="icon" type="image/png" sizes="16x16" href="{{ ASSETS_ROOT }}/img/favicon/favicon-16x16.png">
            <link rel="manifest" href="{{ ASSETS_ROOT }}/img/favicon/site.webmanifest">
            <link rel="mask-icon" href="{{ ASSETS_ROOT }}/img/favicon/safari-pinned-tab.svg" color="#ffffff">
            <meta name="msapplication-TileColor" content="#ffffff">
            <meta name="theme-color" content="#ffffff">
        
            <!-- Sweet Alert -->
            <link type="text/css" href="{{ ASSETS_ROOT }}/vendor/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
            
            <!-- Notyf -->
            <link type="text/css" href="{{ ASSETS_ROOT }}/vendor/notyf/notyf.min.css" rel="stylesheet">
            
            <!-- Volt CSS -->
            <link type="text/css" href="{{ ASSETS_ROOT }}/css/volt.css" rel="stylesheet">
        
            <style>
                :root {
                    --primary-green: #0A5F38;  /* Kenya Judiciary Green */
                    --secondary-green: #0D7344;
                    --accent-gold: #D4AF37;    /* Official Gold */
                    --text-dark: #333333;
                    --text-light: #FFFFFF;
                    --light-bg: #F8F9FA;
                    --gold-hover: #BFA030;
                }
        
                body {
                    font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
                    color: var(--text-dark);
                    line-height: 1.6;
                    background: linear-gradient(135deg, #f5f7fa 0%, #e8f0eb 100%);
                }
        
                .header-global {
                    background-color: var(--primary-green);
                    box-shadow: 0 2px 15px rgba(0,0,0,0.1);
                }
        
                .navbar-main {
                    padding: 1rem 0;
                    background-color: var(--primary-green);
                }
        
                .btn-outline-white {
                    border: 2px solid var(--accent-gold);
                    color: var(--accent-gold);
                    transition: all 0.3s ease;
                }
        
                .btn-outline-white:hover {
                    background: var(--accent-gold);
                    color: var(--primary-green);
                }
        
                .section-header {
                    padding: 5rem 0;
                    min-height: calc(100vh - 80px);
                    display: flex;
                    align-items: center;
                }
        
                .title {
                    font-size: 2.5rem;
                    font-weight: 700;
                    color: var(--primary-green);
                    margin-bottom: 2rem;
                    position: relative;
                    padding-bottom: 1rem;
                }
        
                .title:after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 50%;
                    transform: translateX(-50%);
                    width: 100px;
                    height: 4px;
                    background: var(--accent-gold);
                    border-radius: 2px;
                }
        
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 0 20px;
                }
        
                .feature-list p {
                    margin: 1rem 0;
                    padding: 1.2rem;
                    background: white;
                    border-radius: 8px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
                    transition: transform 0.3s ease;
                    border-left: 4px solid var(--accent-gold);
                }
        
                .feature-list p:hover {
                    transform: translateY(-3px);
                    box-shadow: 0 4px 15px rgba(10, 95, 56, 0.1);
                    border-left: 4px solid var(--primary-green);
                }
        
                .btn-primary {
                    background-color: var(--primary-green);
                    border: none;
                    padding: 0.8rem 2rem;
                    font-size: 1.1rem;
                    border-radius: 30px;
                    transition: all 0.3s ease;
                    box-shadow: 0 4px 15px rgba(10, 95, 56, 0.2);
                    color: var(--text-light);
                }
        
                .btn-primary:hover {
                    background-color: var(--secondary-green);
                    transform: translateY(-2px);
                    box-shadow: 0 6px 20px rgba(10, 95, 56, 0.3);
                }
        
                footer {
                    padding: 2rem 0;
                    color: var(--primary-green);
                }
        
                footer a {
                    color: var(--secondary-green);
                    font-weight: 500;
                }
        
                footer a:hover {
                    color: var(--accent-gold);
                }
        
                .lead {
                    color: var(--primary-green);
                    font-size: 1.2rem;
                    font-weight: 500;
                }
        
                /* Check mark styling */
                .feature-list p::before {
                    content: "✓";
                    color: var(--primary-green);
                    font-weight: bold;
                    margin-right: 10px;
                }
        
                @media (max-width: 768px) {
                    .title {
                        font-size: 2rem;
                    }
        
                    .section-header {
                        padding: 3rem 0;
                    }
        
                    .feature-list p {
                        margin: 0.5rem 0;
                        padding: 0.8rem;
                    }
                }
        
                /* Animation */
                @keyframes fadeIn {
                    from { opacity: 0; transform: translateY(20px); }
                    to { opacity: 1; transform: translateY(0); }
                }
        
                .feature-list p {
                    animation: fadeIn 0.5s ease forwards;
                    opacity: 0;
                }
        
                .feature-list p:nth-child(1) { animation-delay: 0.2s; }
                .feature-list p:nth-child(2) { animation-delay: 0.4s; }
                .feature-list p:nth-child(3) { animation-delay: 0.6s; }
                .feature-list p:nth-child(4) { animation-delay: 0.8s; }
        
                /* Additional decorative elements */
                .decorative-bar {
                    height: 4px;
                    background: linear-gradient(to right, var(--primary-green), var(--accent-gold));
                    width: 100%;
                    position: absolute;
                    top: 0;
                    left: 0;
                }
            </style>
        </head>
        
        <body>
            <header class="header-global">
                <div class="decorative-bar"></div>
                <nav id="navbar-main" aria-label="Primary navigation" class="navbar navbar-main navbar-expand-lg navbar-theme-primary navbar-dark">
                    <div class="container position-relative">
                        <div class="navbar-collapse collapse me-auto" id="navbar_global">
                            <div class="navbar-collapse-header">
                                <div class="row">
                                    <div class="col-6 collapse-brand">
                                        <a href="/">
                                            <img src="{{ ASSETS_ROOT }}/img/brand/light.svg" alt="Volt logo">
                                        </a>
                                    </div>
                                    <div class="col-6 collapse-close">
                                        <a href="#navbar_global" class="fas fa-times" data-toggle="collapse" data-target="#navbar_global" aria-controls="navbar_global" aria-expanded="false" title="close" aria-label="Toggle navigation"></a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex align-items-center ms-auto">
                            <a href="{% url 'logout' %}" class="btn btn-outline-white d-inline-flex align-items-center me-md-3">
                                Logout
                            </a>
                        </div>
                    </div>
                </nav>
            </header>
        
            <main>
                <section class="section-header">
                    <div class="container">
                        <h1 class="title text-center">Directorate of Strategy, Planning and Organizational Productivity</h1>
                
                        <div class="text-center mt-5">
                            <p class="lead">A strategic department within the Kenyan Judiciary focused on driving organizational excellence through:</p>
                            <div class="mt-4 feature-list">
                                <p>Strategic planning and implementation</p>
                                <p>Performance monitoring and evaluation</p>
                                <p>Research and data analytics</p>
                                <p>Quality assurance and innovation</p>
                            </div>
                        </div>
        
                        <div class="text-center mt-5">
                            <a href="{% url 'apps.home:dashboard' %}" class="btn btn-primary">Access Dashboard</a>
                        </div>
                
                        <footer class="text-center mt-5">
                            <a href="https://judiciary.go.ke" class="text-decoration-none">Judiciary</a>
                            <p>© 2025 Directorate of Strategy, Planning and Organizational Productivity</p>
                        </footer>
                    </div>
                </section>
            </main>
        
            {% include 'includes/scripts.html' %}
        </body>
        </html>

      . page-403.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Error 403 {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-100 d-flex align-items-center justify-content-center">
                    <div class="container">
                        <div class="row">
                            <div class="col-12 text-center d-flex align-items-center justify-content-center">
                                <div>
                                    <img class="img-fluid w-75" src="{{ ASSETS_ROOT }}/img/illustrations/404.svg" alt="404 not found">
                                    <h1 class="mt-5">
                                        Access <span class="fw-bolder text-primary">denied</span>
                                    </h1>
                                    <p class="lead my-4">
                                        Please contact support or authenticate
                                    </p>
                                    <a class="btn btn-dark animate-hover" href="{% url 'login' %}">
                                       <i class="fas fa-chevron-left me-3 ps-2 animate-left-3"></i>LOGIN</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . page-404.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Error 404 {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-100 d-flex align-items-center justify-content-center">
                    <div class="container">
                        <div class="row">
                            <div class="col-12 text-center d-flex align-items-center justify-content-center">
                                <div>
                                    <img class="img-fluid w-75" src="{{ ASSETS_ROOT }}/img/illustrations/404.svg" alt="404 not found">
                                    <h1 class="mt-5">Page not <span class="fw-bolder text-primary">found</span></h1>
                                    <p class="lead my-4">Oops! Looks like you followed a bad link. If you think this is a problem with us, please tell us.</p>
                                    <a href="/dashboard.html" class="btn btn-gray-800 d-inline-flex align-items-center justify-content-center mb-4">
                                        <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                                        Back to homepage
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . page-500.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Error 500 {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-100 d-flex align-items-center justify-content-center">
                    <div class="container">
                        <div class="row align-items-center ">
                            <div class="col-12 col-lg-5 order-2 order-lg-1 text-center text-lg-left">
                                <h1 class="mt-5">Something has gone <span class="text-primary">seriously</span> wrong</h1>
                                <p class="lead my-4">It's always time for a coffee break. We should be back by the time you finish your coffee.</p>
                                <a href="/dashboard.html" class="btn btn-gray-800 d-inline-flex align-items-center justify-content-center mb-4">
                                    <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                                    Back to homepage
                                </a>
                            </div>
                            <div class="col-12 col-lg-7 order-1 order-lg-2 text-center d-flex align-items-center justify-content-center">
                                <img class="img-fluid w-75" src="{{ ASSETS_ROOT }}/img/illustrations/500.svg" alt="500 Server Error">
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . page-forgot-password.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Forgot Password {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-lg-100 mt-5 mt-lg-0 bg-soft d-flex align-items-center">
                    <div class="container">
                        <div class="row justify-content-center form-bg-image">
                            <p class="text-center"><a href="./sign-in.html" class="d-flex align-items-center justify-content-center">
                                <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                                Back to log in
                                </a>
                            </p>
                            <div class="col-12 d-flex align-items-center justify-content-center">
                                <div class="signin-inner my-3 my-lg-0 bg-white shadow border-0 rounded p-4 p-lg-5 w-100 fmxw-500">
                                    <h1 class="h3">Forgot your password?</h1>
                                    <p class="mb-4">Don't fret! Just type in your email and we will send you a code to reset your password!</p>
                                    <form action="#">
                                        <!-- Form -->
                                        <div class="mb-4">
                                            <label for="email">Your Email</label>
                                            <div class="input-group">
                                                <input type="email" class="form-control" id="email" placeholder="john@company.com" required autofocus>
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <div class="d-grid">
                                            <button type="submit" class="btn btn-gray-800">Recover password</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . page-lock.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Page Lock {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-lg-100 mt-5 mt-lg-0 bg-soft d-flex align-items-center">
                    <div class="container">
                        <a href="/dashboard.html" class="d-flex align-items-center justify-content-center mb-4">
                            <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                            Back to homepage
                        </a>
                        <div class="row justify-content-center form-bg-image" data-background-lg="{{ ASSETS_ROOT }}/img/illustrations/signin.svg">
                            <div class="col-12 d-flex align-items-center justify-content-center">
                                <div class="bg-white shadow border-0 rounded p-4 p-lg-5 w-100 fmxw-500">
                                    <div class="text-center text-md-center mb-4 mt-md-0">
                                        <div class="avatar avatar-lg mx-auto mb-3"><img class="rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/team/profile-picture-3.jpg"></div>
                                        <h1 class="h3">Bonnie Green</h1>
                                        <p class="text-gray">Better to be safe than sorry.</p>
                                    </div>
                                    <form class="mt-5">
                                        <!-- Form -->
                                        <div class="form-group mb-4">
                                            <label for="password">Your Password</label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon2">
                                                    <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                </span>
                                                <input type="password" placeholder="Password" class="form-control" id="password" required>
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <div class="d-grid mt-3">
                                            <button type="submit" class="btn btn-gray-800">Unlock</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . page-reset-password.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Reset Password {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-lg-100 mt-5 mt-lg-0 bg-soft d-flex align-items-center">
                    <div class="container">
                        <div class="row justify-content-center form-bg-image">
                            <p class="text-center"><a href="./sign-in.html" class="d-flex align-items-center justify-content-center">
                                <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                                Back to log in
                                </a>
                            </p>
                            <div class="col-12 d-flex align-items-center justify-content-center">
                                <div class="bg-white shadow border-0 rounded p-4 p-lg-5 w-100 fmxw-500">
                                    <h1 class="h3 mb-4">Reset password</h1>
                                    <form action="#">
                                        <!-- Form -->
                                        <div class="mb-4">
                                            <label for="email">Your Email</label>
                                            <div class="input-group">
                                                <input type="email" class="form-control" placeholder="example@company.com" id="email" required disabled>
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <!-- Form -->
                                        <div class="form-group mb-4">
                                            <label for="password">Your Password</label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon2">
                                                    <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                </span>
                                                <input type="password" placeholder="Password" class="form-control" id="password" required>
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <!-- Form -->
                                        <div class="form-group mb-4">
                                            <label for="confirm_password">Confirm Password</label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon2">
                                                    <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                </span>
                                                <input type="password" placeholder="Confirm Password" class="form-control" id="confirm_password" required>
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <div class="d-grid">
                                            <button type="submit" class="btn btn-gray-800">Reset password</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . page-sign-in.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Sign IN {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-lg-100 mt-5 mt-lg-0 bg-soft d-flex align-items-center">
                    <div class="container">
                        <p class="text-center">
                            <a href="/dashboard.html" class="d-flex align-items-center justify-content-center">
                                <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                                Back to homepage
                            </a>
                        </p>
                        <div class="row justify-content-center form-bg-image" data-background-lg="{{ ASSETS_ROOT }}/img/illustrations/signin.svg">
                            <div class="col-12 d-flex align-items-center justify-content-center">
                                <div class="bg-white shadow border-0 rounded border-light p-4 p-lg-5 w-100 fmxw-500">
                                    <div class="text-center text-md-center mb-4 mt-md-0">
                                        <h1 class="mb-0 h3">Sign in to our platform</h1>
                                    </div>
                                    <form action="#" class="mt-4">
                                        <!-- Form -->
                                        <div class="form-group mb-4">
                                            <label for="email">Your Email</label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon1">
                                                    <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path></svg>
                                                </span>
                                                <input type="email" class="form-control" placeholder="example@company.com" id="email" autofocus required>
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <div class="form-group">
                                            <!-- Form -->
                                            <div class="form-group mb-4">
                                                <label for="password">Your Password</label>
                                                <div class="input-group">
                                                    <span class="input-group-text" id="basic-addon2">
                                                        <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                    </span>
                                                    <input type="password" placeholder="Password" class="form-control" id="password" required>
                                                </div>  
                                            </div>
                                            <!-- End of Form -->
                                            <div class="d-flex justify-content-between align-items-top mb-4">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" value="" id="remember">
                                                    <label class="form-check-label mb-0" for="remember">
                                                      Remember me
                                                    </label>
                                                </div>
                                                <div><a href="./forgot-password.html" class="small text-right">Lost password?</a></div>
                                            </div>
                                        </div>
                                        <div class="d-grid">
                                            <button type="submit" class="btn btn-gray-800">Sign in</button>
                                        </div>
                                    </form>
                                    <div class="mt-3 mb-4 text-center">
                                        <span class="fw-normal">or login with</span>
                                    </div>
                                    <div class="d-flex justify-content-center my-4">
                                        <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" aria-label="facebook button" title="facebook button">
                                            <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"></path></svg>
                                        </a>
                                        <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" aria-label="twitter button" title="twitter button">
                                            <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
                                        </a>
                                        <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500" aria-label="github button" title="github button">
                                            <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg>
                                        </a>
                                    </div>
                                    <div class="d-flex justify-content-center align-items-center mt-4">
                                        <span class="fw-normal">
                                            Not registered?
                                            <a href="./sign-up.html" class="fw-bold">Create account</a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . page-sign-up.html
        Content:
        {% extends "layouts/base-fullscreen.html" %}
        
        {% block title %} Sign UP {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <main>
                <section class="vh-lg-100 mt-5 mt-lg-0 bg-soft d-flex align-items-center">
                    <div class="container">
                        <p class="text-center">
                            <a href="/dashboard.html" class="d-flex align-items-center justify-content-center">
                                <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                                Back to homepage
                            </a>
                        </p>
                        <div class="row justify-content-center form-bg-image" data-background-lg="{{ ASSETS_ROOT }}/img/illustrations/signin.svg">
                            <div class="col-12 d-flex align-items-center justify-content-center">
                                <div class="bg-white shadow border-0 rounded border-light p-4 p-lg-5 w-100 fmxw-500">
                                    <div class="text-center text-md-center mb-4 mt-md-0">
                                        <h1 class="mb-0 h3">Create Account </h1>
                                    </div>
                                    <form action="#" class="mt-4">
                                        <!-- Form -->
                                        <div class="form-group mb-4">
                                            <label for="email">Your Email</label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon1">
                                                    <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path></svg>
                                                </span>
                                                <input type="email" class="form-control" placeholder="example@company.com" id="email" autofocus required>
                                            </div>  
                                        </div>
                                        <!-- End of Form -->
                                        <div class="form-group">
                                            <!-- Form -->
                                            <div class="form-group mb-4">
                                                <label for="password">Your Password</label>
                                                <div class="input-group">
                                                    <span class="input-group-text" id="basic-addon2">
                                                        <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                    </span>
                                                    <input type="password" placeholder="Password" class="form-control" id="password" required>
                                                </div>  
                                            </div>
                                            <!-- End of Form -->
                                            <!-- Form -->
                                            <div class="form-group mb-4">
                                                <label for="confirm_password">Confirm Password</label>
                                                <div class="input-group">
                                                    <span class="input-group-text" id="basic-addon2">
                                                        <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path></svg>
                                                    </span>
                                                    <input type="password" placeholder="Confirm Password" class="form-control" id="confirm_password" required>
                                                </div>  
                                            </div>
                                            <!-- End of Form -->
                                            <div class="mb-4">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" value="" id="remember">
                                                    <label class="form-check-label fw-normal mb-0" for="remember">
                                                        I agree to the <a href="#" class="fw-bold">terms and conditions</a>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="d-grid">
                                            <button type="submit" class="btn btn-gray-800">Sign up</button>
                                        </div>
                                    </form>
                                    <div class="mt-3 mb-4 text-center">
                                        <span class="fw-normal">or login with</span>
                                    </div>
                                    <div class="d-flex justify-content-center my-4">
                                        <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" aria-label="facebook button" title="facebook button">
                                            <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"></path></svg>
                                        </a>
                                        <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500 me-2" aria-label="twitter button" title="twitter button">
                                            <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
                                        </a>
                                        <a href="#" class="btn btn-icon-only btn-pill btn-outline-gray-500" aria-label="github button" title="github button">
                                            <svg class="icon icon-xxs" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg>
                                        </a>
                                    </div>
                                    <div class="d-flex justify-content-center align-items-center mt-4">
                                        <span class="fw-normal">
                                            Already have an account? 
                                            <a href="./sign-in.html" class="fw-bold">Login here</a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . settings.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Settings {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4">
                <div>
                    <div class="dropdown">
                        <button class="btn btn-secondary d-inline-flex align-items-center me-2 dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <svg class="icon icon-xs me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
                            New
                        </button>
                        <div class="dropdown-menu dashboard-dropdown dropdown-menu-start mt-2 py-1">
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path></svg>
                                Document
                            </a>
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"></path></svg>
                                Message
                            </a>
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5.5 13a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 13H11V9.413l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13H5.5z"></path><path d="M9 13h2v5a1 1 0 11-2 0v-5z"></path></svg>                            
                                Product
                            </a>
                            <div role="separator" class="dropdown-divider my-1"></div>
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <svg class="dropdown-icon text-danger me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z" clip-rule="evenodd"></path></svg>
                                My Plan
                            </a>
                        </div>
                    </div>
                </div>
                <div>
                    <button type="button" class="btn btn-gray-800 d-inline-flex align-items-center me-2">
                        <svg class="icon icon-xs" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path></svg>
                    </button>
                    <button class="btn btn-gray-800 d-inline-flex align-items-center dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"></path><path fill-rule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z" clip-rule="evenodd"></path></svg>
                        Reports
                        <svg class="icon icon-xs ms-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                    </button>
                    <div class="dropdown-menu dashboard-dropdown dropdown-menu-start mt-2 py-1">
                        <a class="dropdown-item d-flex align-items-center" href="#">
                            <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4 3a2 2 0 100 4h12a2 2 0 100-4H4z"></path><path fill-rule="evenodd" d="M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
                            Products
                        </a>
                        <a class="dropdown-item d-flex align-items-center" href="#">
                            <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"></path></svg>                            
                            Customers
                        </a>
                        <a class="dropdown-item d-flex align-items-center" href="#">
                            <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd"></path></svg>
                            Orders
                        </a>
                        <a class="dropdown-item d-flex align-items-center" href="#">
                            <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11 4a1 1 0 10-2 0v4a1 1 0 102 0V7zm-3 1a1 1 0 10-2 0v3a1 1 0 102 0V8zM8 9a1 1 0 00-2 0v2a1 1 0 102 0V9z" clip-rule="evenodd"></path></svg>
                            Console
                        </a>
                        <div role="separator" class="dropdown-divider my-1"></div>
                        <a class="dropdown-item d-flex align-items-center" href="#">
                            <svg class="dropdown-icon text-gray-800 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"></path><path fill-rule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z" clip-rule="evenodd"></path></svg>
                            All Reports
                        </a>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12 col-xl-8">
                    <div class="card card-body border-0 shadow mb-4">
                        <h2 class="h5 mb-4">General information</h2>
                        <form>
        
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <div class="form-group">
                                        <label for="email">Email</label>
                                        <input class="form-control {% if not request.user.email %} is-invalid {% endif %}" 
                                               id="email" type="email" value="{{ request.user.email }}" 
                                               {% if request.user.email %} readonly {% endif %} >
                                        <div class="invalid-feedback">
                                            Please add your email.
                                        </div>                                        
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="form-group">
                                        <label for="phone">Username</label>
                                        <input class="form-control" value="{{ request.user.username }}" readonly>
                                    </div>
                                </div>
                            </div>
                                                
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <div>
                                        <label for="first_name">First Name</label>
                                        <input class="form-control" id="first_name" type="text" placeholder="Enter your first name" required>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div>
                                        <label for="last_name">Last Name</label>
                                        <input class="form-control" id="last_name" type="text" placeholder="Also your last name" required>
                                    </div>
                                </div>
                            </div>
                            <div class="row align-items-center">
                                <div class="col-md-6 mb-3">
                                    <label for="birthday">Birthday</label>
                                    <div class="input-group">
                                        <span class="input-group-text">
                                            <svg class="icon icon-xs" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path></svg>
                                        </span>
                                        <input data-datepicker="" class="form-control" id="birthday" type="text" placeholder="dd/mm/yyyy" required>                                               
                                      </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="gender">Gender</label>
                                    <select class="form-select mb-0" id="gender" aria-label="Gender select example">
                                        <option selected>Gender</option>
                                        <option value="1">Female</option>
                                        <option value="2">Male</option>
                                    </select>
                                </div>
                            </div>
        
                            <h2 class="h5 my-4">Location</h2>
                            <div class="row">
                                <div class="col-sm-9 mb-3">
                                    <div class="form-group">
                                        <label for="address">Address</label>
                                        <input class="form-control" id="address" type="text" placeholder="Enter your home address" required>
                                    </div>
                                </div>
                                <div class="col-sm-3 mb-3">
                                    <div class="form-group">
                                        <label for="number">Number</label>
                                        <input class="form-control" id="number" type="number" placeholder="No." required>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4 mb-3">
                                    <div class="form-group">
                                        <label for="city">City</label>
                                        <input class="form-control" id="city" type="text" placeholder="City" required>
                                    </div>
                                </div>
                                <div class="col-sm-4 mb-3">
                                    <label for="state">State</label>
                                    <select class="form-select w-100 mb-0" id="state" name="state" aria-label="State select example">
                                        <option selected>State</option>
                                        <option value="AL">Alabama</option>
                                        <option value="AK">Alaska</option>
                                        <option value="AZ">Arizona</option>
                                        <option value="AR">Arkansas</option>
                                        <option value="CA">California</option>
                                        <option value="CO">Colorado</option>
                                        <option value="CT">Connecticut</option>
                                        <option value="DE">Delaware</option>
                                        <option value="DC">District Of Columbia</option>
                                        <option value="FL">Florida</option>
                                        <option value="GA">Georgia</option>
                                        <option value="HI">Hawaii</option>
                                        <option value="ID">Idaho</option>
                                        <option value="IL">Illinois</option>
                                        <option value="IN">Indiana</option>
                                        <option value="IA">Iowa</option>
                                        <option value="KS">Kansas</option>
                                        <option value="KY">Kentucky</option>
                                        <option value="LA">Louisiana</option>
                                        <option value="ME">Maine</option>
                                        <option value="MD">Maryland</option>
                                        <option value="MA">Massachusetts</option>
                                        <option value="MI">Michigan</option>
                                        <option value="MN">Minnesota</option>
                                        <option value="MS">Mississippi</option>
                                        <option value="MO">Missouri</option>
                                        <option value="MT">Montana</option>
                                        <option value="NE">Nebraska</option>
                                        <option value="NV">Nevada</option>
                                        <option value="NH">New Hampshire</option>
                                        <option value="NJ">New Jersey</option>
                                        <option value="NM">New Mexico</option>
                                        <option value="NY">New York</option>
                                        <option value="NC">North Carolina</option>
                                        <option value="ND">North Dakota</option>
                                        <option value="OH">Ohio</option>
                                        <option value="OK">Oklahoma</option>
                                        <option value="OR">Oregon</option>
                                        <option value="PA">Pennsylvania</option>
                                        <option value="RI">Rhode Island</option>
                                        <option value="SC">South Carolina</option>
                                        <option value="SD">South Dakota</option>
                                        <option value="TN">Tennessee</option>
                                        <option value="TX">Texas</option>
                                        <option value="UT">Utah</option>
                                        <option value="VT">Vermont</option>
                                        <option value="VA">Virginia</option>
                                        <option value="WA">Washington</option>
                                        <option value="WV">West Virginia</option>
                                        <option value="WI">Wisconsin</option>
                                        <option value="WY">Wyoming</option>
                                    </select>
                                </div>
                                <div class="col-sm-4">
                                    <div class="form-group">
                                        <label for="zip">ZIP</label>
                                        <input class="form-control" id="zip" type="tel" placeholder="ZIP" required>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-3">
                                <button class="btn btn-gray-800 mt-2 animate-up-2" type="submit">Save all</button>
                            </div>
                        </form>
                    </div>
                    <div class="card card-body border-0 shadow mb-4 mb-xl-0">
                        <h2 class="h5 mb-4">Alerts & Notifications</h2>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex align-items-center justify-content-between px-0 border-bottom">
                                <div>
                                    <h3 class="h6 mb-1">Company News</h3>
                                    <p class="small pe-4">Get Rocket news, announcements, and product updates</p>
                                </div>
                                <div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="user-notification-1">
                                        <label class="form-check-label" for="user-notification-1"></label>
                                    </div>
                                </div>
                            </li>
                            <li class="list-group-item d-flex align-items-center justify-content-between px-0 border-bottom">
                                <div>
                                    <h3 class="h6 mb-1">Account Activity</h3>
                                    <p class="small pe-4">Get important notifications about you or activity you've missed</p>
                                </div>
                                <div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="user-notification-2" checked>
                                        <label class="form-check-label" for="user-notification-2"></label>
                                    </div>                                            
                                </div>
                            </li>
                            <li class="list-group-item d-flex align-items-center justify-content-between px-0">
                                <div>
                                    <h3 class="h6 mb-1">Meetups Near You</h3>
                                    <p class="small pe-4">Get an email when a Dribbble Meetup is posted close to my location</p>
                                </div>
                                <div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="user-notification-3" checked>
                                        <label class="form-check-label" for="user-notification-3"></label>
                                    </div> 
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-12 col-xl-4">
                    <div class="row">
                        <div class="col-12 mb-4">
                            <div class="card shadow border-0 text-center p-0">
                                <div class="profile-cover rounded-top" data-background="{{ ASSETS_ROOT }}/img/profile-cover.jpg"></div>
                                <div class="card-body pb-5">
                                    <img src="{{ ASSETS_ROOT }}/img/team/profile-picture-1.jpg" class="avatar-xl rounded-circle mx-auto mt-n7 mb-4" alt="Neil Portrait">
                                    <h4 class="h3">
                                        Neil Sims
                                    </h4>
                                    <h5 class="fw-normal">
                                        {{ request.user.username }}
                                    </h5>
                                    <p class="text-gray mb-4">
                                        {{ request.user.email }}
                                    </p>
                                    <a class="btn btn-sm btn-gray-800 d-inline-flex align-items-center me-2" href="#">
                                        <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z"></path></svg>
                                        Connect
                                    </a>
                                    <a class="btn btn-sm btn-secondary" href="#">Send Message</a>
                                </div>
                              </div>
                        </div>
                        <div class="col-12">
                            <div class="card card-body border-0 shadow mb-4">
                                <h2 class="h5 mb-4">Select profile photo</h2>
                                <div class="d-flex align-items-center">
                                    <div class="me-3">
                                        <!-- Avatar -->
                                        <img class="rounded avatar-xl" src="{{ ASSETS_ROOT }}/img/team/profile-picture-3.jpg" alt="change avatar">
                                    </div>
                                    <div class="file-field">
                                        <div class="d-flex justify-content-xl-center ms-xl-3">
                                            <div class="d-flex">
                                                <svg class="icon text-gray-500 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd"></path></svg>
                                                <input type="file">
                                                <div class="d-md-block text-left">
                                                    <div class="fw-normal text-dark mb-1">Choose Image</div>
                                                    <div class="text-gray small">JPG, GIF or PNG. Max size of 800K</div>
                                                </div>
                                            </div>
                                        </div>
                                      </div>                                        
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="card card-body border-0 shadow">
                                <h2 class="h5 mb-4">Select cover photo</h2>
                                <div class="d-flex align-items-center">
                                    <div class="me-3">
                                        <!-- Avatar -->
                                        <img class="rounded avatar-xl" src="{{ ASSETS_ROOT }}/img/profile-cover.jpg" alt="change cover">
                                    </div>
                                    <div class="file-field">
                                        <div class="d-flex justify-content-xl-center ms-xl-3">
                                            <div class="d-flex">
                                                <svg class="icon text-gray-500 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd"></path></svg>
                                                <input type="file">
                                                <div class="d-md-block text-left">
                                                    <div class="fw-normal text-dark mb-1">Choose Image</div>
                                                    <div class="text-gray small">JPG, GIF or PNG. Max size of 800K</div>
                                                </div>
                                            </div>
                                        </div>
                                      </div>                                        
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . summarise.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Summarise Legal Docs {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
        
            <div class="row">
        
                <h1> Summarise Legal Documents </h1>
        
        
        
         
        
            </div>
        
        
        
        
            <div class="row">
        
                <p>  After the document is successfully uploaded, it is processed to produce a simple yet relevant summary, including a list of the most important points. </p>
        
        
                <!-- Summarise Legal Documents interface -->
                <!-- Add a form for uploading or pasting an URL -->
                <form method="post" enctype="multipart/form-data" action="{% url 'summariser' %}">
                    {% csrf_token %}
                    <!-- Use Bootstrap classes for styling -->
                    <div class="form-group">
                        <label for="file">Upload File</label>
                        <input type="file" class="form-control-file" id="file" name="file">
                    </div>
                    <div class="form-group">
                        <label for="url">Paste URL</label>
                        <input type="text" class="form-control" id="url" name="url" placeholder="Enter Judgement or Ruling Kenya Law Url here">
                    </div>
                    <!-- Add a submit button -->
                    <br>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
        
           
            </div>
        
        
        
        {% endblock content %}

      . tables-bootstrap-tables.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Tables {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
          <div class="py-4">
              <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                  <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                      <li class="breadcrumb-item">
                          <a href="#">
                              <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                          </a>
                      </li>
                      <li class="breadcrumb-item"><a href="#">Tables</a></li>
                      <li class="breadcrumb-item active" aria-current="page">Bootstrap tables</li>
                  </ol>
              </nav>
              <div class="d-flex justify-content-between w-100 flex-wrap">
                  <div class="mb-3 mb-lg-0">
                      <h1 class="h4">Bootstrap tables</h1>
                      <p class="mb-0">Dozens of reusable components built to provide buttons, alerts, popovers, and more.</p>
                  </div>
                  <div>
                      <a href="https://themesberg.com/docs/volt-bootstrap-5-dashboard/components-tables-" class="btn btn-outline-gray-600 d-inline-flex align-items-center">
                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path></svg>
                          Bootstrap Tables Docs
                      </a>
                  </div>
              </div>
          </div>
        
          <div class="card border-0 shadow mb-4">
              <div class="card-body">
                  <div class="table-responsive">
                      <table class="table table-centered table-nowrap mb-0 rounded">
                          <thead class="thead-light">
                              <tr>
                                  <th class="border-0 rounded-start">#</th>
                                  <th class="border-0">Traffic Source</th>
                                  <th class="border-0">Source Type</th>
                                  <th class="border-0">Category</th>
                                  <th class="border-0">Global Rank</th>
                                  <th class="border-0">Traffic Share</th>
                                  <th class="border-0 rounded-end">Change</th>
                              </tr>
                          </thead>
                          <tbody>
                              <!-- Item -->
                              <tr>
                                  <td><a href="#" class="text-primary fw-bold">1</a> </td>
                                  <td class="fw-bold d-flex align-items-center">
                                      <svg class="icon icon-xxs text-gray-500 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z" clip-rule="evenodd"></path></svg>
                                      Direct
                                  </td>
                                  <td>
                                      Direct
                                  </td>
                                  <td>
                                      - 
                                  </td>
                                  <td>
                                      --
                                  </td>
                                  <td>
                                      <div class="row d-flex align-items-center">
                                          <div class="col-12 col-xl-2 px-0">
                                              <div class="small fw-bold">51%</div>
                                          </div>
                                          <div class="col-12 col-xl-10 px-0 px-xl-1">
                                              <div class="progress progress-lg mb-0">
                                                  <div class="progress-bar bg-dark" role="progressbar" aria-valuenow="51" aria-valuemin="0" aria-valuemax="100" style="width: 51%;"></div>
                                              </div>
                                          </div>
                                      </div>
                                  </td>
                                  <td class="text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">2.45%</span>
                                      </div>
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td><a href="#" class="text-primary fw-bold">2</a> </td>
                                  <td class="fw-bold d-flex align-items-center">
                                      <svg class="icon icon-xxs text-gray-500 me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="google"  role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 488 512"><path fill="currentColor" d="M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z"></path></svg>
                                      Google Search
                                  </td>
                                  <td>
                                      Search / Organic
                                  </td>
                                  <td>
                                      -
                                  </td>
                                  <td>
                                      --
                                  </td>
                                  <td>
                                      <div class="row d-flex align-items-center">
                                          <div class="col-12 col-xl-2 px-0">
                                              <div class="small fw-bold">18%</div>
                                          </div>
                                          <div class="col-12 col-xl-10 px-0 px-xl-1">
                                              <div class="progress progress-lg mb-0">
                                                  <div class="progress-bar bg-dark" role="progressbar" aria-valuenow="18" aria-valuemin="0" aria-valuemax="100" style="width: 18%;"></div>
                                              </div>
                                          </div>
                                      </div>
                                  </td>
                                  <td class="text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">17.78%</span>
                                      </div>                          
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td><a href="#" class="text-primary fw-bold">3</a> </td>
                                  <td class="fw-bold d-flex align-items-center">
                                      <svg class="icon icon-xxs text-gray-500 me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="youtube" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"></path></svg>
                                      youtube.com
                                  </td>
                                  <td>
                                      Social
                                  </td>
                                  <td>
                                      <a class="small fw-bold" href="#">Arts and Entertainment</a>
                                  </td>
                                  <td>
                                      #2
                                  </td>
                                  <td>
                                      <div class="row d-flex align-items-center">
                                          <div class="col-12 col-xl-2 px-0">
                                              <div class="small fw-bold">18%</div>
                                          </div>
                                          <div class="col-12 col-xl-10 px-0 px-xl-1">
                                              <div class="progress progress-lg mb-0">
                                                  <div class="progress-bar bg-dark" role="progressbar" aria-valuenow="18" aria-valuemin="0" aria-valuemax="100" style="width: 18%;"></div>
                                              </div>
                                          </div>
                                      </div>
                                  </td>
                                  <td>
                                      -                                
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td><a href="#" class="text-primary fw-bold">4</a> </td>
                                  <td class="fw-bold d-flex align-items-center">
                                      <svg class="icon icon-xxs text-gray-500 me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="yahoo" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M223.69,141.06,167,284.23,111,141.06H14.93L120.76,390.19,82.19,480h94.17L317.27,141.06Zm105.4,135.79a58.22,58.22,0,1,0,58.22,58.22A58.22,58.22,0,0,0,329.09,276.85ZM394.65,32l-93,223.47H406.44L499.07,32Z"></path></svg>
                                      yahoo.com
                                  </td>
                                  <td>
                                      Referral
                                  </td>
                                  <td>
                                      <a class="small fw-bold" href="#">News and Media</a>
                                  </td>
                                  <td>
                                      #11
                                  </td>
                                  <td>
                                      <div class="row d-flex align-items-center">
                                          <div class="col-12 col-xl-2 px-0">
                                              <div class="small fw-bold">8%</div>
                                          </div>
                                          <div class="col-12 col-xl-10 px-0 px-xl-1">
                                              <div class="progress progress-lg mb-0">
                                                  <div class="progress-bar bg-dark" role="progressbar" aria-valuenow="8" aria-valuemin="0" aria-valuemax="100" style="width: 8%;"></div>
                                              </div>
                                          </div>
                                      </div>
                                  </td>
                                  <td class="text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">9.45%</span>
                                      </div>                                
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td><a href="#" class="text-primary fw-bold">5</a> </td>
                                  <td class="fw-bold d-flex align-items-center">
                                      <svg class="icon icon-xxs text-gray-500 me-2" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
                                      twitter.com
                                  </td>
                                  <td>
                                      Social
                                  </td>
                                  <td>
                                      <a class="small fw-bold" href="#">Social Networks</a>
                                  </td>
                                  <td>
                                  #4
                                  </td>
                                  <td>
                                      <div class="row d-flex align-items-center">
                                          <div class="col-12 col-xl-2 px-0">
                                              <div class="small fw-bold">4%</div>
                                          </div>
                                          <div class="col-12 col-xl-10 px-0 px-xl-1">
                                              <div class="progress progress-lg mb-0">
                                                  <div class="progress-bar bg-dark" role="progressbar" aria-valuenow="4" aria-valuemin="0" aria-valuemax="100" style="width: 4%;"></div>
                                              </div>
                                          </div>
                                      </div>
                                  </td>
                                  <td>
                                      -                                
                                  </td>
                              </tr>
                              <!-- End of Item -->
                          </tbody>
                      </table>
                  </div>
              </div>
          </div>
        
          <div class="card border-0 shadow">
              <div class="card-body">
                  <div class="table-responsive">
                      <table class="table table-centered table-nowrap mb-0 rounded">
                          <thead class="thead-light">
                              <tr>
                                  <th class="border-0 rounded-start">Country</th>
                                  <th class="border-0">All</th>
                                  <th class="border-0">All Change</th>
                                  <th class="border-0">Travel & Local</th>
                                  <th class="border-0">Travel & Local Change</th>
                                  <th class="border-0">Widgets</th>
                                  <th class="border-0 rounded-end">Widgets Change</th>
                              </tr>
                          </thead>
                          <tbody>
                              <!-- Item -->
                              <tr>
                                  <td class="border-0">                                             
                                      <a href="#" class="d-flex align-items-center">
                                          <img class="me-2 image image-small rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/flags/united-states-of-america.svg">
                                          <div><span class="h6">United States</span></div>
                                      </a>
                                  </td>
                                  <td class="border-0 fw-bold">106</td>
                                  <td class="border-0 text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">5</span>
                                      </div> 
                                  </td>
                                  <td class="border-0 fw-bold">
                                      3 
                                  </td>
                                  <td class="border-0">
                                      =
                                  </td>
                                  <td class="border-0 fw-bold">
                                      32  
                                  </td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">3</span>
                                      </div>
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td class="border-0">                                             
                                      <a href="#" class="d-flex align-items-center">
                                          <img class="me-2 image image-small rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/flags/canada.svg">
                                          <div><span class="h6">Canada</span></div>
                                      </a>
                                  </td>
                                  <td class="border-0 fw-bold">76</td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">17</span>
                                      </div>
                                  </td>
                                  <td class="border-0 fw-bold">
                                  4 
                                  </td>
                                  <td class="border-0">
                                  =
                                  </td>
                                  <td class="border-0 fw-bold">
                                  30  
                                  </td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">3</span>
                                      </div>
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td class="border-0">                                             
                                      <a href="#" class="d-flex align-items-center">
                                          <img class="me-2 image image-small rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/flags/united-kingdom.svg">
                                          <div><span class="h6">United Kingdom</span></div>
                                      </a>
                                  </td>
                                  <td class="border-0 fw-bold">147</td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">10</span>
                                      </div>
                                  </td>
                                  <td class="border-0 fw-bold">
                                  5 
                                  </td>
                                  <td class="border-0">
                                  =
                                  </td>
                                  <td class="border-0 fw-bold">
                                  34  
                                  </td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">7</span>
                                      </div>
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td class="border-0">                                             
                                      <a href="#" class="d-flex align-items-center">
                                          <img class="me-2 image image-small rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/flags/france.svg">
                                          <div><span class="h6">France</span></div>
                                      </a>
                                  </td>
                                  <td class="border-0 fw-bold">112</td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">3</span>
                                      </div>
                                  </td>
                                  <td class="border-0 fw-bold">
                                  5 
                                  </td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">1</span>
                                      </div>
                                  </td>
                                  <td class="border-0 fw-bold">
                                  34  
                                  </td>
                                  <td class="border-0 text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">2</span>
                                      </div> 
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td class="border-0">                                             
                                      <a href="#" class="d-flex align-items-center">
                                          <img class="me-2 image image-small rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/flags/japan.svg">
                                          <div><span class="h6">Japan</span></div>
                                      </a>
                                  </td>
                                  <td class="border-0 fw-bold">115</td>
                                  <td class="border-0 text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">12</span>
                                      </div> 
                                  </td>
                                  <td class="border-0 fw-bold">
                                  6 
                                  </td>
                                  <td class="border-0 text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">1</span>
                                      </div> 
                                  </td>
                                  <td class="border-0 fw-bold">
                                  37  
                                  </td>
                                  <td class="border-0 text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">5</span>
                                      </div> 
                                  </td>
                              </tr>
                              <!-- End of Item -->
        
                              <!-- Item -->
                              <tr>
                                  <td class="border-0">                                             
                                      <a href="#" class="d-flex align-items-center">
                                          <img class="me-2 image image-small rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/flags/germany.svg">
                                          <div><span class="h6">Germany</span></div>
                                      </a>
                                  </td>
                                  <td class="border-0 fw-bold">220</td>
                                  <td class="border-0 text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">56</span>
                                      </div> 
                                  </td>
                                  <td class="border-0 fw-bold">
                                      7 
                                  </td>
                                  <td class="border-0 text-danger">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                                          <span class="fw-bold">3</span>
                                      </div> 
                                  </td>
                                  <td class="border-0 fw-bold">
                                      30  
                                  </td>
                                  <td class="border-0 text-success">
                                      <div class="d-flex align-items-center">
                                          <svg class="icon icon-xs me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>                                   
                                          <span class="fw-bold">2</span>
                                      </div>
                                  </td>
                              </tr>
                              <!-- End of Item -->
                          </tbody>
                      </table>
                  </div>
              </div>
          </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . transactions.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Transactions {% endblock %} 
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
        
          <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4">
              <div class="d-block mb-4 mb-md-0">
                  <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                      <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                          <li class="breadcrumb-item">
                              <a href="#">
                                  <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                              </a>
                          </li>
                          <li class="breadcrumb-item"><a href="#">Volt</a></li>
                          <li class="breadcrumb-item active" aria-current="page">Transactions</li>
                      </ol>
                  </nav>
                  <h2 class="h4">All Orders</h2>
                  <p class="mb-0">Your web analytics dashboard template.</p>
              </div>
              <div class="btn-toolbar mb-2 mb-md-0">
                  <a href="#" class="btn btn-sm btn-gray-800 d-inline-flex align-items-center">
                      <svg class="icon icon-xs me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
                      New Plan
                  </a>
                  <div class="btn-group ms-2 ms-lg-3">
                      <button type="button" class="btn btn-sm btn-outline-gray-600">Share</button>
                      <button type="button" class="btn btn-sm btn-outline-gray-600">Export</button>
                  </div>
              </div>
          </div>
          
          <div class="table-settings mb-4">
              <div class="row align-items-center justify-content-between">
                  <div class="col col-md-6 col-lg-3 col-xl-4">
                      <div class="input-group me-2 me-lg-3 fmxw-400">
                          <span class="input-group-text">
                              <svg class="icon icon-xs" x-description="Heroicon name: solid/search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                  <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
                              </svg>
                          </span>
                          <input type="text" class="form-control" placeholder="Search orders">
                      </div>
                  </div>
                  <div class="col-4 col-md-2 col-xl-1 ps-md-0 text-end">
                      <div class="dropdown">
                          <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-1" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                              <svg class="icon icon-sm" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd"></path></svg>
                              <span class="visually-hidden">Toggle Dropdown</span>
                          </button>
                          <div class="dropdown-menu dropdown-menu-xs dropdown-menu-end pb-0">
                              <span class="small ps-3 fw-bold text-dark">Show</span>
                              <a class="dropdown-item d-flex align-items-center fw-bold" href="#">10 <svg class="icon icon-xxs ms-auto" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg></a>
                              <a class="dropdown-item fw-bold" href="#">20</a>
                              <a class="dropdown-item fw-bold rounded-bottom" href="#">30</a>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
          
          <div class="card card-body border-0 shadow table-wrapper table-responsive">
              <table class="table table-hover">
                  <thead>
                      <tr>
                          <th class="border-gray-200">#</th>
                          <th class="border-gray-200">Bill For</th>						
                          <th class="border-gray-200">Issue Date</th>
                          <th class="border-gray-200">Due Date</th>
                          <th class="border-gray-200">Total</th>
                          <th class="border-gray-200">Status</th>
                          <th class="border-gray-200">Action</th>
                      </tr>
                  </thead>
                  <tbody>
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456478
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Platinum Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 May 2020</span></td>                        
                          <td><span class="fw-normal">1 Jun 2020</span></td>
                          <td><span class="fw-bold">$799,00</span></td>
                          <td><span class="fw-bold text-warning">Due</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr>
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456423
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Platinum Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Apr 2020</span></td>                        
                          <td><span class="fw-normal">1 May 2020</span></td>
                          <td><span class="fw-bold">$799,00</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr> 
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456420
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Platinum Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Mar 2020</span></td>                        
                          <td><span class="fw-normal">1 Apr 2020</span></td>
                          <td><span class="fw-bold">$799,00</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr> 
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456421
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Platinum Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Feb 2020</span></td>                        
                          <td><span class="fw-normal">1 Mar 2020</span></td>
                          <td><span class="fw-bold">$799,00</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr> 
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456420
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Platinum Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Jan 2020</span></td>                        
                          <td><span class="fw-normal">1 Feb 2020</span></td>
                          <td><span class="fw-bold">$799,00</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr> 
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456479
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Platinum Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Dec 2019</span></td>                        
                          <td><span class="fw-normal">1 Jan 2020</span></td>
                          <td><span class="fw-bold">$799,00</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr> 
                      <!-- Item -->
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456478
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Platinum Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Nov 2019</span></td>                        
                          <td><span class="fw-normal">1 Dec 2019</span></td>
                          <td><span class="fw-bold">$799,00</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr> 
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  453673
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Gold Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Oct 2019</span></td>                        
                          <td><span class="fw-normal">1 Nov 2019</span></td>
                          <td><span class="fw-bold">$533,42</span></td>
                          <td><span class="fw-bold text-danger">Cancelled</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr>
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456468
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Gold Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Sep 2019</span></td>                        
                          <td><span class="fw-normal">1 Oct 2019</span></td>
                          <td><span class="fw-bold">$533,42</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr>    
                      <!-- Item -->
                      <tr>
                          <td>
                              <a href="#" class="fw-bold">
                                  456478
                              </a>
                          </td>
                          <td>
                              <span class="fw-normal">Flexible Subscription Plan</span>
                          </td>
                          <td><span class="fw-normal">1 Aug 2019</span></td>                        
                          <td><span class="fw-normal">1 Sep 2019</span></td>
                          <td><span class="fw-bold">$233,42</span></td>
                          <td><span class="fw-bold text-success">Paid</span></td>
                          <td>
                              <div class="btn-group">
                                  <button class="btn btn-link text-dark dropdown-toggle dropdown-toggle-split m-0 p-0" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                      <span class="icon icon-sm">
                                          <span class="fas fa-ellipsis-h icon-dark"></span>
                                      </span>
                                      <span class="visually-hidden">Toggle Dropdown</span>
                                  </button>
                                  <div class="dropdown-menu py-0">
                                      <a class="dropdown-item rounded-top" href="#"><span class="fas fa-eye me-2"></span>View Details</a>
                                      <a class="dropdown-item" href="#"><span class="fas fa-edit me-2"></span>Edit</a>
                                      <a class="dropdown-item text-danger rounded-bottom" href="#"><span class="fas fa-trash-alt me-2"></span>Remove</a>
                                  </div>
                              </div>
                          </td>
                      </tr>                                
                  </tbody>
              </table>
              <div class="card-footer px-3 border-0 d-flex flex-column flex-lg-row align-items-center justify-content-between">
                  <nav aria-label="Page navigation example">
                      <ul class="pagination mb-0">
                          <li class="page-item">
                              <a class="page-link" href="#">Previous</a>
                          </li>
                          <li class="page-item">
                              <a class="page-link" href="#">1</a>
                          </li>
                          <li class="page-item active">
                              <a class="page-link" href="#">2</a>
                          </li>
                          <li class="page-item">
                              <a class="page-link" href="#">3</a>
                          </li>
                          <li class="page-item">
                              <a class="page-link" href="#">4</a>
                          </li>
                          <li class="page-item">
                              <a class="page-link" href="#">5</a>
                          </li>
                          <li class="page-item">
                              <a class="page-link" href="#">Next</a>
                          </li>
                      </ul>
                  </nav>
                  <div class="fw-normal small mt-4 mt-lg-0">Showing <b>5</b> out of <b>25</b> entries</div>
              </div>
          </div>
        
        {% endblock content %}
        
        <!-- Specific Page JS goes HERE  -->
        {% block javascripts %}{% endblock javascripts %}

      . unicorn/
        . hello-magic.html
          Content:
          <div>
              <!-- put component code here -->
          </div>

      . units_list.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        <!-- Specific Page CSS goes HERE  -->
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block content %}
        
            <div class="py-4">
        
            <div class="row">
        
                <h1> {{ rank.name }} </h1>
        
                <h1> {{ fy.name }} </h1>
        
        
            </div>
        
        
            <div class="row">
        
                <!-- list of units table . unit name , upload excel button , and link to view excel file -->
        
        
        
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Unit Name</th>
                            <th scope="col">Upload Excel</th>
                            <th scope="col">View Data</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for unit in units %}
                        <tr>
                            <td>{{ unit.name }}</td>
                            <td>
                                <form method="post" enctype="multipart/form-data">
                                    {% csrf_token %}
                                    <input type="hidden" name="unit_id" value="{{ unit.id }}">
                                    <input type="hidden" name="court_rank" value="{{ rank.name }}">
                                    <input type="hidden" name="financial_year" value="{{ fy.name }}">
                                    <input type="hidden" name="quarter" value="{{ quarter }}">
                                    <input type="file" name="excel_file" class="form-control-file" id="excel_file">
                                    <button type="submit" class="btn btn-primary">Upload</button>
                                </form>
                            </td>
                            <td>
                                <a href="{{ unit.quarter_data.url }}" target="_blank">View Data</a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
        
        
                </table>
           
            </div>
        </div>
        
        {% endblock content %}

    . includes/
      . footer.html
        Content:
        <footer class="bg-white rounded shadow p-5 mb-4 mt-4">
            <div class="row">
                <div class="col-12 col-md-4 col-xl-6 mb-4 mb-md-0">
                    <p class="mb-0 text-center text-lg-start">
                     
                        
                    </p>
                </div>
            </div>
        </footer>

      . navigation.html
        Content:
        <nav class="navbar navbar-top navbar-expand navbar-dashboard navbar-dark ps-0 pe-2 pb-0">
                      <div class="container-fluid px-0">
                        <div class="d-flex justify-content-between w-100" id="navbarSupportedContent">
                          <div class="d-flex align-items-center">  
                          </div>
                          <!-- Navbar links -->
                          <ul class="navbar-nav align-items-center">
                            <li class="nav-item dropdown">
                              <a class="nav-link text-dark notification-bell unread dropdown-toggle" data-unread-notifications="true" href="#" role="button" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false">
                                <svg class="icon icon-sm text-gray-900" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"></path></svg>
                              </a>
                              <div class="dropdown-menu dropdown-menu-lg dropdown-menu-center mt-2 py-0">
                                <div class="list-group list-group-flush">
                                  <a href="#" class="text-center text-primary fw-bold border-bottom border-light py-3">Notifications</a>
                                  <a href="#" class="list-group-item list-group-item-action border-bottom">
                                    <div class="row align-items-center">
                                        <div class="col-auto">
                                          <!-- Avatar -->
                                          <img alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/team/profile-picture-1.jpg" class="avatar-md rounded">
                                        </div>
                                        <div class="col ps-0 ms-2">
                                          <div class="d-flex justify-content-between align-items-center">
                                              <div>
                                                <h4 class="h6 mb-0 text-small">Jose Leos</h4>
                                              </div>
                                              <div class="text-end">
                                                <small class="text-danger">a few moments ago</small>
                                              </div>
                                          </div>
                                          <p class="font-small mt-1 mb-0">Added you to an event "Project stand-up" tomorrow at 12:30 AM.</p>
                                        </div>
                                    </div>
                                  </a>
                                  <a href="#" class="list-group-item list-group-item-action border-bottom">
                                    <div class="row align-items-center">
                                        <div class="col-auto">
                                          <!-- Avatar -->
                                          <img alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/team/profile-picture-2.jpg" class="avatar-md rounded">
                                        </div>
                                        <div class="col ps-0 ms-2">
                                          <div class="d-flex justify-content-between align-items-center">
                                              <div>
                                                <h4 class="h6 mb-0 text-small">Neil Sims</h4>
                                              </div>
                                              <div class="text-end">
                                                <small class="text-danger">2 hrs ago</small>
                                              </div>
                                          </div>
                                          <p class="font-small mt-1 mb-0">You've been assigned a task for "Awesome new project".</p>
                                        </div>
                                    </div>
                                  </a>
                                  <a href="#" class="list-group-item list-group-item-action border-bottom">
                                    <div class="row align-items-center">
                                        <div class="col-auto">
                                          <!-- Avatar -->
                                          <img alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/team/profile-picture-3.jpg" class="avatar-md rounded">
                                        </div>
                                        <div class="col ps-0 m-2">
                                          <div class="d-flex justify-content-between align-items-center">
                                              <div>
                                                <h4 class="h6 mb-0 text-small">Roberta Casas</h4>
                                              </div>
                                              <div class="text-end">
                                                <small>5 hrs ago</small>
                                              </div>
                                          </div>
                                          <p class="font-small mt-1 mb-0">Tagged you in a document called "Financial plans",</p>
                                        </div>
                                    </div>
                                  </a>
                                  <a href="#" class="list-group-item list-group-item-action border-bottom">
                                    <div class="row align-items-center">
                                        <div class="col-auto">
                                          <!-- Avatar -->
                                          <img alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/team/profile-picture-4.jpg" class="avatar-md rounded">
                                        </div>
                                        <div class="col ps-0 ms-2">
                                          <div class="d-flex justify-content-between align-items-center">
                                              <div>
                                                <h4 class="h6 mb-0 text-small">Joseph Garth</h4>
                                              </div>
                                              <div class="text-end">
                                                <small>1 d ago</small>
                                              </div>
                                          </div>
                                          <p class="font-small mt-1 mb-0">New message: "Hey, what's up? All set for the presentation?"</p>
                                        </div>
                                    </div>
                                  </a>
                                  <a href="#" class="list-group-item list-group-item-action border-bottom">
                                    <div class="row align-items-center">
                                        <div class="col-auto">
                                          <!-- Avatar -->
                                          <img alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/team/profile-picture-5.jpg" class="avatar-md rounded">
                                        </div>
                                        <div class="col ps-0 ms-2">
                                          <div class="d-flex justify-content-between align-items-center">
                                              <div>
                                                <h4 class="h6 mb-0 text-small">Bonnie Green</h4>
                                              </div>
                                              <div class="text-end">
                                                <small>2 hrs ago</small>
                                              </div>
                                          </div>
                                          <p class="font-small mt-1 mb-0">New message: "We need to improve the UI/UX for the landing page."</p>
                                        </div>
                                    </div>
                                  </a>
                                  <a href="#" class="dropdown-item text-center fw-bold rounded-bottom py-3">
                                    <svg class="icon icon-xxs text-gray-400 me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path><path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path></svg>
                                    View all
                                  </a>
                                </div>
                              </div>
                            </li>
                            <li class="nav-item dropdown ms-lg-3">
                              <a class="nav-link dropdown-toggle pt-1 px-0" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <div class="media d-flex align-items-center">
                                  <img class="avatar rounded-circle" alt="Image placeholder" src="{{ ASSETS_ROOT }}/img/team/profile-picture-3.jpg">
                                  <div class="media-body ms-2 text-dark align-items-center d-none d-lg-block">
                                    <span class="mb-0 font-small fw-bold text-gray-900">
                                      Current User: <strong>{{ request.user.username }}</strong>
                                    </span>
                                  </div>
                                </div>
                              </a>
                              <div class="dropdown-menu dashboard-dropdown dropdown-menu-end mt-2 py-1">
                                <a class="dropdown-item d-flex align-items-center" href="/settings.html">
                                  <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z" clip-rule="evenodd"></path></svg>
                                  My Profile
                                </a>
                                <a class="dropdown-item d-flex align-items-center" href="/settings.html">
                                  <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd"></path></svg>
                                  Settings
                                </a>
                                <a class="dropdown-item d-flex align-items-center" href="#">
                                  <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z" clip-rule="evenodd"></path></svg>
                                  Messages
                                </a>
                                <a class="dropdown-item d-flex align-items-center" href="#">
                                  <svg class="dropdown-icon text-gray-400 me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0c0 .993-.241 1.929-.668 2.754l-1.524-1.525a3.997 3.997 0 00.078-2.183l1.562-1.562C15.802 8.249 16 9.1 16 10zm-5.165 3.913l1.58 1.58A5.98 5.98 0 0110 16a5.976 5.976 0 01-2.516-.552l1.562-1.562a4.006 4.006 0 001.789.027zm-4.677-2.796a4.002 4.002 0 01-.041-2.08l-.08.08-1.53-1.533A5.98 5.98 0 004 10c0 .954.223 1.856.619 2.657l1.54-1.54zm1.088-6.45A5.974 5.974 0 0110 4c.954 0 1.856.223 2.657.619l-1.54 1.54a4.002 4.002 0 00-2.346.033L7.246 4.668zM12 10a2 2 0 11-4 0 2 2 0 014 0z" clip-rule="evenodd"></path></svg>
                                  Support
                                </a>
                                <div role="separator" class="dropdown-divider my-1"></div>
                                <a class="dropdown-item d-flex align-items-center" href="{% url 'logout' %}">
                                  <svg class="dropdown-icon text-danger me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path></svg>                
                                  Logout
                                </a>
                              </div>
                            </li>
                          </ul>
                        </div>
                      </div>
                    </nav>

      . scripts.html
        Content:
        
        <!-- Core -->
        <script src="{{ ASSETS_ROOT }}/vendor/@popperjs/core/dist/umd/popper.min.js"></script>
        <script src="{{ ASSETS_ROOT }}/vendor/bootstrap/dist/js/bootstrap.min.js"></script>
        
        <!-- Vendor JS -->
        <script src="{{ ASSETS_ROOT }}/vendor/onscreen/dist/on-screen.umd.min.js"></script>
        
        <!-- Slider -->
        <script src="{{ ASSETS_ROOT }}/vendor/nouislider/distribute/nouislider.min.js"></script>
        
        <!-- Smooth scroll -->
        <script src="{{ ASSETS_ROOT }}/vendor/smooth-scroll/dist/smooth-scroll.polyfills.min.js"></script>
        
        <!-- Charts -->
        <script src="{{ ASSETS_ROOT }}/vendor/chartist/dist/chartist.min.js"></script>
        <script src="{{ ASSETS_ROOT }}/vendor/chartist-plugin-tooltips/dist/chartist-plugin-tooltip.min.js"></script>
        
        <!-- Datepicker -->
        <script src="{{ ASSETS_ROOT }}/vendor/vanillajs-datepicker/dist/js/datepicker.min.js"></script>
        
        <!-- Sweet Alerts 2 -->
        <script src="{{ ASSETS_ROOT }}/vendor/sweetalert2/dist/sweetalert2.all.min.js"></script>
        
        <!-- Moment JS -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js"></script>
        
        <!-- Vanilla JS Datepicker -->
        <script src="{{ ASSETS_ROOT }}/vendor/vanillajs-datepicker/dist/js/datepicker.min.js"></script>
        
        <!-- Notyf -->
        <script src="{{ ASSETS_ROOT }}/vendor/notyf/notyf.min.js"></script>
        
        <!-- Simplebar -->
        <script src="{{ ASSETS_ROOT }}/vendor/simplebar/dist/simplebar.min.js"></script>
        
        <!-- Github buttons -->
        <script async defer src="https://buttons.github.io/buttons.js"></script>
        
        <!-- Volt JS -->
        <script src="{{ ASSETS_ROOT }}/js/volt.js"></script>
        
        

      . settings-box.html
        Content:


      . sidebar.html
        Content:
                <nav class="navbar navbar-dark navbar-theme-primary px-4 col-12 d-lg-none">
                    <a class="navbar-brand me-lg-5" href="/">
                        <img class="navbar-brand-dark" src="{{ ASSETS_ROOT }}/img/brand/light.svg" alt="Volt logo" /> <img class="navbar-brand-light" src="{{ ASSETS_ROOT }}/img/brand/dark.svg" alt="Volt logo" />
                    </a>
                    <div class="d-flex align-items-center">
                        <button class="navbar-toggler d-lg-none collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
                          <span class="navbar-toggler-icon"></span>
                        </button>
                    </div>
                </nav>
        
                <nav id="sidebarMenu" class="sidebar d-lg-block bg-gray-800 text-white collapse" data-simplebar>
                  <div class="sidebar-inner px-4 pt-3">
                    <div class="user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4">
                      <div class="d-flex align-items-center">
                        <div class="avatar-lg me-4">
                          <img src="{{ ASSETS_ROOT }}/img/team/profile-picture-3.jpg" class="card-img-top rounded-circle border-white"
                            alt="Bonnie Green">
                        </div>
                        <div class="d-block">
                          <h2 class="h5 mb-3">Hi, Jane</h2>
                          <a href="/page-sign-in.html" class="btn btn-secondary btn-sm d-inline-flex align-items-center">
                            <svg class="icon icon-xxs me-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path></svg>            
                            Sign Out
                          </a>
                        </div>
                      </div>
                      <div class="collapse-close d-md-none">
                        <a href="#sidebarMenu" data-bs-toggle="collapse"
                            data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="true"
                            aria-label="Toggle navigation">
                            <svg class="icon icon-xs" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                          </a>
                      </div>
                    </div>
                    <ul class="nav flex-column pt-3 pt-md-0">
                      <li class="nav-item">
                        <a href="/" class="nav-link d-flex align-items-center">
                          <span class="sidebar-icon">
                            <img src="{{ ASSETS_ROOT }}/img/brand/light.svg" height="20" width="20" alt="Volt Logo">
                          </span>
                          <span class="mt-1 ms-1 sidebar-text"> Menu </span>
                        </a>
                      </li>
                      <li class="nav-item {% if 'dashboard' in segment %} active {% endif %}">
                        <a href="/" class="nav-link">
                          <span class="sidebar-icon">
                            <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path><path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path></svg>
                          </span> 
                          <span class="sidebar-text"> Dashboard</span>
                        </a>
                      </li>
                      <li class="nav-item {% if 'transactions' in segment %} active {% endif %}">
        
                            <a href="report.html" class="nav-link">
        
        
                          <span class="sidebar-icon">
                            <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z"></path><path fill-rule="evenodd" d="M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z" clip-rule="evenodd"></path></svg>
                          </span>
                          <span class="sidebar-text">Report</span>
                        </a>
                      </li>
        
            
          
                      
                      <li class="nav-item {% if 'settings' in segment %} active {% endif %}">
                        <a href="/generate_docs.html" class="nav-link">
                          <span class="sidebar-icon">
                            <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd"></path></svg>
                          </span>
                          <span class="sidebar-text">Generate Docs</span>
                        </a>
                      </li>
        
                      <li class="nav-item {% if 'page-' in segment %} active {% endif %}">
                        <span
                          class="nav-link  collapsed  d-flex justify-content-between align-items-center"
                          data-bs-toggle="collapse" data-bs-target="#submenu-pages">
                          <span>
                            <span class="sidebar-icon">
                              <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z" clip-rule="evenodd"></path><path d="M15 7h1a2 2 0 012 2v5.5a1.5 1.5 0 01-3 0V7z"></path></svg>
                            </span> 
                            <span class="sidebar-text">Docs Analyser</span>
                          </span>
                          <span class="link-arrow">
                            <svg class="icon icon-sm" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
                          </span>
                        </span>
                        <div class="multi-level collapse {% if 'page-' in segment %} show {% endif %} " role="list"
                          id="submenu-pages" aria-expanded="false">
                          <ul class="flex-column nav">
                            <li class="nav-item">
                              <a class="nav-link" href="/judgement _analyser.html">
                                <span class="sidebar-text">Judgement Analyser</span>
                              </a>
                            </li>
                            <li class="nav-item">
                              <a class="nav-link" href="/brief_analyser.html">
                                <span class="sidebar-text">Brief Analyser</span>
                              </a>
                            </li>
                          </ul>
                        </div>
                      </li>
                      <li role="separator" class="dropdown-divider mt-4 mb-3 border-gray-700"></li>
                      <li class="nav-item">
                        <a href="{% url 'logout' %}" class="nav-link">
                            <span class="sidebar-icon">
                                <svg class="icon icon-xs text-danger me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                                </svg> 
                            </span>
                            <span class="sidebar-text">Logout</span>
                        </a>
                      </li>  
        
                   
                    </ul>
                  </div>
                </nav>

    . layouts/
      . base-fullscreen.html
        Content:
        <!--
        
        =========================================================
        * Volt Free - Bootstrap 5 Dashboard
        =========================================================
        
        * Product Page: https://themesberg.com/product/admin-dashboard/volt-premium-bootstrap-5-dashboard
        * Copyright 2020 Themesberg (https://www.themesberg.com)
        * License (https://themesberg.com/licensing)
        
        * Designed and coded by https://themesberg.com
        
        =========================================================
        
        * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. Please contact us to request a removal.
        
        -->
        <!DOCTYPE html>
        <html lang="en">
        
        <head> 
            <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <!-- Primary Meta Tags -->
        
        <title>
            Django Volt Dashboard - {% block title %}{% endblock %} | AppSeed
        </title>
        
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="title" content="Volt Free Bootstrap Dashboard - Sign up page">
        <meta name="author" content="Themesberg">
        <meta name="description" content="Volt Pro is a Premium Bootstrap 5 Admin Dashboard featuring over 800 components, 10+ plugins and 20 example pages using Vanilla JS.">
        <meta name="keywords" content="bootstrap 5, bootstrap, bootstrap 5 admin dashboard, bootstrap 5 dashboard, bootstrap 5 charts, bootstrap 5 calendar, bootstrap 5 datepicker, bootstrap 5 tables, bootstrap 5 datatable, vanilla js datatable, themesberg, themesberg dashboard, themesberg admin dashboard" />
        <link rel="canonical" href="https://appseed.us/admin-dashboards/django-dashboard-volt">
        
        <!-- Open Graph / Facebook -->
        <meta property="og:type" content="website">
        <meta property="og:url" content="https://demo.themesberg.com/volt-pro">
        <meta property="og:title" content="Volt Free Bootstrap Dashboard - Sign up page">
        <meta property="og:description" content="Volt Pro is a Premium Bootstrap 5 Admin Dashboard featuring over 800 components, 10+ plugins and 20 example pages using Vanilla JS.">
        <meta property="og:image" content="https://themesberg.s3.us-east-2.amazonaws.com/public/products/volt-pro-bootstrap-5-dashboard/volt-pro-preview.jpg">
        
        <!-- Twitter -->
        <meta property="twitter:card" content="summary_large_image">
        <meta property="twitter:url" content="https://demo.themesberg.com/volt-pro">
        <meta property="twitter:title" content="Volt Free Bootstrap Dashboard - Sign up page">
        <meta property="twitter:description" content="Volt Pro is a Premium Bootstrap 5 Admin Dashboard featuring over 800 components, 10+ plugins and 20 example pages using Vanilla JS.">
        <meta property="twitter:image" content="https://themesberg.s3.us-east-2.amazonaws.com/public/products/volt-pro-bootstrap-5-dashboard/volt-pro-preview.jpg">
        
        <!-- Favicon -->
        <link rel="apple-touch-icon" sizes="120x120" href="{{ ASSETS_ROOT }}/img/favicon/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="{{ ASSETS_ROOT }}/img/favicon/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="{{ ASSETS_ROOT }}/img/favicon/favicon-16x16.png">
        <link rel="manifest" href="{{ ASSETS_ROOT }}/img/favicon/site.webmanifest">
        <link rel="mask-icon" href="{{ ASSETS_ROOT }}/img/favicon/safari-pinned-tab.svg" color="#ffffff">
        <meta name="msapplication-TileColor" content="#ffffff">
        <meta name="theme-color" content="#ffffff">
        
        <!-- FA Icons -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" 
              integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        
        <!-- Sweet Alert -->
        <link type="text/css" href="{{ ASSETS_ROOT }}/vendor/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
        
        <!-- Notyf -->
        <link type="text/css" href="{{ ASSETS_ROOT }}/vendor/notyf/notyf.min.css" rel="stylesheet">
        
        <!-- Volt CSS -->
        <link type="text/css" href="{{ ASSETS_ROOT }}/css/volt.css" rel="stylesheet">
        
        <!-- Specific Page JS goes HERE  -->    
        {% block stylesheets %}{% endblock stylesheets %}
        
        </head>
        <body>
        
            {% block content %}{% endblock content %}
        
            {% include 'includes/scripts.html' %}
        
            <!-- Specific Page JS goes HERE  -->
            {% block javascripts %}{% endblock javascripts %}  
        
        </body>
        </html>

      . base.html
        Content:
        <!--
        
        =========================================================
        * Volt Free - Bootstrap 5 Dashboard
        =========================================================
        
        * Product Page: https://themesberg.com/product/admin-dashboard/volt-bootstrap-5-dashboard
        * Copyright 2021 Themesberg (https://www.themesberg.com)
        * License (https://themesberg.com/licensing)
        
        * Designed and coded by https://themesberg.com
        
        =========================================================
        
        * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. Please contact us to request a removal.
        
        -->
        <!DOCTYPE html>
        
        <html lang="en">
        
        
        
        <head> 
        
        
            <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
          
        
        <title>
            {% block title %}{% endblock %} 
        </title>
        
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="title" content="Volt - Free Bootstrap 5 Dashboard">
        <meta name="author" content="Themesberg">
        <meta name="description" content="Volt Pro is a Premium Bootstrap 5 Admin Dashboard featuring over 800 components, 10+ plugins and 20 example pages using Vanilla JS.">
        <meta name="keywords" content="bootstrap 5, bootstrap, bootstrap 5 admin dashboard, bootstrap 5 dashboard, bootstrap 5 charts, bootstrap 5 calendar, bootstrap 5 datepicker, bootstrap 5 tables, bootstrap 5 datatable, vanilla js datatable, themesberg, themesberg dashboard, themesberg admin dashboard" />
        <link rel="canonical" href="https://appseed.us/admin-dashboards/django-dashboard-volt">
        
        <!-- Open Graph / Facebook -->
        <meta property="og:type" content="website">
        <meta property="og:url" content="https://demo.themesberg.com/volt-pro">
        <meta property="og:title" content="Volt - Free Bootstrap 5 Dashboard">
        <meta property="og:description" content="Volt Pro is a Premium Bootstrap 5 Admin Dashboard featuring over 800 components, 10+ plugins and 20 example pages using Vanilla JS.">
        <meta property="og:image" content="https://themesberg.s3.us-east-2.amazonaws.com/public/products/volt-pro-bootstrap-5-dashboard/volt-pro-preview.jpg">
        
        <!-- Twitter -->
        <meta property="twitter:card" content="summary_large_image">
        <meta property="twitter:url" content="https://demo.themesberg.com/volt-pro">
        <meta property="twitter:title" content="Volt - Free Bootstrap 5 Dashboard">
        <meta property="twitter:description" content="Volt Pro is a Premium Bootstrap 5 Admin Dashboard featuring over 800 components, 10+ plugins and 20 example pages using Vanilla JS.">
        <meta property="twitter:image" content="https://themesberg.s3.us-east-2.amazonaws.com/public/products/volt-pro-bootstrap-5-dashboard/volt-pro-preview.jpg">
        
        <!-- Favicon -->
        <link rel="apple-touch-icon" sizes="120x120" href="{{ ASSETS_ROOT }}/img/favicon/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="{{ ASSETS_ROOT }}/img/favicon/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="{{ ASSETS_ROOT }}/img/favicon/favicon-16x16.png">
        <link rel="manifest" href="{{ ASSETS_ROOT }}/img/favicon/site.webmanifest">
        <link rel="mask-icon" href="{{ ASSETS_ROOT }}/img/favicon/safari-pinned-tab.svg" color="#ffffff">
        <meta name="msapplication-TileColor" content="#ffffff">
        <meta name="theme-color" content="#ffffff">
        
        <link type="text/css" href="{{ ASSETS_ROOT }}/vendor/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
        
        <link type="text/css" href="{{ ASSETS_ROOT }}/vendor/notyf/notyf.min.css" rel="stylesheet">
        <link type="text/css" href="{{ ASSETS_ROOT }}/css/volt.css" rel="stylesheet">
        
        <!-- Specific Page JS goes HERE  -->    
        {% block stylesheets %}{% endblock stylesheets %}
        
        {% block extra_head %}
        
        {% endblock %}
        
        
        
        </head>
        <body>
          {% csrf_token %}
        
            {% include 'includes/sidebar.html' %}
            
            <main class="content">
        
              {% include 'includes/navigation.html' %}
        
              {% block content %}{% endblock content %} 
        
              {% include 'includes/settings-box.html' %}
        
              {% include 'includes/footer.html' %}
        
            </main>
        
          {% include 'includes/scripts.html' %}
            
            <!-- jQuery first, then Bootstrap JS -->
            <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/smooth-scroll/16.1.3/smooth-scroll.min.js" integrity="sha512-HYG9E+RmbXS7oy529Nk8byKFw5jqM3R1zzvoV2JnltsIGkK/AhZSzciYCNxDMOXEbYO9w6MJ6SpuYgm5PJPpeQ==" crossorigin="anonymous"></script>
            {% block javascripts %}
            
            
        
            {% endblock javascripts %}
              
        </body>
        </html>

    . meetings/
      . dashboard.html
        Content:
        {% extends "layouts/base.html" %}
        {% block title %}Meetings Dashboard{% endblock %}
        
        {% block content %}
        <div class="container mt-4">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Meetings Dashboard</h2>
                <a href="{% url 'meetings:meeting_create' %}" class="btn btn-primary">
                    <i class="fas fa-plus"></i> New Meeting
                </a>
            </div>
        
            <!-- Stats Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Meetings</h5>
                            <h2 class="mb-0">{{ stats.total_meetings }}</h2>
                            <small>Last 30 days</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title">Upcoming</h5>
                            <h2 class="mb-0">{{ stats.upcoming_count }}</h2>
                            <small>Scheduled meetings</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title">Completed</h5>
                            <h2 class="mb-0">{{ stats.completed_count }}</h2>
                            <small>Last 30 days</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-warning text-white">
                        <div class="card-body">
                            <h5 class="card-title">Cancelled</h5>
                            <h2 class="mb-0">{{ stats.cancelled_count }}</h2>
                            <small>Last 30 days</small>
                        </div>
                    </div>
                </div>
            </div>
        
            <div class="row">
                <!-- Left Column -->
                <div class="col-md-8">
                    <!-- Upcoming Meetings -->
                    <div class="card mb-4">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Upcoming Meetings</h5>
                            <a href="{% url 'meetings:meeting_list' %}?status=scheduled" class="btn btn-sm btn-outline-primary">View All</a>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Date & Time</th>
                                            <th>Mode</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for meeting in upcoming_meetings %}
                                        <tr>
                                            <td>{{ meeting.title }}</td>
                                            <td>
                                                {{ meeting.date|date:"M d, Y" }}<br>
                                                <small class="text-muted">
                                                    {{ meeting.start_time|time:"g:i A" }} - {{ meeting.end_time|time:"g:i A" }}
                                                </small>
                                            </td>
                                            <td>
                                                <span class="badge bg-{{ meeting.meeting_mode|yesno:'primary,secondary' }}">
                                                    {{ meeting.get_meeting_mode_display }}
                                                </span>
                                            </td>
                                            <td>
                                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                        {% empty %}
                                        <tr>
                                            <td colspan="4" class="text-center">No upcoming meetings</td>
                                        </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
        
                    <!-- Recent Meetings -->
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Recent Meetings</h5>
                            <a href="{% url 'meetings:meeting_list' %}" class="btn btn-sm btn-outline-primary">View All</a>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Date</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for meeting in recent_meetings %}
                                        <tr>
                                            <td>{{ meeting.title }}</td>
                                            <td>{{ meeting.date|date:"M d, Y" }}</td>
                                            <td>
                                                <span class="badge bg-{{ meeting.status|yesno:'success,secondary' }}">
                                                    {{ meeting.get_status_display }}
                                                </span>
                                            </td>
                                            <td>
                                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                        {% empty %}
                                        <tr>
                                            <td colspan="4" class="text-center">No recent meetings</td>
                                        </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
        
                <!-- Right Column -->
                <div class="col-md-4">
                    <!-- My Meetings -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">My Meetings</h5>
                        </div>
                        <div class="card-body">
                            {% for meeting in my_meetings %}
                            <div class="d-flex align-items-center mb-3">
                                <div class="flex-shrink-0">
                                    <div class="bg-light rounded p-2">
                                        <i class="fas fa-calendar-alt text-primary"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h6 class="mb-0">{{ meeting.title }}</h6>
                                    <small class="text-muted">
                                        {{ meeting.date|date:"M d, Y" }} at {{ meeting.start_time|time:"g:i A" }}
                                    </small>
                                </div>
                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-arrow-right"></i>
                                </a>
                            </div>
                            {% empty %}
                            <p class="text-center text-muted">No upcoming meetings for you</p>
                            {% endfor %}
                        </div>
                    </div>
        
                    <!-- Meeting Types Distribution -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Meeting Types</h5>
                        </div>
                        <div class="card-body">
                            {% for type in meetings_by_type %}
                            <div class="mb-3">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>{{ type.meeting_type|title }}</span>
                                    <span class="fw-bold">{{ type.count }}</span>
                                </div>
                                <div class="progress" style="height: 6px;">
                                    <div 
                                        class="progress-bar" 
                                        role="progressbar" 
                                        style="width: {% widthratio type.count stats.total_meetings 100 %}%"
                                        aria-valuenow="{% widthratio type.count stats.total_meetings 100 %}"
                                        aria-valuemin="0" 
                                        aria-valuemax="100">
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
        
                    <!-- Meeting Modes Distribution -->
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Meeting Modes</h5>
                        </div>
                        <div class="card-body">
                            {% for mode in meetings_by_mode %}
                            <div class="mb-3">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>{{ mode.meeting_mode|title }}</span>
                                    <span class="fw-bold">{{ mode.count }}</span>
                                </div>
                                <div class="progress" style="height: 6px;">
                                    <div 
                                        class="progress-bar bg-success" 
                                        role="progressbar" 
                                        style="width: {% widthratio mode.count stats.total_meetings 100 %}%"
                                        aria-valuenow="{% widthratio mode.count stats.total_meetings 100 %}"
                                        aria-valuemin="0" 
                                        aria-valuemax="100">
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endblock content %}

      . director_dashboard.html
        Content:
        {% extends "layouts/base.html" %}
        {% block title %}Director Dashboard{% endblock %}
        
        {% block content %}
        <div class="container mt-4">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Director's Dashboard</h2>
                <a href="{% url 'meetings:meeting_create' %}" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Schedule New Meeting
                </a>
            </div>
        
            <!-- Overall Stats -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Meetings</h5>
                            <h2 class="mb-0">{{ total_meetings }}</h2>
                            <small>Across all departments</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title">Upcoming Meetings</h5>
                            <h2 class="mb-0">{{ total_upcoming }}</h2>
                            <small>Next 30 days</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Participants</h5>
                            <h2 class="mb-0">{{ total_participants }}</h2>
                            <small>All meetings</small>
                        </div>
                    </div>
                </div>
            </div>
        
            <!-- Director's Meetings -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Your Upcoming Meetings</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Department</th>
                                    <th>Date & Time</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for meeting in director_meetings %}
                                <tr>
                                    <td>{{ meeting.title }}</td>
                                    <td>{{ meeting.department.name }}</td>
                                    <td>
                                        {{ meeting.date|date:"M d, Y" }}<br>
                                        <small class="text-muted">
                                            {{ meeting.start_time|time:"g:i A" }} - {{ meeting.end_time|time:"g:i A" }}
                                        </small>
                                    </td>
                                    <td>
                                        <span class="badge bg-{{ meeting.status|yesno:'success,warning' }}">
                                            {{ meeting.get_status_display }}
                                        </span>
                                    </td>
                                    <td>
                                        <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                                {% empty %}
                                <tr>
                                    <td colspan="5" class="text-center">No upcoming meetings</td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        
            <!-- Department Meetings -->
            {% for department, data in dept_meetings.items %}
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">{{ department.name }}</h5>
                    <div>
                        <span class="badge bg-primary">{{ data.stats.total }} Total</span>
                        <span class="badge bg-success">{{ data.stats.scheduled }} Upcoming</span>
                        <span class="badge bg-info">{{ data.stats.with_director }} With Director</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Upcoming Meetings</h6>
                            <div class="list-group">
                                {% for meeting in data.upcoming %}
                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="list-group-item list-group-item-action">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">{{ meeting.title }}</h6>
                                        <small>{{ meeting.date|date:"M d, Y" }}</small>
                                    </div>
                                    <small class="text-muted">
                                        {{ meeting.start_time|time:"g:i A" }} - {{ meeting.end_time|time:"g:i A" }}
                                    </small>
                                </a>
                                {% empty %}
                                <p class="text-muted">No upcoming meetings</p>
                                {% endfor %}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h6>Recent Meetings</h6>
                            <div class="list-group">
                                {% for meeting in data.recent %}
                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="list-group-item list-group-item-action">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">{{ meeting.title }}</h6>
                                        <small>{{ meeting.date|date:"M d, Y" }}</small>
                                    </div>
                                    <small class="text-muted">{{ meeting.get_status_display }}</small>
                                </a>
                                {% empty %}
                                <p class="text-muted">No recent meetings</p>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {% endfor %}
        </div>
        {% endblock content %}

      . meeting_detail.html
        Content:
        {# templates/meetings/meeting_detail.html #}
        {% extends "layouts/base.html" %}
        
        {% block title %}{{ meeting.title }}{% endblock %}
        
        {% block content %}
        <div class="container mt-4">
            <div class="card">
                <div class="card-header bg-[#26443c] text-white d-flex justify-content-between align-items-center">
                    <h2 class="h4 mb-0">{{ meeting.title }}</h2>
                    {% if can_edit %}
                    <div>
                        <a href="{% url 'meeting_update' meeting.pk %}" class="btn btn-light btn-sm">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a href="{% url 'meeting_delete' meeting.pk %}" class="btn btn-danger btn-sm">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    </div>
                    {% endif %}
                </div>
                
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5 class="mb-3">Meeting Details</h5>
                            <table class="table">
                                <tr>
                                    <th>Department:</th>
                                    <td>{{ meeting.department.name }}</td>
                                </tr>
                                <tr>
                                    <th>Date:</th>
                                    <td>{{ meeting.date }}</td>
                                </tr>
                                <tr>
                                    <th>Time:</th>
                                    <td>{{ meeting.start_time }} - {{ meeting.end_time }}</td>
                                </tr>
                                <tr>
                                    <th>Type:</th>
                                    <td>{{ meeting.get_meeting_type_display }}</td>
                                </tr>
                                <tr>
                                    <th>Status:</th>
                                    <td>
                                        <span class="badge {% if meeting.status == 'completed' %}bg-success{% elif meeting.status == 'cancelled' %}bg-danger{% else %}bg-primary{% endif %}">
                                            {{ meeting.get_status_display }}
                                        </span>
                                    </td>
                                </tr>
                            </table>
                        </div>
        
                        <div class="col-md-6">
                            <h5 class="mb-3">Meeting Access</h5>
                            <div class="card bg-light">
                                <div class="card-body">
                                    <p class="mb-2">
                                        <strong>Mode:</strong> 
                                        {{ meeting.get_meeting_mode_display }}
                                    </p>
        
                                    {% if meeting.physical_location %}
                                    <div class="mb-3">
                                        <strong>Physical Location:</strong><br>
                                        {{ meeting.physical_location }}
                                    </div>
                                    {% endif %}
        
                                    {% if meeting.meeting_mode in 'virtual,hybrid'|split:',' %}
                                    <div class="virtual-meeting-info">
                                        <strong>Virtual Meeting Details:</strong>
                                        <div class="mt-2">
                                            <p class="mb-1">
                                                <strong>Platform:</strong> 
                                                {{ meeting.get_virtual_platform_display }}
                                            </p>
                                            {% if meeting.virtual_meeting_url %}
                                            <p class="mb-1">
                                                <strong>Join URL:</strong><br>
                                                <a href="{{ meeting.virtual_meeting_url }}" target="_blank" class="btn btn-sm btn-primary">
                                                    <i class="fas fa-video"></i> Join Meeting
                                                </a>
                                            </p>
                                            {% endif %}
                                            {% if meeting.virtual_meeting_id %}
                                            <p class="mb-1">
                                                <strong>Meeting ID:</strong> 
                                                {{ meeting.virtual_meeting_id }}
                                            </p>
                                            {% endif %}
                                            {% if meeting.virtual_meeting_password %}
                                            <p class="mb-1">
                                                <strong>Password:</strong> 
                                                {{ meeting.virtual_meeting_password }}
                                            </p>
                                            {% endif %}
                                        </div>
                                    </div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
        
                    <div class="row mt-4">
                        <div class="col-12">
                            <h5>Agenda</h5>
                            <div class="card bg-light">
                                <div class="card-body">
                                    {{ meeting.agenda|linebreaks }}
                                </div>
                            </div>
                        </div>
                    </div>
        
                    <div class="row mt-4">
                        <div class="col-12">
                            <h5>Participants</h5>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Status</th>
                                            <th>Response Date</th>
                                            <th>Attended</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for participant in participants %}
                                        <tr>
                                            <td>{{ participant.participant.get_full_name }}</td>
                                            <td>
                                                <span class="badge {% if participant.status == 'accepted' %}bg-success{% elif participant.status == 'declined' %}bg-danger{% else %}bg-warning{% endif %}">
                                                    {{ participant.get_status_display }}
                                                </span>
                                            </td>
                                            <td>{{ participant.response_timestamp|default:"-" }}</td>
                                            <td>
                                                {% if participant.attended %}
                                                <i class="fas fa-check text-success"></i>
                                                {% else %}
                                                <i class="fas fa-times text-danger"></i>
                                                {% endif %}
                                            </td>
                                        </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
        
                    {% if meeting.status == 'completed' and meeting.minutes %}
                    <div class="row mt-4">
                        <div class="col-12">
                            <h5>Minutes</h5>
                            <div class="card bg-light">
                                <div class="card-body">
                                    {{ meeting.minutes|linebreaks }}
                                </div>
                            </div>
                        </div>
                    </div>
                    {% endif %}
        
                    {% if meeting.has_recording %}
                    <div class="row mt-4">
                        <div class="col-12">
                            <h5>Recording</h5>
                            <a href="{{ meeting.recording_url }}" target="_blank" class="btn btn-primary">
                                <i class="fas fa-play"></i> View Recording
                            </a>
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>
        {% endblock %}

      . meeting_form.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %}
            {% if form.instance.pk %}Edit Meeting{% else %}New Meeting{% endif %}
        {% endblock %}
        
        {% block content %}
        <div class="container mt-4">
            <div class="row justify-content-center">
                <div class="col-12 col-lg-10">
                    <!-- Back button -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <a href="{% url 'meetings:dashboard' %}" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-arrow-left"></i> Back to Dashboard
                        </a>
                    </div>
        
                    <div class="card border-0 shadow">
                        <div class="card-header bg-primary text-white">
                            <h2 class="h4 mb-0">
                                {% if form.instance.pk %}
                                    Edit Meeting: {{ form.instance.title }}
                                {% else %}
                                    Schedule New Meeting
                                {% endif %}
                            </h2>
                        </div>
                        <div class="card-body">
                            <form method="post" class="needs-validation" novalidate enctype="multipart/form-data">
                                {% csrf_token %}
        
                                {% if form.non_field_errors %}
                                <div class="alert alert-danger">
                                    {% for error in form.non_field_errors %}
                                        {{ error }}
                                    {% endfor %}
                                </div>
                                {% endif %}
        
                                <!-- Basic Information -->
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h5 class="mb-3">Basic Information</h5>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label for="{{ form.title.id_for_label }}" class="form-label">Title*</label>
                                        {{ form.title }}
                                        {% if form.title.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.title.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.department.id_for_label }}" class="form-label">Department*</label>
                                        {{ form.department }}
                                        {% if form.department.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.department.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.meeting_type.id_for_label }}" class="form-label">Meeting Type*</label>
                                        {{ form.meeting_type }}
                                        {% if form.meeting_type.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.meeting_type.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
        
                                <!-- Date and Time -->
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h5 class="mb-3">Date and Time</h5>
                                    </div>
                                    <div class="col-md-4 mb-3">
                                        <label for="{{ form.date.id_for_label }}" class="form-label">Date*</label>
                                        {{ form.date }}
                                        {% if form.date.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.date.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-4 mb-3">
                                        <label for="{{ form.start_time.id_for_label }}" class="form-label">Start Time*</label>
                                        {{ form.start_time }}
                                        {% if form.start_time.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.start_time.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-4 mb-3">
                                        <label for="{{ form.end_time.id_for_label }}" class="form-label">End Time*</label>
                                        {{ form.end_time }}
                                        {% if form.end_time.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.end_time.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
        
                                <!-- Location -->
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h5 class="mb-3">Location</h5>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.meeting_mode.id_for_label }}" class="form-label">Meeting Mode*</label>
                                        {{ form.meeting_mode }}
                                        {% if form.meeting_mode.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.meeting_mode.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.physical_location.id_for_label }}" class="form-label">Physical Location</label>
                                        {{ form.physical_location }}
                                        {% if form.physical_location.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.physical_location.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
        
                                <!-- Virtual Meeting Details -->
                                <div class="row mb-4" id="virtualMeetingDetails">
                                    <div class="col-12">
                                        <h5 class="mb-3">Virtual Meeting Details</h5>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.virtual_platform.id_for_label }}" class="form-label">Platform</label>
                                        {{ form.virtual_platform }}
                                        {% if form.virtual_platform.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.virtual_platform.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.virtual_meeting_url.id_for_label }}" class="form-label">Meeting URL</label>
                                        {{ form.virtual_meeting_url }}
                                        {% if form.virtual_meeting_url.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.virtual_meeting_url.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.virtual_meeting_id.id_for_label }}" class="form-label">Meeting ID</label>
                                        {{ form.virtual_meeting_id }}
                                        {% if form.virtual_meeting_id.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.virtual_meeting_id.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="{{ form.virtual_meeting_password.id_for_label }}" class="form-label">Meeting Password</label>
                                        {{ form.virtual_meeting_password }}
                                        {% if form.virtual_meeting_password.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.virtual_meeting_password.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
        
                                <!-- Agenda -->
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h5 class="mb-3">Agenda</h5>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label for="{{ form.agenda.id_for_label }}" class="form-label">Meeting Agenda*</label>
                                        {{ form.agenda }}
                                        {% if form.agenda.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.agenda.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
        
                                <!-- Participants -->
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h5 class="mb-3">Participants</h5>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label for="{{ form.participants.id_for_label }}" class="form-label">Select Participants</label>
                                        {{ form.participants }}
                                        {% if form.participants.errors %}
                                            <div class="invalid-feedback d-block">
                                                {{ form.participants.errors|join:", " }}
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
        
                                <!-- Documents -->
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h5 class="mb-3">Meeting Documents</h5>
                                    </div>
                                    <div class="col-12">
                                        <div id="documents-container">
                                            <!-- Initial document form -->
                                            <div class="document-form mb-3 p-3 border rounded bg-light">
                                                <div class="row">
                                                    <div class="col-md-4 mb-3">
                                                        <label class="form-label">Document Type</label>
                                                        <select name="document_type[]" class="form-control">
                                                            <option value="agenda">Agenda</option>
                                                            <option value="minutes">Minutes</option>
                                                            <option value="presentation">Presentation</option>
                                                            <option value="report">Report</option>
                                                            <option value="other">Other</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-md-4 mb-3">
                                                        <label class="form-label">File</label>
                                                        <input type="file" name="document_file[]" class="form-control" required>
                                                    </div>
                                                    <div class="col-md-4 mb-3">
                                                        <label class="form-label">Notes</label>
                                                        <textarea name="document_notes[]" class="form-control" rows="1" 
                                                            placeholder="Optional notes"></textarea>
                                                    </div>
                                                </div>
                                                <button type="button" class="btn btn-sm btn-danger remove-document" style="display: none;">
                                                    <i class="fas fa-trash"></i> Remove
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <button type="button" class="btn btn-secondary" id="add-document">
                                            <i class="fas fa-plus"></i> Add Another Document
                                        </button>
                                    </div>
                                </div>
        
                                <div class="d-flex justify-content-between">
                                    <a href="{% url 'meetings:dashboard' %}" class="btn btn-outline-primary">
                                        <i class="fas fa-arrow-left me-1"></i> Cancel
                                    </a>
                                    <button type="submit" class="btn btn-primary">
                                        {% if form.instance.pk %}
                                            <i class="fas fa-save me-1"></i> Update Meeting
                                        {% else %}
                                            <i class="fas fa-plus me-1"></i> Create Meeting
                                        {% endif %}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        {% block javascripts %}
        <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle meeting mode toggle
            const meetingModeSelect = document.getElementById('{{ form.meeting_mode.id_for_label }}');
            const virtualDetailsDiv = document.getElementById('virtualMeetingDetails');
            
            function toggleVirtualDetails() {
                if (meetingModeSelect.value === 'physical') {
                    virtualDetailsDiv.style.display = 'none';
                } else {
                    virtualDetailsDiv.style.display = 'flex';
                }
            }
            
            meetingModeSelect.addEventListener('change', toggleVirtualDetails);
            toggleVirtualDetails(); // Call once on page load
        
            // Handle document forms
            const container = document.getElementById('documents-container');
            const addButton = document.getElementById('add-document');
            
            addButton.addEventListener('click', function() {
                // Clone the first document form
                const newForm = container.querySelector('.document-form').cloneNode(true);
                
                // Clear input values
                newForm.querySelectorAll('input, textarea').forEach(input => input.value = '');
                
                // Show remove button
                newForm.querySelector('.remove-document').style.display = 'block';
                
                // Add event listener to remove button
                newForm.querySelector('.remove-document').addEventListener('click', function() {
                    newForm.remove();
                });
                
                // Append new form
                container.appendChild(newForm);
            });
        
            // Initialize date and time pickers if needed
            if (typeof flatpickr !== 'undefined') {
                flatpickr('input[type="date"]', {
                    dateFormat: 'Y-m-d',
                    minDate: 'today'
                });
                
                flatpickr('input[type="time"]', {
                    enableTime: true,
                    noCalendar: true,
                    dateFormat: "H:i",
                    time_24hr: true
                });
            }
        });
        </script>
        {% endblock %}
        {% endblock content %}

      . meeting_list.html
        Content:
        {% extends "layouts/base.html" %}
        {% block title %}Meetings Dashboard{% endblock %}
        
        {% block content %}
        <div class="container mt-4">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Meetings Dashboard</h2>
                <a href="{% url 'meetings:meeting_create' %}" class="btn btn-primary">
                    <i class="fas fa-plus"></i> New Meeting
                </a>
            </div>
        
            <!-- Stats Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Meetings</h5>
                            <h2 class="mb-0">{{ stats.total_meetings }}</h2>
                            <small>Last 30 days</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title">Upcoming</h5>
                            <h2 class="mb-0">{{ stats.upcoming_count }}</h2>
                            <small>Scheduled meetings</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title">Completed</h5>
                            <h2 class="mb-0">{{ stats.completed_count }}</h2>
                            <small>Last 30 days</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-warning text-white">
                        <div class="card-body">
                            <h5 class="card-title">Cancelled</h5>
                            <h2 class="mb-0">{{ stats.cancelled_count }}</h2>
                            <small>Last 30 days</small>
                        </div>
                    </div>
                </div>
            </div>
        
            <div class="row">
                <!-- Left Column -->
                <div class="col-md-8">
                    <!-- Upcoming Meetings -->
                    <div class="card mb-4">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Upcoming Meetings</h5>
                            <a href="{% url 'meetings:meeting_list' %}?status=scheduled" class="btn btn-sm btn-outline-primary">View All</a>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Date & Time</th>
                                            <th>Mode</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for meeting in upcoming_meetings %}
                                        <tr>
                                            <td>{{ meeting.title }}</td>
                                            <td>
                                                {{ meeting.date|date:"M d, Y" }}<br>
                                                <small class="text-muted">
                                                    {{ meeting.start_time|time:"g:i A" }} - {{ meeting.end_time|time:"g:i A" }}
                                                </small>
                                            </td>
                                            <td>
                                                <span class="badge bg-{{ meeting.meeting_mode|yesno:'primary,secondary' }}">
                                                    {{ meeting.get_meeting_mode_display }}
                                                </span>
                                            </td>
                                            <td>
                                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                        {% empty %}
                                        <tr>
                                            <td colspan="4" class="text-center">No upcoming meetings</td>
                                        </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
        
                    <!-- Recent Meetings -->
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Recent Meetings</h5>
                            <a href="{% url 'meetings:meeting_list' %}" class="btn btn-sm btn-outline-primary">View All</a>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Date</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for meeting in recent_meetings %}
                                        <tr>
                                            <td>{{ meeting.title }}</td>
                                            <td>{{ meeting.date|date:"M d, Y" }}</td>
                                            <td>
                                                <span class="badge bg-{{ meeting.status|yesno:'success,secondary' }}">
                                                    {{ meeting.get_status_display }}
                                                </span>
                                            </td>
                                            <td>
                                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                        {% empty %}
                                        <tr>
                                            <td colspan="4" class="text-center">No recent meetings</td>
                                        </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
        
                <!-- Right Column -->
                <div class="col-md-4">
                    <!-- My Meetings -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">My Meetings</h5>
                        </div>
                        <div class="card-body">
                            {% for meeting in my_meetings %}
                            <div class="d-flex align-items-center mb-3">
                                <div class="flex-shrink-0">
                                    <div class="bg-light rounded p-2">
                                        <i class="fas fa-calendar-alt text-primary"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h6 class="mb-0">{{ meeting.title }}</h6>
                                    <small class="text-muted">
                                        {{ meeting.date|date:"M d, Y" }} at {{ meeting.start_time|time:"g:i A" }}
                                    </small>
                                </div>
                                <a href="{% url 'meetings:meeting_detail' meeting.pk %}" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-arrow-right"></i>
                                </a>
                            </div>
                            {% empty %}
                            <p class="text-center text-muted">No upcoming meetings for you</p>
                            {% endfor %}
                        </div>
                    </div>
        
                    <!-- Meeting Types Distribution -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Meeting Types</h5>
                        </div>
                        <div class="card-body">
                            {% for type in meetings_by_type %}
                            <div class="mb-3">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>{{ type.meeting_type|title }}</span>
                                    <span class="fw-bold">{{ type.count }}</span>
                                </div>
                                <div class="progress" style="height: 6px;">
                                    <div 
                                        class="progress-bar" 
                                        role="progressbar" 
                                        style="width: {% widthratio type.count stats.total_meetings 100 %}%"
                                        aria-valuenow="{% widthratio type.count stats.total_meetings 100 %}"
                                        aria-valuemin="0" 
                                        aria-valuemax="100">
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
        
                    <!-- Meeting Modes Distribution -->
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Meeting Modes</h5>
                        </div>
                        <div class="card-body">
                            {% for mode in meetings_by_mode %}
                            <div class="mb-3">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>{{ mode.meeting_mode|title }}</span>
                                    <span class="fw-bold">{{ mode.count }}</span>
                                </div>
                                <div class="progress" style="height: 6px;">
                                    <div 
                                        class="progress-bar bg-success" 
                                        role="progressbar" 
                                        style="width: {% widthratio mode.count stats.total_meetings 100 %}%"
                                        aria-valuenow="{% widthratio mode.count stats.total_meetings 100 %}"
                                        aria-valuemin="0" 
                                        aria-valuemax="100">
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endblock content %}

    . memos/
      . dashboard.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Department Dashboard {% endblock %}
        
        {% block content %}
        
        <div class="container mt-4">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Department Memo Dashboard</h2>
                <a href="{% url 'memos:memo_create' %}" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create New Memo
                </a>
            </div>
        
            <!-- Overall Stats -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title text-white">Total Memos</h5>
                            <h2 class="mb-0">{{ total_memos }}</h2>
                            <small>Across all departments</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title
                            text-white">Pending Memos</h5>
                            <h2 class="mb-0">{{ total_pending }}</h2>
                            <small>Not yet approved</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title text-white">Approved Memos</h5>
                            <h2 class="mb-0">{{ total_approved }}</h2>
                            <small>Ready for distribution</small>
                        </div>
                    </div>
                </div>
            </div>
        
            <!-- Department Memos -->
        
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Your Memos</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Date Created</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for memo in memos %}
                                <tr>
                                    <td>{{ memo.title }}</td>
                                    <td>{{ memo.created_at }}</td>
                                    <td>
                                        {% if memo.status == 'pending' %}
                                        <span class="badge badge-warning">Pending</span>
                                        {% else %}
                                        <span class="badge badge-success">Approved</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <a href="{% url 'memos:memo_detail' memo.id %}" class="btn btn-sm btn-info">
                                            <i class="fas fa-eye text-white"></i>
                                        </a>
                                        <a href="{% url 'memos:memo_update' memo.id %}" class="btn btn-sm btn-primary">
                                            <i class="fas fa-edit text-white"></i>
                                        </a>
                                        <a href="{% url 'memos:memo_delete' memo.id %}" class="btn btn-sm btn-danger">
                                            <i class="fas fa-trash-alt text-white"></i>
                                        </a>
        
                                    </td>
        
                                </tr>
        
                                {% endfor %}
        
                            </tbody>
        
                        </table>
        
                    </div>
        
                </div>
        
            </div>
        
        </div>
        
        {% endblock %}
        
        
        

      . memo_form.html
        Content:


      . my_memos.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} My Memos {% endblock %}
        
        {% block content %}
        <div class="container mt-4">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">My Memos</h2>
                <a href="{% url 'memos:memo_create' %}" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create New Memo
                </a>
            </div>
        
            <!-- Overall Stats -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title text-white">Total Memos</h5>
                            <h2 class="mb-0">{{ total_memos }}</h2>
                            <small>Across all departments</small>
                        </div>
        
                    </div>
        
                </div>
        
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title text-white">Pending Memos</h5>
                            <h2 class="mb-0">{{ total_pending }}</h2>
                            <small>Not yet approved</small>
                        </div>
                    </div>
                </div>
        
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title text-white">Approved Memos</h5>
                            <h2 class="mb-0">{{ total_approved }}</h2>
                            <small>Ready for distribution</small>
                        </div>
                    </div>
                </div>
            </div>
        
            <!-- Department Memos -->
        
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Your Memos</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Date Created</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for memo in memos %}
                                <tr>
                                    <td>{{ memo.title }}</td>
                                    <td>{{ memo.created_at }}</td>
                                    <td>
                                        {% if memo.status == 'pending' %}
                                        <span class="badge badge-warning">Pending</span>
                                        {% else %}
                                        <span class="badge badge-success">Approved</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <a href="{% url 'memos:memo_detail' memo.id %}" class="btn btn-sm btn-primary">
                                            <i class="fas fa-eye text-white"></i>
                                        </a>
                                        <a href="{% url 'memos:memo_update' memo.id %}" class="btn btn-sm btn-info">
                                            <i class="fas fa-edit text-white"></i>
                                        </a>
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        {% endblock %}

    . statistics/
      . case_summary.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% load unicorn %}
        
        {% block extra_head %}
        
        {% unicorn_scripts %}
        
        {% endblock extra_head %}
        
        {% block title %} DCRT SUMMARY {% endblock title %}
        
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
        
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Column Summary</h2>
                <a href="{% url 'statistics:unit_division_months' unit_rank.id financial_year.id financial_quarter.id unit.id division.id  %}" class="btn btn-primary btn-sm">
                  <i class="fas fa-arrow-left"></i> Go Back
                </a> 
               
             </div>
        
            <h3> {{ unit.name }} in the Month  {{ month.name }}</h3>
        
            <h4> {{ unit_rank.name }} -  FY {{  financial_year.name }} - {{ financial_quarter.name }} </h4>
        
        
            {% unicorn 'case_summary' unit_rank financial_year financial_quarter unit division month %}
        
        
        
         
        
        </div>
        
        {% endblock content %}

      . home.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% load unicorn %}
        
        {% block extra_head %}
        
        {% unicorn_scripts %}
        
        {% endblock extra_head %}
        
        {% block title %} Dashboard {% endblock %}
        
        
        {% block content %}
        
        
        {% unicorn 'dashboard' %}
        
        
        
        
        {% endblock content %}

      . monthly_unit_duplicate_data.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Duplicate Records </h2>
        
        
        {{ duplicate_cases }}
        
        
            
        
        {{duplicate_cases_group}}
        
        
        
        
        
          
        
        
        </div>
        
        {% endblock content %}

      . monthly_unit_incomplete_data.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Incomplete Data </h2>
        
        
        
            
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . monthly_unit_matters_handled.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Matters Handled  </h2>
        
        
        
            
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . monthly_unit_missing_data.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Missing Data </h2>
        
        
        
            
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . monthly_unit_outliers.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Outliers  </h2>
        
        
        
            
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . monthly_unit_registered_cases.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Monthly Registered </h2>
        
        
          {{ registered_cases }}
        
            <h1>Registered Cases Grouped</h1>
            
           <!-- loop through the registered cases grouped by case type -->
           {% for case_type, case_type_df in registered_cases_grouped %}
            <h2>{{ case_type }}</h2>
            {{ case_type_df }}
           {% endfor %}
        
        
        
            
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . monthly_unit_resolved_cases.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Matters Resolved </h2>
        
        
        
            
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . rank.html
        Content:
        {% extends "layouts/base.html" %}
        
        
        {% load unicorn %}
        
        <!-- extra_head -->
        
        {% block extra_head %}
        
        {% unicorn_scripts %}
        
        {% endblock extra_head %}
        
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Ranks </h2>
        
            <form method="post" enctype="multipart/form-data"  >    
                {% csrf_token %}
                
                <p class="lead">Select court rank, financial year, and quarter  to proceed.</p>
        
                <!-- Using selection dropdowns for court rank, financial year, and quarter . court rank dropdown should be disabled if financial year is not selected  and fy dropdown should be disabled if court rank is not selected -->
        
                <div class="form-group">
                    <label for="court_rank">Court Rank</label>
                    <select class="form-control" id="court_rank" name="court_rank" unicorn:change="changeCourtRank" unicorn:model="court_rank">
                        <option value="">Select Court Rank</option>
                        <option value="Supreme Court">Supreme Court</option>
                        <option value="High Court">High Court</option>
                        <option value="District Court">District Court</option>
                    </select>
                </div>
        
        
                <div class="form-group">
                    <label for="financial_year">Financial Year</label>
                    <select class="form-control" id="financial_year" name="financial_year" unicorn:change="changeFinancialYear" unicorn:model="financial_year" unicorn:disabled="!court_rank">
                        <option value="">Select Financial Year</option>
                        <option value="2019-2020">2019-2020</option>
                        <option value="2020-2021">2020-2021</option>
                        <option value="2021-2022">2021-2022</option>
                    </select>
        
                </div>
        
        
                <div class="form-group">
                    <label for="quarter">Quarter</label>
                    <select class="form-control" id="quarter" name="quarter" unicorn:model="quarter" unicorn:change="changeQuarter" unicorn:disabled="!financial_year">
                        <option value="">Select Quarter</option>
                        <option value="Q1">Q1</option>
                        <option value="Q2">Q2</option>
                        <option value="Q3">Q3</option>
                        <option value="Q4">Q4</option>
                    </select>
        
                </div>
        
        
                <!-- link as button to proceed to rank_units page -->
        
        
                <a href="{% url 'rank_units' %}" class="btn btn-primary">Proceed</a>
        
            </form>
        
        
        
        <!-- index.html -->
        {% unicorn 'hello-world' "Hello" name="World" %}
        
        
        
        
        </div>
        
        {% endblock content %}

      . rank_unit_month.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Monthly Report </h2>
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . rank_unit_months.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} List of Months {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
          <style>
            /* Add your custom styles here */
          </style>
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4">List of Months</h2>
        
            <h3> {{ unit.name }} </h3>
        
           <h3> {{ unit_rank.name }} -  FY {{  financial_year.name }} - {{ financial_quarter.name }} </h3>
        
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">
        
            <!-- table of  months in a year  from context -->
        
                                <table class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Month</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for month in months %}
                                        <tr>
                                            <td>{{ month.name }}</td>
                                            <td>
                                                <!-- upload_unit_monthly_dcrt_excel -->
                                                <a href="{% url 'statistics:upload_unit_monthly_dcrt_excel' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-sm btn-primary">Upload Monthly DCRT Excel</a>
                                            </td>
                                        </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
            
          
              
          
          
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        {% endblock content %}

      . rank_units.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> List of Courts {{ unit_rank.name }} -  FY {{  financial_year.name }} - FQ {{ financial_quarter.name }} </h2>
        
            <!-- table to list to list  units . units context variable is passed from views.py -->
        
            <table class="table table-striped table-bordered table-hover table-sm">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Unit Name</th>
                        <th scope="col">FY Statistics</th>
                        <th scope="col">Quarter Statistics</th>
                        <th scope="col">Monthly Statistics</th>
                    </tr>
                </thead>
                <tbody>
                    {% for court in units %}
                    <tr>
                        <td>{{ court.name }}</td>
        
                        <td>
                            <!--statistics:unit_division_fy-->
                            <a href="{% url 'statistics:unit_division_fy' unit_rank.id financial_year.id financial_quarter.id court.id court.id  %}" class="btn btn-sm btn-outline-primary"> Go to FY Statistics </a>
                        </td>
        
                        <td>
                            <!--statistics:unit_division_quarters-->
                            <a href="{% url 'statistics:unit_division_quarters' unit_rank.id financial_year.id financial_quarter.id court.id court.id  %}" class="btn btn-sm btn-outline-primary"> Go to Quarter Statistics </a>
                         </td>
                        <td>
                            <!--statistics:unit_division_months-->
                            <a href="{% url 'statistics:unit_division_months' unit_rank.id financial_year.id financial_quarter.id court.id court.id  %}" class="btn btn-sm btn-outline-primary"> Go to Monthly Statistics </a>
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
        
            </table>
        
        
        
        
        
            
        
        
        
        
        
        
        </div>
        
        {% endblock content %}

      . unit_division_quarters.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block title %} Dashboard {% endblock %}
        
        {% block stylesheets %}
          <!-- Specific Page CSS goes HERE -->
        {% endblock stylesheets %}
        
        {% block content %}
        
        <div class="container mt-2" style="min-height: 100vh; background-color: #f8f9fa;">
            <h2 class="mb-4"> Unit Quarterly Report </h2>
        
           
        
        
        
          
        
        
        </div>
        
        {% endblock content %}

      . upload_unit_monthly_dcrt_excel.html
        Content:
        {% extends "layouts/base.html" %}
        
        {% block stylesheets %}
        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
        
        <!-- Font Awesome -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
        
        {% endblock %}
        
        {% block content %}
        
        <div class="container my-5">
        
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Dashboard</h2>
            <a href="{% url 'statistics:unit_division_months' unit_rank.id financial_year.id financial_quarter.id unit.id division.id  %}" class="btn btn-primary btn-sm">
              <i class="fas fa-arrow-left"></i> Go Back
            </a> 
           
          </div>
        
          <h3>{{ unit.name }} - {{ month.name }}</h3>
        
          <h4>{{ unit_rank.name }} - FY {{ financial_year.name }} - {{ financial_quarter.name }}</h4>
        
          <div class="row">
        
            <div class="col-md-6">
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-upload"></i>
                    Upload DCRT Returns
                  </h3>
        
                  <!-- Form for uploading DCRT Returns -->
                  <form method="post" enctype="multipart/form-data" action="{% url 'statistics:upload_unit_monthly_dcrt_excel' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}">
                    {% csrf_token %}
                    <div class="form-group">
                      <label for="excelFile">Select Excel File:</label>
                      <input type="file" name="excelFile" class="form-control-file" id="excelFile" required>
                    </div>
                    <button type="submit" class="btn btn-primary">
                      <i class="fas fa-upload"></i>
                      Upload
                    </button>
                  </form>
                </div>
              </div>
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-chart-bar"></i>
                    Data Summary  
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_case_summary' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Summary
                  </a>
                </div>
              </div>
        
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-list"></i>
                    DCRT Data
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_case_summary' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View DCRT Data
                  </a>
                </div>
              </div>
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-copy"></i>
                    Duplicate Data
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_duplicate_data' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Duplicate Data
                  </a>
                </div>
              </div>
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-chart-line"></i>
                    Data Outliers
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_outliers' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Outliers  
                  </a>
                </div>
              </div>
        
            </div>
        
            <div class="col-md-6">
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-exclamation-circle"></i>
                    Missing Data
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_missing_data' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Missing Data
                  </a>
                </div>
              </div>
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-clipboard-list"></i> 
                    Registered Cases
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_registered_cases' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Registered Cases
                  </a>
                </div>
              </div>
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-check-square"></i>
                    Resolved Cases
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_resolved_cases' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Resolved Cases
                  </a>
                </div>
              </div>
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-balance-scale"></i>
                    Matters Handled
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_matters_handled' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Matters Handled
                  </a>
                </div>
              </div>
        
              <div class="card mb-4">
                <div class="card-body">
                  <h3 class="card-title">
                    <i class="fas fa-exclamation-triangle"></i>
                    Incomplete Data
                  </h3>
                  <a href="{% url 'statistics:monthly_unit_incomplete_data' unit_rank.id financial_year.id financial_quarter.id unit.id division.id month.id %}" class="btn btn-primary btn-sm">
                    View Incomplete Data
                  </a>
                </div>
              </div>
        
            </div>
        
          </div>
        
        </div>
        
        {% endblock %}

. authentication/
  . __init__.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """

  . admin.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """
    
    from django.contrib import admin
    
    # Register your models here.

  . apps.py
    Content:


  . config.py
    Content:
    from django.apps import AppConfig
    
    
    
    class AuthConfig(AppConfig):
        name = 'auth'
        label = "authentication" # <--- Correct label
        
        

  . forms.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """
    
    from django import forms
    from django.contrib.auth.forms import UserCreationForm
    from django.contrib.auth.models import User
    
    
    class LoginForm(forms.Form):
        username = forms.CharField(
            widget=forms.TextInput(
                attrs={
                    "placeholder": "Username",
                    "class": "form-control"
                }
            ))
        password = forms.CharField(
            widget=forms.PasswordInput(
                attrs={
                    "placeholder": "Password",
                    "class": "form-control"
                }
            ))
    
    
    class SignUpForm(UserCreationForm):
        username = forms.CharField(
            widget=forms.TextInput(
                attrs={
                    "placeholder": "Username",
                    "class": "form-control"
                }
            ))
        email = forms.EmailField(
            widget=forms.EmailInput(
                attrs={
                    "placeholder": "Email",
                    "class": "form-control"
                }
            ))
        password1 = forms.CharField(
            widget=forms.PasswordInput(
                attrs={
                    "placeholder": "Password",
                    "class": "form-control"
                }
            ))
        password2 = forms.CharField(
            widget=forms.PasswordInput(
                attrs={
                    "placeholder": "Password check",
                    "class": "form-control"
                }
            ))
    
        class Meta:
            model = User
            fields = ('username', 'email', 'password1', 'password2')

  . models.py
    Content:
          
    from django.db import models
    from django.contrib.auth.models import AbstractUser
    from apps.organization.models import Department  # Correct import path
    
    
    class CustomUser(AbstractUser):
        departments = models.ManyToManyField(Department, related_name='members')
    
        # Add any other fields you need here, e.g.
        first_name = models.CharField(max_length=150, blank=True)
        last_name = models.CharField(max_length=150, blank=True)
        pj_number = models.CharField(max_length=150, blank=True)
        phone = models.CharField(max_length=150, blank=True)
        mobile = models.CharField(max_length=150, blank=True)
    
    
        # OPTIONAL: Add a __str__ method
        def __str__(self):
            return self.username
    
        @property
        def department(self):
            """Get user's primary department based on their active role"""
            user_role = self.user_roles.filter(is_active=True).first()
            if user_role:
                return user_role.role.department
            return None
        
        @property
        def is_director(self):
            """Check if user is a director"""
            return self.user_roles.filter(is_active=True, role__name='Director').exists()
    
        @property
        def is_manager(self):
            """Check if user is a manager"""
            return self.user_roles.filter(is_active=True, role__name='Manager').exists()

  . tests.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """
    
    from django.test import TestCase
    
    # Create your tests here.

  . urls.py
    Content:
    # authentication/urls.py
    from django.urls import path
    from .views import login_view, register_user, view_profile, edit_profile
    from django.contrib.auth.views import LogoutView
    from .views import CustomLogoutView
    from django.urls import include
    
    urlpatterns = [
        path('login/', login_view, name="login"),
        path('register/', register_user, name="register"),
        path("logout/", CustomLogoutView.as_view(), name="logout"),
        path('profile/', view_profile, name='view_profile'),
        path('profile/edit/', edit_profile, name='edit_profile'),
    ]

  . views.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """
    
    # Create your views here.
    from django.shortcuts import render, redirect
    from django.contrib.auth import authenticate, login
    from .forms import LoginForm, SignUpForm
    from django.contrib.auth.views import LogoutView
    
    
    
    #dashboard
    def dashboard(request):
        return render(request, "accounts/dashboard.html")
    
    
    #profile
    def view_profile(request):
        return render(request, "accounts/profile.html")
    
    #edit_profile
    def edit_profile(request):
        return render(request, "accounts/edit_profile.html")
    
    
    def login_view(request):
        form = LoginForm(request.POST or None)
    
        msg = None
    
        if request.method == "POST":
    
            if form.is_valid():
                username = form.cleaned_data.get("username")
                password = form.cleaned_data.get("password")
                user = authenticate(username=username, password=password)
                if user is not None:
                    login(request, user)
                    return redirect("/")
                else:
                    msg = 'Invalid credentials'
            else:
                msg = 'Error validating the form'
    
        return render(request, "accounts/login.html", {"form": form, "msg": msg})
    
    
    def register_user(request):
        msg = None
        success = False
    
        if request.method == "POST":
            form = SignUpForm(request.POST)
            if form.is_valid():
                form.save()
                username = form.cleaned_data.get("username")
                raw_password = form.cleaned_data.get("password1")
                user = authenticate(username=username, password=raw_password)
    
                msg = 'Account created successfully.'
                success = True
    
                # return redirect("/login/")
    
            else:
                msg = 'Form is not valid'
        else:
            form = SignUpForm()
    
        return render(request, "accounts/register.html", {"form": form, "msg": msg, "success": success})
    
    class CustomLogoutView(LogoutView):
        next_page = '/login/'
        
        
        
        

. core/
  . __init__.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """

  . asgi.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """
    
    import os
    
    from django.core.asgi import get_asgi_application
    
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
    
    application = get_asgi_application()

  . custom-auth-backend.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """
    
    from django.contrib.auth import get_user_model
    from django.contrib.auth.backends import ModelBackend
    
    class CustomBackend(ModelBackend):
        def authenticate(self, request, username=None, password=None, **kwargs):
            UserModel = get_user_model()
            try:
                user = UserModel.objects.filter(username=username).first()
                if user is None:
                    user = UserModel.objects.get(email=username)
            except UserModel.DoesNotExist:
                return None
            else:
                if user.check_password(password):
                    return user
            return None

  . settings.py
    Content:
    
    
    import os
    
    
    
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    
    
    
    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
    
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = 'django-insecure-x-7z@n$vgndj+lp*g98&*!#z2shsgah6jgt(%%k1f_%q4@nm9r'
    
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True 
    
    LOGIN_URL = 'authentication:login'  # Correct
    # or 
    LOGIN_URL = '/accounts/login/' # Correct - explicitly specifies
    
    # allow all hosts in development
    ALLOWED_HOSTS = ['127.0.0.1', '0.0.0.0']
    
    
    # Application definition
    
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'authentication', # added the authentication apps
        'apps.home', 
        'django_unicorn',
        'apps.statistics',
        'apps.document_management',
        'apps.organization',
        'apps.budget',
        'apps.meetings',
        'apps.memos',
        'debug_toolbar',
    
    ]
    
    
    
    AUTH_USER_MODEL = 'authentication.CustomUser'
    
    
    
    
    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]
    
    ROOT_URLCONF = 'core.urls'
    LOGIN_REDIRECT_URL = "statistics:home"  # Route defined in statistics/urls.py
    LOGOUT_REDIRECT_URL = "statistics:home"  # Route defined in statistics/urls.py
    TEMPLATE_DIR = os.path.join(BASE_DIR, "apps/templates")  # ROOT dir for templates
    
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    
    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [
                # templates dir then apps 
                TEMPLATE_DIR,
                os.path.join(TEMPLATE_DIR, "apps"),
            ],
        
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                    'apps.context_processors.cfg_assets_root',
                ],
            },
        },
    ]
    
    WSGI_APPLICATION = 'core.wsgi.application'
    
    
    # Database
    # https://docs.djangoproject.com/en/3.2/ref/settings/#databases
    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
    
    # Password validation
    # https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
    
    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]
    
    
    # Internationalization
    # https://docs.djangoproject.com/en/3.2/topics/i18n/
    
    LANGUAGE_CODE = 'en-us'
    
    TIME_ZONE = 'UTC'
    
    USE_I18N = True
    
    USE_L10N = True
    
    USE_TZ = True
    
    STATIC_URL = '/static/'
    #STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    
    MEDIA_ROOT = os.path.join(BASE_DIR, 'static', 'media')
    MEDIA_URL = '/media/'
    
    
    # Extra places for collectstatic to find static files.
    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, 'static'),
    )
    
    
    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/3.2/howto/static-files/
    
    ASSETS_ROOT = '/static/assets'
    
    
    # FILE_UPLOAD_MAX_MEMORY_SIZE 8GB
    FILE_UPLOAD_MAX_MEMORY_SIZE = 8589934592
    
    
    
    # Default primary key field type
    # https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
    
    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
    
    PINECONE_API_KEY = os.getenv('PINECONE_API_KEY')
    
    OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
    
    
    # coomand tto create new migrations using docker-compose
    # docker-compose run web python manage.py makemigrations
    
    
    
    # Enable logging in all environments
    # https://docs.djangoproject.com/en/3.2/topics/logging/#configuring-logging
    
    import os
    
    LOGS_DIR = os.path.join(BASE_DIR, 'logs')
    os.makedirs(LOGS_DIR, exist_ok=True)
    
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
            'file': {
                'level': 'DEBUG',
                'class': 'logging.FileHandler',
                'filename': os.path.join(LOGS_DIR, 'debug.log'),
            },
        },
        'loggers': {
            'django': {
                'handlers': ['console', 'file'],
                'level': 'ERROR',
                'propagate': True,
            },
        },
    }
    
    
    # Google Drive settings
    GOOGLE_OAUTH_CLIENT_SECRETS_FILE = os.path.join(BASE_DIR, 'client_secrets.json')
    GOOGLE_OAUTH_REDIRECT_URI = 'http://your-domain/documents/google-auth-callback/'

  . urls.py
    Content:
    # core/urls.py
    from django.contrib import admin
    from django.urls import path, include
    from authentication import views
    from django.conf import settings
    from django.conf.urls.static import static
    
    urlpatterns = [
        path('admin/', admin.site.urls),
        path('accounts/', include('authentication.urls')),  # <--- Ensure THIS line is here
        path("statistics/", include("apps.statistics.urls", namespace="statistics")),
        path('login/', views.login_view, name='login'),
        path('budget/', include('apps.budget.urls', namespace='budget')),
        path('meetings/', include('apps.meetings.urls', namespace='meetings')),
        path('memos/', include('apps.memos.urls', namespace='memos')),
        path("unicorn/", include("django_unicorn.urls")),
        path("", include("apps.home.urls")),
    ]
    
    if settings.DEBUG:
        import debug_toolbar
        urlpatterns = [
            path("__debug__/", include(debug_toolbar.urls)),
        ] + urlpatterns

  . wsgi.py
    Content:
    # -*- encoding: utf-8 -*-
    """
    Copyright (c) 2019 - present AppSeed.us
    """
    
    import os
    
    from django.core.wsgi import get_wsgi_application
    
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
    
    application = get_wsgi_application()

. docker-compose.yml
  Content:
  services:
    db:
      image: postgres:14
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_=${POSTGRES_}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      ports:
        - "5433:5432"
      networks:
        - app_network
  
    web:
      build: .
      command: python manage.py runserver 0.0.0.0:8005
      volumes:
        - .:/code
        - static_volume:/code/static
        - media_volume:/code/media
      ports:
        - "8005:8005"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_=${POSTGRES_}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_PORT=${POSTGRES_PORT}
        - DEBUG=${DEBUG}
      depends_on:
        - db
      networks:
        - app_network
  
  networks:
    app_network:
      driver: bridge
  
  volumes:
    postgres_data:
    static_volume:
    media_volume:

. entrypoint.sh
  Content:
  #!/bin/sh
  
  # Wait for postgres
  until nc -z $POSTGRES_HOST $POSTGRES_PORT; do
      echo "Waiting for postgres..."
      sleep 1
  done
  
  echo "PostgreSQL started"
  
  # Run migrations
  python manage.py migrate
  
  # Start server
  exec python manage.py runserver 0.0.0.0:8005

. env.sample
  Content:
  # True for development, False for production
  DEBUG=True
  
  # Deployment SERVER address
  SERVER=.appseed.us
  
  # Used for CDN (in production)
  # No Slash at the end
  ASSETS_ROOT=/static/assets
  
  # If present, the SignIN exposes the Github Login Button
  # GITHUB_ID=<YOUR_GITHUB_ID>
  # GITHUB_SECRET=<YOUR_GITHUB_SECRET>
  
  # For MySql Persistence
  # DB_ENGINE=mysql
  # DB_NAME=appseed_db
  # DB_HOST=localhost
  # DB_PORT=3306
  # DB_USERNAME=appseed_db_usr
  # DB_PASS=<STRONG_PASS>

. ewakili
  Content:
  Unable to read file: 'utf-8' codec can't decode byte 0x9b in position 27: invalid start byte

. logs/
. manage.py
  Content:
  #!/usr/bin/env python
  """Django's command-line utility for administrative tasks."""
  import os
  import sys
  
  
  def main():
      """Run administrative tasks."""
      os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
      try:
          from django.core.management import execute_from_command_line
      except ImportError as exc:
          raise ImportError(
              "Couldn't import Django. Are you sure it's installed and "
              "available on your PYTHONPATH environment variable? Did you "
              "forget to activate a virtual environment?"
          ) from exc
      execute_from_command_line(sys.argv)
  
  
  if __name__ == '__main__':
      main()

. media/
. requirements.txt
  Content:
  # Core Django requirements
  Django>=3.0,<4.0
  djangorestframework
  django-environ==0.8.1
  django-allauth==0.51.0
  django-sslserver
  django-q
  django-storages
  django-unicorn
  django-debug-toolbar
  django-webpack-loader
  django_pandas
  dj-database-url==0.5.0
  
  # Database
  psycopg2>=2.8
  
  # Google API packages
  google-auth
  google-auth-oauthlib
  google-auth-httplib2
  google-api-python-client
  
  # Python utilities
  python-docx
  openpyxl
  asgiref==3.4.1
  autopep8==1.6.0
  gunicorn==20.1.0
  pycodestyle==2.8.0
  pytz==2021.3
  sqlparse==0.4.2
  toml==0.10.2
  Unipath==1.1
  whitenoise==5.3.0
  
  # AI/ML packages
  pinecone-client
  langchain
  
  

